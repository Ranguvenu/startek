{"version":3,"file":"newinstitute.min.js","sources":["../src/newinstitute.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_location/location\n * @class      NewInstitute\n * @package    local_location\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n\n    /**\n     * Constructor\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @param {int} contextid\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var NewInstitute = function(args) {\n        this.contextid = args.contextid;\n\n\n        this.instituteid = args.instituteid;\n        var self = this;\n        self.init(args.selector);\n    };\n\n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    NewInstitute.prototype.modal = null;\n\n    /**\n     * @var {int} contextid\n     * @private\n     */\n    NewInstitute.prototype.contextid = -1;\n\n    /**\n     * Initialise the class.\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @private\n     * @return {Promise}\n     */\n    NewInstitute.prototype.init = function(args) {\n        console.log(args);\n        //var triggers = $(selector);\n        var self = this;\n\n\n\n        // Fetch the title string.\n        // $('.'+args.selector).click(function(){\n\n\n            var editid = $(this).data('value');\n            if (editid) {\n                self.instituteid = editid;\n                console.log(self.instituteid);\n                alert(self.instituteid);\n            }\n            if(this.instituteid){\n                var head = Str.get_string('updateinstitute', 'local_location');\n            }else{\n                var head = Str.get_string('adnewinstitute', 'local_location');\n            }\n            return head.then(function(title) {\n                // Create the modal.\n                return ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: title,\n                    body: self.getBody()\n                });\n            }.bind(self)).then(function(modal) {\n\n                // Keep a reference to the modal.\n                self.modal = modal;\n                // self.modal.show();\n                // Forms are big, we want a big modal.\n                self.modal.setLarge();\n                this.modal.getRoot().addClass('openLMStransition');\n\n                // We want to reset the form every time it is opened.\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\n                    this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 5000);\n                }.bind(this));\n\n                // We want to hide the submit buttons every time it is opened.\n                self.modal.getRoot().on(ModalEvents.shown, function() {\n                    self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n                    this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                        modal.hide();\n                        setTimeout(function(){\n                            modal.destroy();\n                        }, 5000);\n                        // modal.destroy();\n                    });\n                }.bind(this));\n\n\n                // We catch the modal save event, and use it to submit the form inside the modal.\n                // Triggering a form submission will give JS validation scripts a chance to check for errors.\n                self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n                // We also catch the form submit event and use it to submit the form with ajax.\n                self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n                self.modal.show();\n                this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n                return this.modal;\n            }.bind(this));\n\n\n        // });\n\n    };\n\n    /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    NewInstitute.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        // alert(formdata);\n        // Get the content of the modal.\n        var params = {instituteid:this.instituteid, jsonformdata: JSON.stringify(formdata)};\n        return Fragment.loadFragment('local_location', 'new_instituteform', this.contextid, params);\n    };\n\n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {Promise}\n     */\n    NewInstitute.prototype.handleFormSubmissionResponse = function() {\n        this.modal.hide();\n        // We could trigger an event instead.\n        // Yuk.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        document.location.reload();\n    };\n\n    /**\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    NewInstitute.prototype.handleFormSubmissionFailure = function(data) {\n        // Oh noes! Epic fail :(\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n\n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    NewInstitute.prototype.submitFormAjax = function(e) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n\n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n        // alert(this.contextid);\n        // Now we can continue...\n        Ajax.call([{\n            methodname: 'local_location_submit_instituteform_form',\n            args: {contextid: this.contextid, jsonformdata: JSON.stringify(formData)},\n            done: this.handleFormSubmissionResponse.bind(this, formData),\n            fail: this.handleFormSubmissionFailure.bind(this, formData)\n        }]);\n    };\n\n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    NewInstitute.prototype.submitForm = function(e) {\n        e.preventDefault();\n        var self = this;\n        self.modal.getRoot().find('form').submit();\n    };\n\n    return /** @alias module:local_location/newlocation */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n         * @param {int} contextid The contextid for the course.\n         * @return {Promise}\n         */\n        init: function(args) {\n\n            // alert(args.contextid);\n            return new NewInstitute(args);\n        },\n        load: function(){\n\n        }\n    };\n});"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","NewInstitute","args","contextid","instituteid","this","init","selector","prototype","modal","console","log","self","editid","data","alert","head","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","setLarge","getRoot","addClass","on","hidden","animate","setTimeout","destroy","shown","append","getFooter","find","hide","save","submitForm","submitFormAjax","show","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","setBody","e","preventDefault","formData","serialize","call","methodname","done","fail","submit","load"],"mappings":";;;;;;;;AAQAA,qCAAO,CAAC,SAAU,WAAY,qBAAsB,oBAAqB,gBAAiB,YAAa,aAC/F,SAASC,EAAGC,IAAKC,aAAcC,YAAaC,SAAUC,KAAMC,OAU5DC,aAAe,SAASC,WACnBC,UAAYD,KAAKC,eAGjBC,YAAcF,KAAKE,YACbC,KACNC,KAAKJ,KAAKK,kBAOnBN,aAAaO,UAAUC,MAAQ,KAM/BR,aAAaO,UAAUL,WAAa,EASpCF,aAAaO,UAAUF,KAAO,SAASJ,MACnCQ,QAAQC,IAAIT,UAERU,KAAOP,KAQHQ,OAASnB,EAAEW,MAAMS,KAAK,YACtBD,SACAD,KAAKR,YAAcS,OACnBH,QAAQC,IAAIC,KAAKR,aACjBW,MAAMH,KAAKR,cAEZC,KAAKD,gBACAY,KAAOrB,IAAIsB,WAAW,kBAAmB,uBAEzCD,KAAOrB,IAAIsB,WAAW,iBAAkB,yBAEzCD,KAAKE,KAAK,SAASC,cAEfvB,aAAawB,OAAO,CACvBC,KAAMzB,aAAa0B,MAAMC,YACzBJ,MAAOA,MACPK,KAAMZ,KAAKa,aAEjBC,KAAKd,OAAOM,KAAK,SAAST,cAGxBG,KAAKH,MAAQA,MAGbG,KAAKH,MAAMkB,gBACNlB,MAAMmB,UAAUC,SAAS,0BAGzBpB,MAAMmB,UAAUE,GAAGjC,YAAYkC,OAAQ,gBACnCtB,MAAMmB,UAAUI,QAAQ,OAAS,QAAS,KAC/CC,YAAW,WACPxB,MAAMyB,YACP,MACLR,KAAKrB,OAGPO,KAAKH,MAAMmB,UAAUE,GAAGjC,YAAYsC,MAAO,WACvCvB,KAAKH,MAAMmB,UAAUQ,OAAO,8EACvB3B,MAAM4B,YAAYC,KAAK,0BAA0BR,GAAG,SAAS,WAC9DrB,MAAM8B,OACNN,YAAW,WACPxB,MAAMyB,YACP,SAGTR,KAAKrB,OAKPO,KAAKH,MAAMmB,UAAUE,GAAGjC,YAAY2C,KAAM5B,KAAK6B,WAAWf,KAAKd,OAE/DA,KAAKH,MAAMmB,UAAUE,GAAG,SAAU,OAAQlB,KAAK8B,eAAehB,KAAKd,OACnEA,KAAKH,MAAMkC,YACNlC,MAAMmB,UAAUI,QAAQ,OAAS,MAAO,KACtC3B,KAAKI,OACdiB,KAAKrB,QAYfJ,aAAaO,UAAUiB,QAAU,SAASmB,eACd,IAAbA,WACPA,SAAW,QAIXC,OAAS,CAACzC,YAAYC,KAAKD,YAAa0C,aAAcC,KAAKC,UAAUJ,kBAClE9C,SAASmD,aAAa,iBAAkB,oBAAqB5C,KAAKF,UAAW0C,SAQxF5C,aAAaO,UAAU0C,6BAA+B,gBAC7CzC,MAAM8B,OAGXvC,EAAEmD,IAAI,iCAAiC,WACnCC,EAAEC,uBAAuBC,4BAE7BC,SAASC,SAASC,UAQtBxD,aAAaO,UAAUkD,4BAA8B,SAAS5C,WAGrDL,MAAMkD,QAAQtD,KAAKoB,QAAQX,QAUpCb,aAAaO,UAAUkC,eAAiB,SAASkB,GAE7CA,EAAEC,qBAGEC,SAAWzD,KAAKI,MAAMmB,UAAUU,KAAK,QAAQyB,YAGjDhE,KAAKiE,KAAK,CAAC,CACPC,WAAY,2CACZ/D,KAAM,CAACC,UAAWE,KAAKF,UAAW2C,aAAcC,KAAKC,UAAUc,WAC/DI,KAAM7D,KAAK6C,6BAA6BxB,KAAKrB,KAAMyD,UACnDK,KAAM9D,KAAKqD,4BAA4BhC,KAAKrB,KAAMyD,cAW1D7D,aAAaO,UAAUiC,WAAa,SAASmB,GACzCA,EAAEC,iBACSxD,KACNI,MAAMmB,UAAUU,KAAK,QAAQ8B,UAGiB,CAUnD9D,KAAM,SAASJ,aAGJ,IAAID,aAAaC,OAE5BmE,KAAM"}