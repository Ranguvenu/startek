{"version":3,"file":"departmentview.min.js","sources":["../src/departmentview.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_costcenter/costcenter\n * @package    local_costcenter\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/fragment', 'core/ajax', 'core/yui'],\n        function($, Str, ModalFactory, Fragment, Ajax, Y) {\n \n    /**\n     * Constructor\n     *\n     * @param {object} args\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var departmentview = function(args) {\n        this.contextid = args.contextid;\n        var self = this;\n        self.init();\n    };\n \n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    departmentview.prototype.modal = null;\n \n    /**\n     * @var {int} contextid\n     * @private\n     */\n    departmentview.prototype.contextid = -1;\n \n    /**\n     * Initialise the class.\n     *\n     * @private\n     * @return {Promise}\n     */\n    departmentview.prototype.init = function() {\n        var self = this;\n        \n        var head = Str.get_string('fieldlabel', 'local_costcenter');\n\n        return head.then(function(title) {\n            // Create the modal.\n            return ModalFactory.create({\n                type: ModalFactory.types.DEFAULT,\n                title: title,\n                body: self.getBody(),\n                footer: self.getFooter(),\n            });\n        }.bind(self)).then(function(modal) {\n            \n            // Keep a reference to the modal.\n            self.modal = modal;\n            //to hide close button\n            modal.getRoot().find('[data-action=\"hide\"]').css('display', 'none');\n\n            modal.getFooter().find('[data-action=\"save\"]').on('click', this.submitForm.bind(this));\n\n            modal.getRoot().on('submit', 'form', function(form) {\n                self.submitFormAjax(form, self.args);\n            });\n            this.modal.show();\n\n            // do not close the modal, if we click anywhere in the page\n            modal.getRoot().click(function(e) {\n                this.modal.show();\n            }.bind(this));\n\n\n            return this.modal;\n\n        }.bind(this));\n        \n    };\n \n    /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    departmentview.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        // Get the content of the modal.\n        var params = {jsonformdata: JSON.stringify(formdata)};\n        return Fragment.loadFragment('local_costcenter', 'departmentview', this.contextid, params);\n    };\n\n    departmentview.prototype.getFooter = function() {\n\t\tvar sub = Str.get_string('submit', 'local_costcenter');\n        $footer = '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">'+sub+'</button>&nbsp;';\n        return $footer;\n    };\n \n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {Promise}\n     */\n    departmentview.prototype.handleFormSubmissionResponse = function() {\n        this.modal.hide();\n        // We could trigger an event instead.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        document.location.reload();\n    };\n \n    /**\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    departmentview.prototype.handleFormSubmissionFailure = function(data) {\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n\n    departmentview.prototype.submitForm = function(e) {\n        e.preventDefault();\n        this.modal.getRoot().find('form').submit();\n    };\n \n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    departmentview.prototype.submitFormAjax = function(e) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n        var self = this;\n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n        var methodname = 'local_costcenter_departmentview',\n        params = {};\n        params.jsonformdata = JSON.stringify(formData);\n        var promise = Ajax.call([{\n            methodname: methodname,\n            args: params\n        }]);\n        promise[0].done(function(resp){\n            // self.handleFormSubmissionResponse(self.args);\n            self.handleFormSubmissionResponse(formData);\n        }).fail(function(){\n            // self.handleFormSubmissionFailure(formData);\n            self.handleFormSubmissionFailure(formData);\n        });\n    };\n \n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    departmentview.prototype.submitForm = function(e) {\n        e.preventDefault();\n        var self = this;\n        self.modal.getRoot().find('form').submit();\n    };\n    return /** @alias module:local_costcenter/departmentview */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {object} args\n         * @return {Promise}\n        */\n        init: function(args) {\n            return new departmentview(args);\n        },\n        load: function(){\n            // return new departmentview(args);\n        },\n    };\n});"],"names":["define","$","Str","ModalFactory","Fragment","Ajax","Y","departmentview","args","contextid","this","init","prototype","modal","self","get_string","then","title","create","type","types","DEFAULT","body","getBody","footer","getFooter","bind","getRoot","find","css","on","submitForm","form","submitFormAjax","show","click","e","formdata","params","jsonformdata","JSON","stringify","loadFragment","sub","$footer","handleFormSubmissionResponse","hide","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","data","setBody","preventDefault","submit","formData","serialize","call","methodname","done","resp","fail","load"],"mappings":";;;;;;;AAOAA,yCAAO,CAAC,SAAU,WAAY,qBAAsB,gBAAiB,YAAa,aAC1E,SAASC,EAAGC,IAAKC,aAAcC,SAAUC,KAAMC,OAS/CC,eAAiB,SAASC,WACrBC,UAAYD,KAAKC,UACXC,KACNC,eAOTJ,eAAeK,UAAUC,MAAQ,KAMjCN,eAAeK,UAAUH,WAAa,EAQtCF,eAAeK,UAAUD,KAAO,eACxBG,KAAOJ,YAEAR,IAAIa,WAAW,aAAc,oBAE5BC,KAAK,SAASC,cAEfd,aAAae,OAAO,CACvBC,KAAMhB,aAAaiB,MAAMC,QACzBJ,MAAOA,MACPK,KAAMR,KAAKS,UACXC,OAAQV,KAAKW,eAEnBC,KAAKZ,OAAOE,KAAK,SAASH,cAGxBC,KAAKD,MAAQA,MAEbA,MAAMc,UAAUC,KAAK,wBAAwBC,IAAI,UAAW,QAE5DhB,MAAMY,YAAYG,KAAK,wBAAwBE,GAAG,QAASpB,KAAKqB,WAAWL,KAAKhB,OAEhFG,MAAMc,UAAUG,GAAG,SAAU,QAAQ,SAASE,MAC1ClB,KAAKmB,eAAeD,KAAMlB,KAAKN,cAE9BK,MAAMqB,OAGXrB,MAAMc,UAAUQ,MAAM,SAASC,QACtBvB,MAAMqB,QACbR,KAAKhB,OAGAA,KAAKG,OAEda,KAAKhB,QASXH,eAAeK,UAAUW,QAAU,SAASc,eAChB,IAAbA,WACPA,SAAW,QAGXC,OAAS,CAACC,aAAcC,KAAKC,UAAUJ,kBACpCjC,SAASsC,aAAa,mBAAoB,iBAAkBhC,KAAKD,UAAW6B,SAGvF/B,eAAeK,UAAUa,UAAY,eACnCkB,IAAMzC,IAAIa,WAAW,SAAU,2BAC7B6B,QAAU,oEAAoED,IAAI,kBAC3EC,SAQXrC,eAAeK,UAAUiC,6BAA+B,gBAC/ChC,MAAMiC,OAEXxC,EAAEyC,IAAI,iCAAiC,WACnCC,EAAEC,uBAAuBC,4BAE7BC,SAASC,SAASC,UAQtB9C,eAAeK,UAAU0C,4BAA8B,SAASC,WAEvD1C,MAAM2C,QAAQ9C,KAAKa,QAAQgC,QAGpChD,eAAeK,UAAUmB,WAAa,SAASK,GAC3CA,EAAEqB,sBACG5C,MAAMc,UAAUC,KAAK,QAAQ8B,UAUtCnD,eAAeK,UAAUqB,eAAiB,SAASG,GAE/CA,EAAEqB,qBACE3C,KAAOJ,KAEPiD,SAAWjD,KAAKG,MAAMc,UAAUC,KAAK,QAAQgC,YAEjDtB,OAAS,GACTA,OAAOC,aAAeC,KAAKC,UAAUkB,UACvBtD,KAAKwD,KAAK,CAAC,CACrBC,WAJa,kCAKbtD,KAAM8B,UAEF,GAAGyB,MAAK,SAASC,MAErBlD,KAAK+B,6BAA6Bc,aACnCM,MAAK,WAEJnD,KAAKwC,4BAA4BK,cAWzCpD,eAAeK,UAAUmB,WAAa,SAASK,GAC3CA,EAAEqB,iBACS/C,KACNG,MAAMc,UAAUC,KAAK,QAAQ8B,UAEsB,CASxD/C,KAAM,SAASH,aACJ,IAAID,eAAeC,OAE9B0D,KAAM"}