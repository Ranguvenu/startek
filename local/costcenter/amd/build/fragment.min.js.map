{"version":3,"file":"fragment.min.js","sources":["../src/fragment.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_courses/courseAjaxform\n * @class      courseAjaxform\n * @package    local_courses\n * @copyright  2018 Sreenivas\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n        'core/str',\n        'core/modal_factory',\n        'core/modal_events',\n        'core/fragment',\n        'core/ajax',\n        'core/yui',\n        'core/templates',\n        'core/notification',\n        'core/custom_interaction_events',\n        /*'local_kpi/smarttable'*/],\n        function($, Str, ModalFactory, ModalEvents, fragment, Ajax, Y, Templates, Notification, CustomEvents/*, Smarttable*/) {\n        var SELECTORS = {\n            ELEMENT: '[data-fg]',\n        };\n        var DATAATTRIBUTES = {\n            ELEFG: 'fg',\n            PLUGIN: 'plugin',\n            METHOD: 'method',\n            PARAMS: 'params'\n        }\n        var Fragment = function(fgelement) {\n            this.contextid = M.cfg.contextid;\n            this.fgelement = fgelement;\n            this.id = fgelement.data('id') || 0;\n            this.pluginname = fgelement.data(DATAATTRIBUTES.PLUGIN);\n            this.method = fgelement.data(DATAATTRIBUTES.METHOD);\n            this.level = fgelement.data(DATAATTRIBUTES.ELEFG);\n            this.args = {};\n            this.args.contextid = this.contextid;\n            this.args.id = this.id;\n            var params = {};\n            if (typeof fgelement.data(DATAATTRIBUTES.PARAMS) !== 'undefined') {\n                params = fgelement.data(DATAATTRIBUTES.PARAMS);\n            }\n            this.args.params = JSON.stringify(params);\n            this.init();\n        };\n\n        Fragment.prototype.contextid = -1;\n\n        Fragment.prototype.id = 0;\n\n        Fragment.prototype.level = 'c';\n\n        Fragment.prototype.strings = {};\n\n        Fragment.prototype.args = {};\n\n        Fragment.prototype.init = function () {\n            var self = this;\n            var stringsPromise = this.getStrings();\n            var type = ModalFactory.types.SAVE_CANCEL;\n            if (self.level == 'r') {\n                type = ModalFactory.types.DEFAULT;\n            }\n            var modalPromise = ModalFactory.create({\n                type: type\n            });\n            $.when(stringsPromise, modalPromise).then(function(strings, modal) {\n                // Keep a reference to the modal.\n                this.modal = modal;\n\n                this.modal.setTitle(strings[0]);\n                // Forms are big, we want a big modal.\n\n                // We want to reset the form every time it is opened.\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\n                    this.modal.destroy();\n                }.bind(this));\n\n                if (self.level == 'd') {\n                    this.modal.setBody(strings[1]);\n                    this.modal.getRoot().on(ModalEvents.save, function() {\n                        self.deleteInstance();\n                    });\n                } else {\n                    this.modal.setBody(this.getBody());\n                    this.modal.setLarge();\n                    // We catch the modal save event, and use it to submit the form inside the modal.\n                    // Triggering a form submission will give JS validation scripts a chance to check for errors.\n                    this.modal.getRoot().on(ModalEvents.save, this.submitForm.bind(this));\n                    // We also catch the form submit event and use it to submit the form with ajax.\n                    this.modal.getRoot().on('submit', 'form', this.submitFormAjax.bind(this));\n                }\n                if(self.method == 'evaluation_update_status' || self.method == 'course_update_status'){\n                    this.modal.setSaveButtonText(strings[0]);\n                }else if(self.level != 'r'){\n                    this.modal.setSaveButtonText(strings[1]);\n                }\n                \n\n                // return this.modal;\n                this.modal.show();\n                // modal.getRoot().click(function(e) {\n                //     e.preventDefault();\n                //     // alert('here');\n                //     this.modal.show();\n                // }.bind(this));\n                this.modal.getRoot().on(ModalEvents.bodyRendered, function() {\n                    if (self.level == 'r' && (self.method == 'peer_allocation_status' || self.method == 'peer_badge_status')){\n                        // Smarttable.init();\n                    }else if(self.level == 'u' && self.method == 'addnew_question'){\n                        var params = JSON.parse(this.args.params);\n                        var itemid = params.itemid;\n                        var evalid = params.evalid;\n                        var promise = Ajax.call([{\n                            methodname: 'local_evaluation_displayquestion',\n                            args: {\n                                itemid: itemid,\n                                evalid: evalid,\n                                typ:0\n                            },\n                            }]);\n                        promise[0].done(function(resp) {\n                                $('#displayform').html(resp.formdata);\n                        }).fail(function() {\n                            // do something with the exception\n                            alert('Error occured while processing request');\n                            // window.location.reload();\n                        });\n                        $('#select_question_type_survey').addClass('hidden');\n                    }\n                }.bind(this));\n                if((self.level == 'c' || self.level == 'u') && self.method != 'evaluation_update_status'){\n                    self.modal.getRoot().addClass('openLMStransition costcenter');\n                    this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n                    this.modal.getRoot().on(ModalEvents.hidden, function() {\n                    //this.modal.destroy();\n                    this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                    setTimeout(function(){\n                    modal.destroy();\n                    }, 1000);\n                    }.bind(this));\n                }\n            }.bind(this));\n        };\n        /**\n         * [getStrings description]\n         * @method getStrings\n         * @param  {[type]}   StringData [description]\n         * @return {[type]}              [description]\n         */\n        Fragment.prototype.getStrings = function() {\n            var self = this;\n            var StringData = this.requiredStrings();\n            var RequiredStrings = [];\n            var i = 0;\n            $.each (StringData, function(key, value) {\n                RequiredStrings[i] = {key: key, component: self.pluginname, param: value};\n                i++;\n            });\n            var stringsPromise = Str.get_strings(RequiredStrings);\n            return stringsPromise;\n        };\n\n        /**\n         * @method getBody\n         * @private\n         * @return {Promise}\n         */\n        Fragment.prototype.getBody = function(formdata) {\n            if (typeof formdata === \"undefined\") {\n                formdata = {};\n            }\n            // Get the content of the modal.\n            this.args.jsonformdata = JSON.stringify(formdata);\n            return fragment.loadFragment(this.pluginname, this.method, this.contextid, this.args);\n        };\n\n        /**\n         * @method handleFormSubmissionResponse\n         * @private\n         * @return {Promise}\n         */\n        Fragment.prototype.handleFormSubmissionResponse = function() {\n            this.modal.hide();\n            // We could trigger an event instead.\n            // Yuk.\n            Y.use('moodle-core-formchangechecker', function() {\n                M.core_formchangechecker.reset_form_dirty_state();\n            });\n            // if(this.method == 'create_badge') {\n            //     var params = JSON.parse(this.args.params);\n            //     var badgetype = params.badgetype;\n            //     var accountid = params.accountid;\n            //     if(typeof badgetype == 'undefined'){\n            //         var formcontent = this.modal.getRoot().find('form').serializeArray();\n            //         var accountid = '';\n            //         var badgetype = '';\n            //         $.each(formcontent, function() {\n            //             if(this.name == 'costcenterid'){\n            //                 accountid = this.value;\n            //             }else if(this.name == 'type'){\n            //                 badgetype = this.value;\n            //             }\n            //         });\n            //         $(\"#badgeaccountselect\").val(accountid);\n            //         var element = $(\".nav-item.badgetype\");\n            //         $.each(element, function(){\n            //             $(this).data('accountid', accountid);\n            //         });\n            //         $('.gamificationtab').removeClass('active');\n            //         $(\"[data-badgetype='\"+badgetype+\"'] .gamificationtab\").addClass('active');\n            //         // var badgedefault = $(\".nav-item.badgetype .active\").parent();\n            //         // var badgetype = badgedefault.data('badgetype');\n            //         // var accountid = badgedefault.data('accountid');\n            //     }\n            //     $.ajax({\n            //         method: \"POST\",\n            //         dataType: \"json\",\n            //         url:M.cfg.wwwroot+\"/blocks/gamification/customajax.php\",\n            //         data: {action: \"get_badge_table\", accountid: accountid, type: badgetype},\n            //         success: function(data){\n            //             $('#badge_content').html(data);\n            //         }\n            //     });\n            // } else if(this.method == 'award_peer_badge'){\n                \n            // } else {\n                document.location.reload();\n            // }\n        };\n\n        /**\n         * @method handleFormSubmissionFailure\n         * @private\n         * @return {Promise}\n         */\n        Fragment.prototype.handleFormSubmissionFailure = function(data) {\n            // Oh noes! Epic fail :(\n            // Ah wait - this is normal. We need to re-display the form with errors!\n            this.modal.setBody(this.getBody(data));\n        };\n\n        /**\n         * Private method\n         *\n         * @method submitFormAjax\n         * @private\n         * @param {Event} e Form submission event.\n         */\n        Fragment.prototype.submitFormAjax = function(e) {\n            // We don't want to do a real form submission.\n            e.preventDefault();\n            var self = this;\n            // Convert all the form elements values to a serialised string.\n            var formData = this.modal.getRoot().find('form').serialize();\n            this.args.jsonformdata = JSON.stringify(formData);\n            // Now we can continue...\n            var promise = Ajax.call([{\n                methodname: this.pluginname + '_' + this.method,\n                args: this.args,\n                // done: this.handleFormSubmissionResponse.bind(this, formData),\n                // fail: this.handleFormSubmissionFailure.bind(this, formData)\n            }]);\n             promise[0].done(function(resp){\n        \n                if (resp.nextstep) {\n                    self.modal.destroy();\n                    self.args.id = resp.id;\n                    self.init(self.fgelement);\n                    self.method = resp.method;\n                } else {\n                    // self.modal.destroy();\n                     //window.location.reload();\n                    self.handleFormSubmissionResponse(formData);\n                }\n            }).fail(function(ex){\n                self.handleFormSubmissionFailure(formData);\n            });\n        };\n\n        /**\n         * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n         *\n         * @method submitForm\n         * @param {Event} e Form submission event.\n         * @private\n         */\n        Fragment.prototype.submitForm = function(e) {\n            e.preventDefault();\n            this.modal.getRoot().find('form').submit();\n        };\n\n        Fragment.prototype.deleteInstance = function() {\n            var self = this;\n            Ajax.call([{\n                methodname: this.pluginname + '_' + this.method,\n                args: this.args\n            }])[0].done(function(data){\n                self.handleSubmissionResponse(data);\n            }).fail(function(error){\n                self.handleSubmissionFailure(error);\n            });\n        };\n        /**\n         * @method handleFormSubmissionResponse\n         * @private\n         * @return {Promise}\n         */\n        Fragment.prototype.handleSubmissionResponse = function() {\n            this.modal.destroy();\n           Notification.addNotification({\n                message: 'Success',\n                type: \"success\"\n            }); \n            if(this.method == 'evaluation_update_status' || this.method == 'course_update_status'){\n                window.location.reload();\n                $('form#filteringform.mform #id_filter_apply').trigger('click');\n            }\n        };\n\n        /**\n         * @method handleFormSubmissionFailure\n         * @private\n         * @return {Promise}\n         */\n        Fragment.prototype.handleSubmissionFailure = function(error) {\n            this.modal.destroy();\n            Notification.addNotification({\n                message: error.message,\n                type: \"error\"\n            });\n        };\n\n        Fragment.prototype.requiredStrings = function() {\n            var StringData = {};\n            var PluginModule = require(this.pluginname  + '/' + this.pluginname.split('_')[1]);\n            if (typeof PluginModule.requiredStrings === 'function') {\n                StringData = PluginModule.requiredStrings(this);\n            }\n            switch (this.method) {\n                case 'addnew_question':\n                    switch(this.level){\n                        case 'c':\n                            StringData.le_createnewquestion = 'le_createnewquestion';\n                            StringData.le_create = 'le_create';\n                        break;\n                        case 'u':\n                            StringData.le_updatequestion = 'le_updatequestion';\n                            StringData.le_update = 'le_update';\n                        break;\n                    }\n                break;\n                case 'evaluation_update_status':\n                    StringData.confirm = '';\n                    var localparams = JSON.parse(this.args.params);\n                    var evalstatus = localparams.eval_status;\n                    var evalname = localparams.evalname;\n                    var published = localparams.published;\n                    // if(published == 0){\n                    //     StringData.publishevaluation = evalname;\n                    // }else{\n                        if(evalstatus == 1){\n                            StringData.hideevaluation = evalname;\n                        }else{\n                            StringData.showevaluation = evalname;\n                        }\n                    // }\n                break;\n                case 'course_update_status':\n                    StringData.courseconfirm = '';\n                    var localparams = JSON.parse(this.args.params);\n                    var coursename = localparams.coursename;\n                    var coursestatus = localparams.coursestatus\n                    if(coursestatus == 1){\n                        StringData.disablecourse = coursename;\n                    }else{\n                        StringData.enablecourse = coursename;\n\n                    }\n                break; \n                default:\n                break;\n            }\n            this.strings = StringData;\n            return StringData;\n        };\n    return {\n        init: function() {\n            $(document).on('click', SELECTORS.ELEMENT, function(e) {\n                e.preventDefault();\n                var fgelement = $(this);\n                var callFragment = new Fragment(fgelement);\n            });\n        }\n    };\n});"],"names":["define","$","Str","ModalFactory","ModalEvents","fragment","Ajax","Y","Templates","Notification","CustomEvents","SELECTORS","DATAATTRIBUTES","Fragment","fgelement","contextid","M","cfg","id","data","pluginname","method","level","args","this","params","JSON","stringify","init","prototype","strings","self","stringsPromise","getStrings","type","types","SAVE_CANCEL","DEFAULT","modalPromise","create","when","then","modal","setTitle","getRoot","on","hidden","destroy","bind","setBody","save","deleteInstance","getBody","setLarge","submitForm","submitFormAjax","setSaveButtonText","show","bodyRendered","parse","itemid","evalid","call","methodname","typ","done","resp","html","formdata","fail","alert","addClass","animate","setTimeout","StringData","requiredStrings","RequiredStrings","i","each","key","value","component","param","get_strings","jsonformdata","loadFragment","handleFormSubmissionResponse","hide","use","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","e","preventDefault","formData","find","serialize","nextstep","ex","submit","handleSubmissionResponse","error","handleSubmissionFailure","addNotification","message","window","trigger","PluginModule","require","split","le_createnewquestion","le_create","le_updatequestion","le_update","confirm","evalstatus","localparams","eval_status","evalname","published","hideevaluation","showevaluation","courseconfirm","coursename","coursestatus","disablecourse","enablecourse"],"mappings":";;;;;;;;;AASAA,mCAAO,CAAC,SACA,WACA,qBACA,oBACA,gBACA,YACA,WACA,iBACA,oBACA,mCAEA,SAASC,EAAGC,IAAKC,aAAcC,YAAaC,SAAUC,KAAMC,EAAGC,UAAWC,aAAcC,kBACpFC,kBACS,YAETC,qBACO,KADPA,sBAEQ,SAFRA,sBAGQ,SAHRA,sBAIQ,SAERC,SAAW,SAASC,gBACfC,UAAYC,EAAEC,IAAIF,eAClBD,UAAYA,eACZI,GAAKJ,UAAUK,KAAK,OAAS,OAC7BC,WAAaN,UAAUK,KAAKP,4BAC5BS,OAASP,UAAUK,KAAKP,4BACxBU,MAAQR,UAAUK,KAAKP,2BACvBW,KAAO,QACPA,KAAKR,UAAYS,KAAKT,eACtBQ,KAAKL,GAAKM,KAAKN,OAChBO,OAAS,QACwC,IAA1CX,UAAUK,KAAKP,yBACtBa,OAASX,UAAUK,KAAKP,6BAEvBW,KAAKE,OAASC,KAAKC,UAAUF,aAC7BG,eAGTf,SAASgB,UAAUd,WAAa,EAEhCF,SAASgB,UAAUX,GAAK,EAExBL,SAASgB,UAAUP,MAAQ,IAE3BT,SAASgB,UAAUC,QAAU,GAE7BjB,SAASgB,UAAUN,KAAO,GAE1BV,SAASgB,UAAUD,KAAO,eAClBG,KAAOP,KACPQ,eAAiBR,KAAKS,aACtBC,KAAO/B,aAAagC,MAAMC,YACZ,KAAdL,KAAKT,QACLY,KAAO/B,aAAagC,MAAME,aAE1BC,aAAenC,aAAaoC,OAAO,CACnCL,KAAMA,OAEVjC,EAAEuC,KAAKR,eAAgBM,cAAcG,KAAK,SAASX,QAASY,YAEnDA,MAAQA,WAERA,MAAMC,SAASb,QAAQ,SAIvBY,MAAME,UAAUC,GAAGzC,YAAY0C,OAAQ,gBACnCJ,MAAMK,WACbC,KAAKxB,OAEW,KAAdO,KAAKT,YACAoB,MAAMO,QAAQnB,QAAQ,SACtBY,MAAME,UAAUC,GAAGzC,YAAY8C,MAAM,WACtCnB,KAAKoB,2BAGJT,MAAMO,QAAQzB,KAAK4B,gBACnBV,MAAMW,gBAGNX,MAAME,UAAUC,GAAGzC,YAAY8C,KAAM1B,KAAK8B,WAAWN,KAAKxB,YAE1DkB,MAAME,UAAUC,GAAG,SAAU,OAAQrB,KAAK+B,eAAeP,KAAKxB,QAErD,4BAAfO,KAAKV,QAAuD,wBAAfU,KAAKV,YAC5CqB,MAAMc,kBAAkB1B,QAAQ,IAClB,KAAdC,KAAKT,YACLoB,MAAMc,kBAAkB1B,QAAQ,SAKpCY,MAAMe,YAMNf,MAAME,UAAUC,GAAGzC,YAAYsD,aAAc,cAC5B,KAAd3B,KAAKT,OAAgC,0BAAfS,KAAKV,QAAqD,qBAAfU,KAAKV,QAEpE,GAAiB,KAAdU,KAAKT,OAA+B,mBAAfS,KAAKV,OAA4B,KACvDI,OAASC,KAAKiC,MAAMnC,KAAKD,KAAKE,QAC9BmC,OAASnC,OAAOmC,OAChBC,OAASpC,OAAOoC,OACNvD,KAAKwD,KAAK,CAAC,CACrBC,WAAY,mCACZxC,KAAM,CACFqC,OAAQA,OACRC,OAAQA,OACRG,IAAI,MAGJ,GAAGC,MAAK,SAASC,MACjBjE,EAAE,gBAAgBkE,KAAKD,KAAKE,aACjCC,MAAK,WAEJC,MAAM,6CAGVrE,EAAE,gCAAgCsE,SAAS,kBAEjDvB,KAAKxB,OACW,KAAdO,KAAKT,OAA8B,KAAdS,KAAKT,OAAgC,4BAAfS,KAAKV,SAChDU,KAAKW,MAAME,UAAU2B,SAAS,qCACzB7B,MAAME,UAAU4B,QAAQ,OAAS,MAAO,UACxC9B,MAAME,UAAUC,GAAGzC,YAAY0C,OAAQ,gBAEvCJ,MAAME,UAAU4B,QAAQ,OAAS,QAAS,KAC/CC,YAAW,WACX/B,MAAMK,YACH,MACDC,KAAKxB,SAEbwB,KAAKxB,QAQXX,SAASgB,UAAUI,WAAa,eACxBF,KAAOP,KACPkD,WAAalD,KAAKmD,kBAClBC,gBAAkB,GAClBC,EAAI,SACR5E,EAAE6E,KAAMJ,YAAY,SAASK,IAAKC,OAC9BJ,gBAAgBC,GAAK,CAACE,IAAKA,IAAKE,UAAWlD,KAAKX,WAAY8D,MAAOF,OACnEH,OAEiB3E,IAAIiF,YAAYP,kBASzC/D,SAASgB,UAAUuB,QAAU,SAASgB,sBACV,IAAbA,WACPA,SAAW,SAGV7C,KAAK6D,aAAe1D,KAAKC,UAAUyC,UACjC/D,SAASgF,aAAa7D,KAAKJ,WAAYI,KAAKH,OAAQG,KAAKT,UAAWS,KAAKD,OAQpFV,SAASgB,UAAUyD,6BAA+B,gBACzC5C,MAAM6C,OAGXhF,EAAEiF,IAAI,iCAAiC,WACnCxE,EAAEyE,uBAAuBC,4BAwCzBC,SAASC,SAASC,UAS1BhF,SAASgB,UAAUiE,4BAA8B,SAAS3E,WAGjDuB,MAAMO,QAAQzB,KAAK4B,QAAQjC,QAUpCN,SAASgB,UAAU0B,eAAiB,SAASwC,GAEzCA,EAAEC,qBACEjE,KAAOP,KAEPyE,SAAWzE,KAAKkB,MAAME,UAAUsD,KAAK,QAAQC,iBAC5C5E,KAAK6D,aAAe1D,KAAKC,UAAUsE,UAE1B3F,KAAKwD,KAAK,CAAC,CACrBC,WAAYvC,KAAKJ,WAAa,IAAMI,KAAKH,OACzCE,KAAMC,KAAKD,QAIN,GAAG0C,MAAK,SAASC,MAElBA,KAAKkC,UACLrE,KAAKW,MAAMK,UACXhB,KAAKR,KAAKL,GAAKgD,KAAKhD,GACpBa,KAAKH,KAAKG,KAAKjB,WACfiB,KAAKV,OAAS6C,KAAK7C,QAInBU,KAAKuD,6BAA6BW,aAEvC5B,MAAK,SAASgC,IACbtE,KAAK+D,4BAA4BG,cAWzCpF,SAASgB,UAAUyB,WAAa,SAASyC,GACrCA,EAAEC,sBACGtD,MAAME,UAAUsD,KAAK,QAAQI,UAGtCzF,SAASgB,UAAUsB,eAAiB,eAC5BpB,KAAOP,KACXlB,KAAKwD,KAAK,CAAC,CACPC,WAAYvC,KAAKJ,WAAa,IAAMI,KAAKH,OACzCE,KAAMC,KAAKD,QACX,GAAG0C,MAAK,SAAS9C,MACjBY,KAAKwE,yBAAyBpF,SAC/BkD,MAAK,SAASmC,OACbzE,KAAK0E,wBAAwBD,WAQrC3F,SAASgB,UAAU0E,yBAA2B,gBACrC7D,MAAMK,UACZtC,aAAaiG,gBAAgB,CACxBC,QAAS,UACTzE,KAAM,YAEQ,4BAAfV,KAAKH,QAAuD,wBAAfG,KAAKH,SACjDuF,OAAOhB,SAASC,SAChB5F,EAAE,6CAA6C4G,QAAQ,WAS/DhG,SAASgB,UAAU4E,wBAA0B,SAASD,YAC7C9D,MAAMK,UACXtC,aAAaiG,gBAAgB,CACzBC,QAASH,MAAMG,QACfzE,KAAM,WAIdrB,SAASgB,UAAU8C,gBAAkB,eAC7BD,WAAa,GACboC,aAAeC,QAAQvF,KAAKJ,WAAc,IAAMI,KAAKJ,WAAW4F,MAAM,KAAK,WACnC,mBAAjCF,aAAanC,kBACpBD,WAAaoC,aAAanC,gBAAgBnD,OAEtCA,KAAKH,YACJ,yBACMG,KAAKF,WACH,IACDoD,WAAWuC,qBAAuB,uBAClCvC,WAAWwC,UAAY,sBAEtB,IACDxC,WAAWyC,kBAAoB,oBAC/BzC,WAAW0C,UAAY,sBAI9B,2BACD1C,WAAW2C,QAAU,OAEjBC,YADAC,YAAc7F,KAAKiC,MAAMnC,KAAKD,KAAKE,SACV+F,YACzBC,SAAWF,YAAYE,SACXF,YAAYG,UAIP,GAAdJ,WACC5C,WAAWiD,eAAiBF,SAE5B/C,WAAWkD,eAAiBH,mBAInC,uBACD/C,WAAWmD,cAAgB,OACvBN,YACAO,YADAP,YAAc7F,KAAKiC,MAAMnC,KAAKD,KAAKE,SACVqG,WAEV,GADAP,YAAYQ,aAE3BrD,WAAWsD,cAAgBF,WAE3BpD,WAAWuD,aAAeH,uBAOjChG,QAAU4C,WACRA,YAER,CACH9C,KAAM,WACF3B,EAAE0F,UAAU9C,GAAG,QAASlC,mBAAmB,SAASoF,GAChDA,EAAEC,qBACElF,UAAYb,EAAEuB,MACC,IAAIX,SAASC"}