{"version":3,"file":"newcostcenter.min.js","sources":["../src/newcostcenter.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_costcenter/costcenter\n * @class      NewCostcenter\n * @package    local_costcenter\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n \n    /**\n     * Constructor\n     *\n     * @param {object} args\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var NewCostcenter = function(args) {\n        this.contextid = args.contextid;\n        // this.costcenterid = args.costcenterid;\n        // this.parentid = args.parentid;\n        this.formtype = args.formtype;\n        this.id = args.id;\n        this.headstring = args.headstring;\n        var self = this;\n        self.init();\n    };\n \n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    NewCostcenter.prototype.modal = null;\n \n    /**\n     * @var {int} contextid\n     * @private\n     */\n    NewCostcenter.prototype.contextid = -1;\n \n    /**\n     * Initialise the class.\n     *\n     * @private\n     * @return {Promise}\n     */\n    NewCostcenter.prototype.init = function() {\n        var self = this;\n        var editid = $(this).data('value');\n        if (editid) {\n            self.costcenterid = editid;\n        }\n              \n        var head = Str.get_string(this.headstring, 'local_costcenter');\n        return head.then(function(title) {\n            // Create the modal.\n            return ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                title: title,\n                body: self.getBody()\n            });\n        }.bind(self)).then(function(modal) {\n            \n            // Keep a reference to the modal.\n            self.modal = modal;\n           \n            self.modal.getRoot().addClass('openLMStransition local_costcenter');\n            // Forms are big, we want a big modal.\n            self.modal.setLarge();\n \n            // We want to reset the form every time it is opened.\n            self.modal.getRoot().on(ModalEvents.hidden, function() {\n                self.modal.setBody(self.getBody());\n                self.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                setTimeout(function(){\n                    modal.destroy();\n                }, 1000);\n                \n            }.bind(this));\n\n            \n            // We want to hide the submit buttons every time it is opened.\n            self.modal.getRoot().on(ModalEvents.shown, function() {\n                self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n            }.bind(this));\n \n\n            // We catch the modal save event, and use it to submit the form inside the modal.\n            // Triggering a form submission will give JS validation scripts a chance to check for errors.\n            self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n            // We also catch the form submit event and use it to submit the form with ajax.\n            self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n\n            this.modal.show();\n            this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n            return this.modal;\n        }.bind(this));\n        \n    };\n \n    /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    NewCostcenter.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        // Get the content of the modal.\n        var params = {jsonformdata: JSON.stringify(formdata), formtype:this.formtype, id:this.id};\n        return Fragment.loadFragment('local_costcenter', 'new_costcenterform', this.contextid, params);\n    };\n \n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {Promise}\n     */\n    NewCostcenter.prototype.handleFormSubmissionResponse = function() {\n        this.modal.hide();\n        // We could trigger an event instead.\n        // Yuk.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        document.location.reload();\n    };\n \n    /**\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    NewCostcenter.prototype.handleFormSubmissionFailure = function(data) {\n        // Oh noes! Epic fail :(\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n \n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    NewCostcenter.prototype.submitFormAjax = function(e) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n \n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n        // Now we can continue...\n        Ajax.call([{\n            methodname: 'local_costcenter_submit_costcenterform_form',\n            args: {contextid: this.contextid, jsonformdata: JSON.stringify(formData)},\n            done: this.handleFormSubmissionResponse.bind(this, formData),\n            fail: this.handleFormSubmissionFailure.bind(this, formData)\n        }]);\n    };\n \n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    NewCostcenter.prototype.submitForm = function(e) {\n        e.preventDefault();\n        var self = this;\n        self.modal.getRoot().find('form').submit();\n    };\n    return /** @alias module:local_costcenter/NewCostcenter */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {object} args\n         * @return {Promise}\n        */\n        init: function(args) {\n            return new NewCostcenter(args);\n        },\n        load: function(){\n    \n            $(document).on('changedvalue', '#id_open_costcenterid_select', function(){\n                var orgid = $('#id_open_costcenterid_select').val();\n                var services = $('#id_performancecatid');\n                var html='';\n                var elementExists = document.getElementById(\"id_performancecatid\");\n                if(elementExists){\n                    $('#id_performancecatid').html('');                   \n                    $('<option value=\"\">Select Category</option>').appendTo(services);\n                    $.get(M.cfg.wwwroot + \"/local/courses/ajax.php\", {orgid: orgid,action : 'performancecategory'},function(result) {  \n                        $.each(result, function(value, name) {\n                       \n                \n                            html+= '<option value=\"' + value + '\">' + name +'</option>';\n                        });                       \n                        $('#id_performancecatid').append(html);\n                    });         \n                }\n            });\n        },\n        changeElement: function(event){\n            var elemvalue = $(event.target).val();\n            var action = $(event.target).data('action');\n           \n                var depth = $(event.target).data('depth');\n                $.each($('[data-action=\"costcenter_element_selector\"]'), function(index, value){\n                    if($(value).data('depth') > depth){\n                        $(value).html('');\n                        $(value).parent().find('.form-autocomplete-selection').html($(value).data('selectstring'));\n                    }\n                });\n                $(document).find('#id_open_costcenterid_select').trigger('changedvalue');\n                \n                if(depth == 1){\n                    var value = $('[data-class=\"supervisor_select\"]');\n                    value.html('');\n                    value.parent().find('.form-autocomplete-selection').html(value.data('selectstring'));\n                }\n\n\n                if(action === \"costcenter_category_selector\")\n                {\n                    var value = $('[data-class=\"domainselect\"]');\n                    value.html('');\n                    value.parent().find('.form-autocomplete-selection').html(value.data('selectstring'));\n                    var value = $('[data-class=\"domainparentclass\"]');\n                    value.html('');\n                    value.parent().find('.form-autocomplete-selection').html(value.data('selectstring'));\n                }\n                else if( action === \"position_domain_selector\" || action === \"user_domain_selector\"){\n                    var value = $('[data-class=\"domainparentclass\"]');\n                    value.html('');\n                    value.parent().find('.form-autocomplete-selection').html(value.data('selectstring'));\n                }                \n                if(action === \"competency_selector_action\")\n                {\n                    var value = $('[data-class=\"skillselector\"]');\n                    value.html('');\n                    value.parent().find('.form-autocomplete-selection').html(value.data('selectstring'));\n                    var value = $('[data-class=\"levelselector\"]');\n                    value.html('');\n                    value.parent().find('.form-autocomplete-selection').html(value.data('selectstring'));\n                }\n                if(action === \"skill_selector_action\")\n                {\n                    var value = $('[data-class=\"levelselector\"]');\n                    value.html('');\n                    value.parent().find('.form-autocomplete-selection').html(value.data('selectstring'));\n                }\n\n                if(parseInt(elemvalue) > 0){\n\n                    var params = {};\n\n                    params.accountid = elemvalue;\n                    params.contextid = $(event.target).data('contextid');\n                    params.actions = \"accountselect\";\n                    var promise = Ajax.call([{\n                        methodname: 'local_costcenter_generate_shortcode',\n                        args: params\n                    }]);\n                    promise[0].done(function(resp){\n                        $('.shortnamestatic').html(resp);\n                        $('#id_concatshortname').val(resp);\n\n                    });\n\n                }else{\n\n                    $('.shortnamestatic').html('');\n                    $('#id_concatshortname').val('');\n\n                }\n\n\n        },\n        /**\n         * modal for course status.\n         *\n         * @method costcenterStatus\n         * @param {object} args\n         * @return {modal}\n        */\n        costcenterStatus: function(args) {\n            //console.log(args);\n            return Str.get_strings([{\n                key: 'confirm',\n                component: 'local_costcenter',\n            }]).then(function(str) {\n                ModalFactory.create({\n                    title: args.actionstatus,\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    body: args.actionstatusmsg\n                }).done(function(modal) {\n                    this.modal = modal;\n                    modal.setSaveButtonText(str[0]);\n                    modal.getRoot().on(ModalEvents.save, function(e) {\n                        e.preventDefault();\n                        args.confirm = true;\n                        var promise = Ajax.call([{\n                            methodname: 'local_costcenter_status_confirm',\n                            args: args\n                        }]);\n                        promise[0].done(function(resp) {\n                            window.location.href = window.location.href;\n                        }).fail(function(ex) {\n                            // do something with the exception\n                        });\n                    }.bind(this));\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n          \n        },\n        downloadtrigger: function(){\n            $(document).on('click', '.custom_content_download', function (){\n                var data = $(this).data();                \n                var formdata = $('#global_filter').attr('data-filterdata');\n                window.location.href = data.href+'?formdata='+formdata;\n            });\n        }\n    };\n});\n"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","NewCostcenter","args","contextid","formtype","id","headstring","this","init","prototype","modal","self","editid","data","costcenterid","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","getRoot","addClass","setLarge","on","hidden","setBody","animate","setTimeout","destroy","shown","append","save","submitForm","submitFormAjax","show","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","hide","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","e","preventDefault","formData","find","serialize","call","methodname","done","fail","submit","load","orgid","val","services","html","getElementById","appendTo","get","cfg","wwwroot","action","result","each","value","name","changeElement","event","elemvalue","target","depth","index","parent","trigger","parseInt","accountid","actions","resp","costcenterStatus","get_strings","key","component","str","actionstatus","actionstatusmsg","setSaveButtonText","confirm","window","href","ex","downloadtrigger","attr"],"mappings":"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"}