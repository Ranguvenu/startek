{"version":3,"file":"courseenrol.min.js","sources":["../src/courseenrol.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_learningplan/learningplan\n * @class      courseenrol\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n    'core/str',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/fragment',\n    'core/ajax',\n    'core/yui',\n    'local_learningplan/jquery.dataTables'],\n    function ($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n        /**\n        * Constructor\n        *\n        * @param {object} args\n        *\n        * Each call to init gets it's own instance of this class.\n        */\n        var courseenrol = function (args) {\n            this.args = args;\n            this.contextid = args.contextid;\n            this.planid = args.planid;\n            this.condition = args.condition;\n            var self = this;\n            self.init(args.selector);\n        };\n        /**\n        * @var {Modal} modal\n        * @private\n        */\n        courseenrol.prototype.modal = null;\n        /**\n        * @var {int} contextid\n        * @private\n        */\n        courseenrol.prototype.contextid = -1;\n        /**\n        * Initialise the class.\n        *\n        * @private\n        * @return {Promise}\n        */\n        courseenrol.prototype.init = function () {\n            var self = this;\n            var head = Str.get_string('enrolcourses', 'local_learningplan');\n            return head.then(function (title) {\n                // Create the modal.\n                return ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: title,\n                    body: self.getBody()\n                });\n            }.bind(self)).then(function (modal) {\n                // Keep a reference to the modal.\n                self.modal = modal;\n                self.modal.getRoot().addClass('openLMStransition local_costcenter');\n                // Forms are big, we want a big modal.\n                self.modal.setLarge();\n                // We want to reset the form every time it is opened.\n                self.modal.getRoot().on(ModalEvents.hidden, function () {\n                    self.modal.setBody(self.getBody());\n                    self.modal.getRoot().animate({ \"right\": \"-85%\" }, 500);\n                    setTimeout(function () {\n                        modal.destroy();\n                    }, 1000);\n                }.bind(this));\n                this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function () {\n                     window.location.href();\n                });\n                // We want to hide the submit buttons every time it is opened.\n                self.modal.getRoot().on(ModalEvents.shown, function () {\n                    self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n                }.bind(this));\n                // We catch the modal save event, and use it to submit the form inside the modal.\n                // Triggering a form submission will give JS validation scripts a chance to check for errors.\n                self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n                // We also catch the form submit event and use it to submit the form with ajax.\n                self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n                this.modal.show();\n                this.modal.getRoot().animate({ \"right\": \"0%\" }, 500);\n                $(\".close\").click(function () {\n                    window.location = window.location.href;\n                });\n                return this.modal;\n            }.bind(this));\n        };\n\n        /**\n        * @param {object} formdata\n        * @method getBody\n        * @private\n        * @return {Promise}\n        */\n        courseenrol.prototype.getBody = function (formdata) {\n            if (typeof formdata === \"undefined\") {\n                formdata = {};\n            }\n            // Get the content of the modal.\n            var params = { planid: this.planid, jsonformdata: JSON.stringify(formdata), condition: this.condition };\n            return Fragment.loadFragment('local_learningplan', 'lpcourse_enrol', this.contextid, params);\n        };\n        /**\n        * @method handleFormSubmissionResponse\n        * @private\n        * @return {Promise}\n        */\n        courseenrol.prototype.handleFormSubmissionResponse = function () {\n            this.modal.hide();\n            // We could trigger an event instead.\n            // Yuk.\n            Y.use('moodle-core-formchangechecker', function () {\n                M.core_formchangechecker.reset_form_dirty_state();\n            });\n            document.location.reload();\n        };\n        /**\n        * @param {object} data\n        * @method handleFormSubmissionFailure\n        * @private\n        * @return {Promise}\n        */\n        courseenrol.prototype.handleFormSubmissionFailure = function (data) {\n            // Oh noes! Epic fail :(\n            // Ah wait - this is normal. We need to re-display the form with errors!\n            this.modal.setBody(this.getBody(data));\n        };\n        /**\n        * Private method\n        *\n        * @method submitFormAjax\n        * @private\n        * @param {Event} e Form submission event.\n        */\n        courseenrol.prototype.submitFormAjax = function (e) {\n            // We don't want to do a real form submission.\n            e.preventDefault();\n\n            // Convert all the form elements values to a serialised string.\n            var formData = this.modal.getRoot().find('form').serialize();\n            // Now we can continue...\n            Ajax.call([{\n                methodname: 'local_learningplan_lpcourse_enrol_form',\n                args: { planid: this.planid, contextid: this.contextid, jsonformdata: JSON.stringify(formData) },\n                done: this.handleFormSubmissionResponse.bind(this, formData),\n                fail: this.handleFormSubmissionFailure.bind(this, formData)\n            }]);\n        };\n        /**\n        * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n        *\n        * @method submitForm\n        * @param {Event} e Form submission event.\n        * @private\n        */\n        courseenrol.prototype.submitForm = function (e) {\n            e.preventDefault();\n            var self = this;\n            self.modal.getRoot().find('form').submit();\n        };\n        return /** @alias module:local_costcenter/newcostcenter */ {\n            // Public variables and functions.\n            /**\n             * Attach event listeners to initialise this module.\n             *\n             * @method init\n             * @param {object} args\n             * @return {Promise}\n             */\n            init: function (args) {\n                return new courseenrol(args);\n            },\n            load: function () {\n                $(document).on('click', '.unenrolself_module', function () {\n                    var args = $(this).data();\n                    return Str.get_strings([{\n                        key: 'confirm',\n                        component: 'moodle'\n                    },\n                    {\n                        key: args.identifier,\n                        component: args.plugin,\n                        param: args\n                    },\n                    {\n                        key: 'yes',\n                        component: 'moodle'\n                    },\n                    {\n                        key: 'no',\n                        component: 'moodle'\n                    }\n                    ]).then(function (s) {\n                        ModalFactory.create({\n                            title: s[0],\n                            type: ModalFactory.types.SAVE_CANCEL,\n                            body: s[1]\n                        }).done(function (modal) {\n                            this.modal = modal;\n                            modal.setSaveButtonText(s[2]);\n                            modal.getRoot().on(ModalEvents.save, function (e) {\n                                e.preventDefault();\n                                var params = {};\n                                params.id = args.id;\n                                params.contextid = args.contextid;\n                                params.userid = args.userid;\n                                var promise = Ajax.call([{\n                                    methodname: args.pluginname + '_' + args.methodname,\n                                    args: params\n                                }]);\n                                promise[0].done(function () {\n                                    window.location = window.location.href;\n                                }).fail(function () {\n                                });\n                            }.bind(this));\n                            modal.show();\n                        }.bind(this));\n                    }.bind(this));\n                });\n            },\n            publishLearningplan: function (args) {\n                var planvalue = args.planid;\n                return Str.get_strings([{\n                    key: 'confirm'\n                },\n                {\n                    key: 'learningplan_enrol_users',\n                    component: 'local_learningplan',\n                    param: args\n                },\n                {\n                    key: 'confirmall',\n                    component: 'local_learningplan'\n                },\n                {\n                    key: 'confirm'\n                }]).then(function (s) {\n                    ModalFactory.create({\n                        title: s[0],\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        body: s[1]\n                    }).done(function (modal) {\n                        this.modal = modal;\n                        modal.setSaveButtonText(s[3]);\n                        modal.getRoot().on(ModalEvents.save, function (e) {\n                            e.preventDefault();\n                            var params = \"?action=publishlearningplan&planid=\"+planvalue;\n                            $.ajax({\n                                method: \"GET\",\n                                dataType: \"json\",\n                                url: M.cfg.wwwroot + \"/local/learningplan/ajax.php\"+params,\n                                success: function(){\n                                    // modal.destroy();\n                                    window.location = window.location.href;\n                                }\n                            });\n                            // var url = M.cfg.wwwroot +\n                            //  \"/local/learningplan/ajax.php?action=publishlearningplan&planid=\" + planvalue;\n                            // window.location.href = url;\n                        }.bind(this));\n                        modal.show();\n                    }.bind(this));\n                }.bind(this));\n            },\n            tabsFunction: function () {\n                $('.learningplan_tabs').click(function () {\n                    if ($(this).find('a').hasClass('active')) {\n                        return true;\n                    }\n                    var learningplantab = $(this).data('module');\n                    var id = $(this).data('id');\n                    var options = $(this).data('options');\n                    var dataoptions = $(this).data('dataoptions');\n                    var filterdata = $(this).data('filterdata');\n                    $.ajax({\n                        method: 'GET',\n                        url: M.cfg.wwwroot + '/local/learningplan/ajax.php',\n                        data: {\n                            action: \"learningplantab\",\n                            tab: learningplantab,\n                            id: id,\n                            ajax: 0\n                        },\n                        success: function (resp) {\n                            var html = resp;\n                            //  $.parseJSON(resp);\n                            $('#learningplantabscontent').html(html);\n                            $('#learningplantabscontent').find('div').addClass('active');\n                            if (learningplantab == 'users') {\n                                // $(\"table#learning_plan_users\").dataTable({\n                                //     language: {\n                                //         \"paginate\": {\n                                //             \"next\": \">\",\n                                //             \"previous\": \"<\"\n                                //         },\n                                //         \"search\": \"\",\n                                //         \"searchPlaceholder\": \"Search\"\n                                //     }\n                                // });\n                                var params = [];\n                                params.action = 'learningplantab';\n                                params.tab = 'users';\n                                params.id = id;\n                                params.ajax = 1;\n                                return Str.get_strings([{\n                                    key: 'search',\n                                    component: 'moodle'\n                                }]).then(function (s) {\n                                    $('table#learning_plan_users').dataTable({\n                                        'processing': true,\n                                        'serverSide': true,\n                                        \"language\": {\n                                            \"paginate\": {\n                                                \"next\": \">\",\n                                                \"previous\": \"<\"\n                                            },\n                                            \"search\": \"\",\n                                            \"searchPlaceholder\": s[0],\n                                            \"processing\": '<img src=' + M.cfg.wwwroot + '/local/ajax-loader.svg>'\n                                        },\n                                        'ajax': {\n                                            \"type\": \"POST\",\n                                            \"url\": M.cfg.wwwroot + '/local/learningplan/ajax.php',\n                                            \"data\": params\n                                        },\n                                        \"responsive\": true,\n                                        \"pageLength\": 5,\n                                        \"bLengthChange\": false,\n                                        \"bInfo\": false,\n                                    });\n                                }.bind(this));\n                            } else if (learningplantab == 'requestedusers') {\n                                // require(['local_request/requestconfirm'], function(requestconfirm) {\n                                //      requestconfirm.requestDatatable();\n                                //  });\n                                // $('#learningplantabscontent').html(html);\n\n                                require(['local_costcenter/cardPaginate'], function (cardPaginate) {\n                                    cardPaginate.reload(options, dataoptions, filterdata);\n                                });\n                            }\n                        }\n                    });\n                });\n            },\n            enrolUser: function (args) {\n                var planvalue = args.planid;\n                var userid = args.userid;\n                return Str.get_strings([{\n                    key: 'confirm'\n                },\n                {\n                    key: 'learningplan_self_enrol',\n                    component: 'local_learningplan',\n                    param: args\n                },\n                {\n                    key: 'confirm'\n                }]).then(function (s) {\n                    ModalFactory.create({\n                        title: s[0],\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        body: s[1]\n                    }).done(function (modal) {\n                        this.modal = modal;\n                        modal.setSaveButtonText(s[2]);\n                        modal.getRoot().on(ModalEvents.save, function (e) {\n                            e.preventDefault();\n                            var path  = M.cfg.wwwroot+\"/local/learningplan/ajax.php?\";\n                            $.ajax({\n                                method: \"GET\",\n                                dataType: \"json\",\n                                url: path+ \"action=userselfenrol&planid=\" + planvalue + \"&userid=\" + userid,\n                                success: function () {\n                                    modal.destroy();\n                                    window.location.href = M.cfg.wwwroot + '/local/learningplan/view.php?id=' + planvalue;\n                                }\n                            });\n                        }.bind(this));\n                        modal.show();\n                    }.bind(this));\n                }.bind(this));\n            },\n            unEnrolUser: function (args) {\n                return Str.get_strings([{\n                    key: 'confirm'\n                },\n                {\n                    key: 'learningplan_self_unenrol',\n                    component: 'local_learningplan',\n                    param: args\n                }]).then(function (s) {\n                    ModalFactory.create({\n                        title: s[0],\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        body: s[1]\n                    }).done(function (modal) {\n                        this.modal = modal;\n                        modal.setSaveButtonText(s[0]);\n                        modal.getRoot().on(ModalEvents.save, function (e) {\n                            e.preventDefault();\n                            var params = {};\n                            params.userid = args.userid;\n                            params.planid = args.planid;\n                            var promise = Ajax.call([{\n                                methodname: 'local_learningplan_unassign_user',\n                                args: params\n                            }]);\n                            promise[0].done(function () {\n                                window.location.href = M.cfg.wwwroot;\n                            }).fail(function () {\n                            });\n                        }.bind(this));\n                        modal.show();\n                    }.bind(this));\n                }.bind(this));\n            },\n        };\n    });"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","courseenrol","args","contextid","planid","condition","this","init","selector","prototype","modal","self","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","getRoot","addClass","setLarge","on","hidden","setBody","animate","setTimeout","destroy","getFooter","find","window","location","href","shown","append","save","submitForm","submitFormAjax","show","click","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","hide","use","M","core_formchangechecker","reset_form_dirty_state","document","reload","handleFormSubmissionFailure","data","e","preventDefault","formData","serialize","call","methodname","done","fail","submit","load","get_strings","key","component","identifier","plugin","param","s","setSaveButtonText","id","userid","pluginname","publishLearningplan","planvalue","ajax","method","dataType","url","cfg","wwwroot","success","tabsFunction","hasClass","learningplantab","options","dataoptions","filterdata","action","tab","resp","html","dataTable","require","cardPaginate","enrolUser","path","unEnrolUser"],"mappings":"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"}