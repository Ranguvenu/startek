{"version":3,"file":"lpcreate.min.js","sources":["../src/lpcreate.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_learningplan/learningplan\n * @class      NewCostcenter\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax'],\n    function ($, Str, ModalFactory, ModalEvents, Fragment, Ajax) {\n        /**\n         * Constructor\n         *\n         * @param {object} args\n         *\n         * Each call to init gets it's own instance of this class.\n         */\n        var lpcreate = function (args) {\n            this.contextid = args.contextid;\n            this.planid = args.planid;\n            this.args = args;\n            var self = this;\n            self.init(args);\n        };\n        /**\n         * @var {Modal} modal\n         * @private\n         */\n        lpcreate.prototype.modal = null;\n        /**\n         * @var {int} contextid\n         * @private\n         */\n        lpcreate.prototype.contextid = -1;\n        /**\n         * Initialise the class.\n         *\n         * @private\n         * @return {Promise}\n         */\n        lpcreate.prototype.init = function () {\n            var self = this;\n            // Fetch the title string.\n            if (self.planid) {\n                var head = Str.get_string('editlearningplan', 'local_learningplan');\n            }\n            else {\n                var head = Str.get_string('adnewlearningplan', 'local_learningplan');\n            }\n            return head.then(function (title) {\n                // Create the modal.\n                return ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: title,\n                    body: self.getBody(),\n                    // footer: this.getFooter(),\n                });\n            }.bind(self)).then(function (modal) {\n                // Keep a reference to the modal.\n                self.modal = modal;\n                self.modal.getRoot().addClass('openLMStransition');\n                // Forms are big, we want a big modal.\n                self.modal.setLarge();\n                // We want to reset the form every time it is opened.\n                self.modal.getRoot().on(ModalEvents.hidden, function () {\n                    self.modal.setBody(self.getBody());\n                    self.modal.getRoot().animate({ \"right\": \"-85%\" }, 500);\n                    setTimeout(function () {\n                        modal.destroy();\n                    }, 1000);\n                }.bind(this));\n                this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function () {\n                    window.location = window.location.href;\n                });\n                // We want to hide the submit buttons every time it is opened.\n                self.modal.getRoot().on(ModalEvents.shown, function () {\n                    self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n                }.bind(this));\n\n                if(self.args.callback == 'learningplan_form'){\n                    $(document).on('click', '.custom_user_form_redirect', function(){\n                        var instanceid = $(\"#learningplanid\").val();\n                        if(instanceid > 0){\n                            self.args.form_status = $(this).data('value');\n                            var data = self.getBody();\n                            data.then(function(html, js) {\n                                if (html === false) {\n                                  // window.location.reload();\n                                    self.handleFormSubmissionResponse(args);\n                                }\n                            });\n                            modal.setBody(data);\n                            // if(self.args.form_status==0){\n                            //     $('[data-action=\"skip\"]').css('display', 'none');\n                            //     $('[data-action=\"previous\"]').css('display', 'none');\n                            // }else{\n                            //     $('[data-action=\"skip\"]').css('display', 'block');\n                            //     $('[data-action=\"previous\"]').css('display', 'block');\n                            // }\n                        }\n                    });\n                }\n                // We catch the modal save event, and use it to submit the form inside the modal.\n                // Triggering a form submission will give JS validation scripts a chance to check for errors.\n                self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n                // We also catch the form submit event and use it to submit the form with ajax.\n                self.modal.getRoot().on('submit', 'form', function (form) {\n                    self.submitFormAjax(form, self.args);\n                });\n                this.modal.show();\n                this.modal.getRoot().animate({ \"right\": \"0%\" }, 500);\n                $(\".close\").click(function () {\n                    window.location = window.location.href;\n                });\n                return this.modal;\n            }.bind(this));\n        };\n        /**\n         * @param {object} formdata\n         * @method getBody\n         * @private\n         * @return {Promise}\n         */\n        lpcreate.prototype.getBody = function (formdata) {\n            if (typeof formdata === \"undefined\") {\n                formdata = {};\n            }\n            this.args.jsonformdata = JSON.stringify(formdata);\n            return Fragment.loadFragment('local_learningplan', 'new_learningplan', this.contextid, this.args);\n        };\n        /**\n        * @method handleFormSubmissionFailure\n        * @param {object} data\n        * @private\n        * @return {Promise}\n        */\n        lpcreate.prototype.handleFormSubmissionFailure = function (data) {\n            // Oh noes! Epic fail :(\n            // Ah wait - this is normal. We need to re-display the form with errors!\n            this.modal.setBody(this.getBody(data));\n        };\n        /**\n         * Private method\n         *\n         * @method submitFormAjax\n         * @private\n         * @param {Event} e Form submission event.\n         * @param {object} args\n         */\n        lpcreate.prototype.submitFormAjax = function (e, args) {\n            // We don't want to do a real form submission.\n            e.preventDefault();\n            var self = this;\n            // Convert all the form elements values to a serialised string.\n            var formData = this.modal.getRoot().find('form').serialize();\n            var methodname = 'local_learningplan_submit_learningplan_form';\n            var params = {};\n            params.id = this.planid;\n            params.contextid = this.contextid;\n            params.jsonformdata = JSON.stringify(formData);\n            params.form_status = args.form_status;\n            var promise = Ajax.call([{\n                methodname: methodname,\n                args: params\n            }]);\n            promise[0].done(function (resp) {\n                if (resp.form_status !== -1 && resp.form_status !== false) {\n                    self.args.form_status = resp.form_status;\n                    self.args.id = resp.id;\n                    self.handleFormSubmissionFailure();\n                } else {\n                    self.modal.hide();\n                    window.location = window.location.href;\n                }\n            }).fail(function () {\n                self.handleFormSubmissionFailure(formData);\n            });\n        };\n        /**\n         * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n         *\n         * @method submitForm\n         * @param {Event} e Form submission event.\n         * @private\n         */\n        lpcreate.prototype.submitForm = function (e) {\n            e.preventDefault();\n            var self = this;\n            self.modal.getRoot().find('form').submit();\n        };\n        return /** @alias module:local_costcenter/newcostcenter */ {\n            // Public variables and functions.\n            /**\n             * Attach event listeners to initialise this module.\n             *\n             * @method init\n             * @param {object} args\n             * @return {Promise}\n             */\n            init: function (args) {\n                return new lpcreate(args);\n            },\n            load: function () {\n\n            },\n            deleteConfirm: function (args) {\n                return Str.get_strings([{\n                    key: 'confirm'\n                },\n                {\n                    key: 'deleteconfirm',\n                    component: 'local_learningplan',\n                    param: args\n                },\n                {\n                    key: 'deleteallconfirm',\n                    component: 'local_learningplan'\n                },\n                {\n                    key: 'delete'\n                }]).then(function (s) {\n                    ModalFactory.create({\n                        title: s[0],\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        body: s[1]\n                    }).done(function (modal) {\n                        this.modal = modal;\n                        modal.setSaveButtonText(s[3]);\n                        modal.getRoot().on(ModalEvents.save, function (e) {\n                            e.preventDefault();\n                            args.confirm = true;\n                            var promise = Ajax.call([{\n                                methodname: 'local_learningplan_' + args.action,\n                                args: args\n                            }]);\n                            promise[0].done(function () {\n                                window.location = window.location.href;\n                            }).fail(function () {\n                            });\n                        }.bind(this));\n                        modal.show();\n                    }.bind(this));\n                    this.modal.show();\n                }.bind(this));\n            },\n            toggleVisible: function (args) {\n                return Str.get_strings([{\n                    key: 'confirm' + args.visible,\n                    component: 'local_learningplan',\n                },\n                {\n                    key: 'activeconfirm' + args.visible,\n                    component: 'local_learningplan',\n                    param: args\n                },\n                {\n                    key: 'confirm',\n                    component: 'local_learningplan',\n                }]).then(function (s) {\n                    ModalFactory.create({\n                        title: s[2],\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        body: s[1]\n                    }).done(function (modal) {\n                        this.modal = modal;\n                        modal.setSaveButtonText(s[2]);\n                        // modal.setCancelButtonText(s[2]);\n                        modal.getRoot().on(ModalEvents.save, function (e) {\n                            e.preventDefault();\n                            args.confirm = true;\n                            var promise = Ajax.call([{\n                                methodname: 'local_learningplan_' + args.action,\n                                args: args\n                            }]);\n                            promise[0].done(function () {\n                                window.location = window.location.href;\n                            }).fail(function () {\n                            });\n                        }.bind(this));\n                        modal.show();\n                    }.bind(this));\n                }.bind(this));\n            },\n            unassignCourses: function (args) {\n                return Str.get_strings([{\n                    key: 'confirm'\n                },\n                {\n                    key: 'unassign_courses_confirm',\n                    component: 'local_learningplan',\n                    param: args\n                },\n                {\n                    key: 'unassign',\n                    component: 'local_learningplan',\n                }]).then(function (s) {\n                    ModalFactory.create({\n                        title: s[0],\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        body: s[1]\n                    }).done(function (modal) {\n                        this.modal = modal;\n                        modal.setSaveButtonText(s[2]);\n                        modal.getRoot().on(ModalEvents.save, function (e) {\n                            e.preventDefault();\n                            var params = {};\n                            params.courseid = args.unassigncourseid;\n                            params.planid = args.planid;\n                            var promise = Ajax.call([{\n                                methodname: 'local_learningplan_' + args.action,\n                                args: params\n                            }]);\n                            promise[0].done(function () {\n                                window.location = window.location.href;\n                            }).fail(function () {\n                            });\n                        }.bind(this));\n                        modal.show();\n                    }.bind(this));\n                    this.modal.show();\n                }.bind(this));\n            },\n            unassignUsers: function (args) {\n                return Str.get_strings([{\n                    key: 'confirm'\n                },\n                {\n                    key: 'unassign_users_confirm',\n                    component: 'local_learningplan',\n                    param: args\n                },\n                {\n                    key: 'unassign',\n                    component: 'local_learningplan',\n                }]).then(function (s) {\n                    ModalFactory.create({\n                        title: s[0],\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        body: s[1]\n                    }).done(function (modal) {\n                        this.modal = modal;\n                        modal.setSaveButtonText(s[2]);\n                        modal.getRoot().on(ModalEvents.save, function (e) {\n                            e.preventDefault();\n                            var params = {};\n                            params.userid = args.unassignuserid;\n                            params.planid = args.planid;\n                            var promise = Ajax.call([{\n                                methodname: 'local_learningplan_' + args.action,\n                                args: params\n                            }]);\n                            promise[0].done(function () {\n                                window.location = window.location.href;\n                            }).fail(function () {\n                            });\n                        }.bind(this));\n                        modal.show();\n                    }.bind(this));\n                    this.modal.show();\n                }.bind(this));\n            },\n        };\n    });"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","lpcreate","args","contextid","planid","this","init","prototype","modal","self","head","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","getRoot","addClass","setLarge","on","hidden","setBody","animate","setTimeout","destroy","getFooter","find","window","location","href","shown","append","callback","document","val","form_status","data","html","js","handleFormSubmissionResponse","save","submitForm","form","submitFormAjax","show","click","formdata","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionFailure","e","preventDefault","formData","serialize","params","id","call","methodname","done","resp","hide","fail","submit","load","deleteConfirm","get_strings","key","component","param","s","setSaveButtonText","confirm","action","toggleVisible","visible","unassignCourses","courseid","unassigncourseid","unassignUsers","userid","unassignuserid"],"mappings":"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"}