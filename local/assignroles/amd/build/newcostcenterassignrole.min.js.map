{"version":3,"file":"newcostcenterassignrole.min.js","sources":["../src/newcostcenterassignrole.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_location/location\n * @class      NewInstitute\n * @package    local_location\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n\n    /**\n     * Constructor\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @param {int} contextid\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var NewcostcenterAssignrole = function(args) {\n        this.contextid = args.contextid;\n\n        this.formtype = args.formtype;\n        \n        this.costcenterid = args.costcenterid;\n\n        this.hierarchyid = args.hierarchyid;\n\n        this.costcentername = args.costcentername;\n        var self = this;\n        self.init(args.selector);\n    };\n\n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    NewcostcenterAssignrole.prototype.modal = null;\n\n    /**\n     * @var {int} contextid\n     * @private\n     */\n    NewcostcenterAssignrole.prototype.contextid = -1;\n\n    /**\n     * Initialise the class.\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @private\n     * @return {Promise}\n     */\n    NewcostcenterAssignrole.prototype.init = function(args) {\n\n        var self = this;\n\n            return Str.get_string('assigncostcenterroleusers', 'local_assignroles',self).then(function(title) {\n                return ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: title,\n                    body: self.getBody()\n                });\n            }.bind(self)).then(function(modal) {\n\n                // Keep a reference to the modal.\n                self.modal = modal;\n                self.modal.setLarge();\n                this.modal.getRoot().addClass('openLMStransition');\n\n                // We want to reset the form every time it is opened.\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\n                    this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 1000);\n                }.bind(this));\n\n                // We want to hide the submit buttons every time it is opened.\n                self.modal.getRoot().on(ModalEvents.shown, function() {\n                    self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n                    this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                        modal.hide();\n                        setTimeout(function(){\n                            modal.destroy();\n                        }, 1000);\n                        // modal.destroy();\n                    });\n                }.bind(this));\n\n\n                // We catch the modal save event, and use it to submit the form inside the modal.\n                // Triggering a form submission will give JS validation scripts a chance to check for errors.\n                self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n                // We also catch the form submit event and use it to submit the form with ajax.\n                self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n                self.modal.show();\n                this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n                return this.modal;\n            }.bind(this));\n\n    };\n\n    /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    NewcostcenterAssignrole.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        // Get the content of the modal.\n        var params = {costcenterid:this.costcenterid,hierarchyid:this.hierarchyid,formtype:this.formtype, jsonformdata: JSON.stringify(formdata)};\n        return Fragment.loadFragment('local_assignroles', 'new_costcenterassignrole', this.contextid, params);\n    };\n\n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {Promise}\n     */\n    NewcostcenterAssignrole.prototype.handleFormSubmissionResponse = function() {\n        this.modal.hide();\n        // We could trigger an event instead.\n        // Yuk.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        document.location.reload();\n    };\n\n    /**\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    NewcostcenterAssignrole.prototype.handleFormSubmissionFailure = function(data) {\n        // Oh noes! Epic fail :(\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n\n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    NewcostcenterAssignrole.prototype.submitFormAjax = function(e) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n\n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n      \n        Ajax.call([{\n            methodname: 'local_assignroles_submit_assigncostcenterrole_form',\n            args: {contextid: this.contextid, costcenterid:this.costcenterid,formtype:this.formtype, jsonformdata: JSON.stringify(formData)},\n            done: this.handleFormSubmissionResponse.bind(this, formData),\n            fail: this.handleFormSubmissionFailure.bind(this, formData)\n        }]);\n    };\n\n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    NewcostcenterAssignrole.prototype.submitForm = function(e) {\n        e.preventDefault();\n        var self = this;\n        self.modal.getRoot().find('form').submit();\n    };\n\n    return /** @alias module:local_location/newlocation */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n         * @param {int} contextid The contextid for the course.\n         * @return {Promise}\n         */\n        init: function(args) {\n\n            return new NewcostcenterAssignrole(args);\n        },\n        load: function(){\n\n        }\n    };\n});"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","NewcostcenterAssignrole","args","contextid","formtype","costcenterid","hierarchyid","costcentername","this","init","selector","prototype","modal","self","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","setLarge","getRoot","addClass","on","hidden","animate","setTimeout","destroy","shown","append","getFooter","find","hide","save","submitForm","submitFormAjax","show","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","data","setBody","e","preventDefault","formData","serialize","call","methodname","done","fail","submit","load"],"mappings":";;;;;;;;AAQAA,mDAAO,CAAC,SAAU,WAAY,qBAAsB,oBAAqB,gBAAiB,YAAa,aAC/F,SAASC,EAAGC,IAAKC,aAAcC,YAAaC,SAAUC,KAAMC,OAU5DC,wBAA0B,SAASC,WAC9BC,UAAYD,KAAKC,eAEjBC,SAAWF,KAAKE,cAEhBC,aAAeH,KAAKG,kBAEpBC,YAAcJ,KAAKI,iBAEnBC,eAAiBL,KAAKK,eAChBC,KACNC,KAAKP,KAAKQ,kBAOnBT,wBAAwBU,UAAUC,MAAQ,KAM1CX,wBAAwBU,UAAUR,WAAa,EAS/CF,wBAAwBU,UAAUF,KAAO,SAASP,UAE1CW,KAAOL,YAEAb,IAAImB,WAAW,4BAA6B,oBAAoBD,MAAME,KAAK,SAASC,cAChFpB,aAAaqB,OAAO,CACvBC,KAAMtB,aAAauB,MAAMC,YACzBJ,MAAOA,MACPK,KAAMR,KAAKS,aAEjBC,KAAKV,OAAOE,KAAK,SAASH,cAGxBC,KAAKD,MAAQA,MACbC,KAAKD,MAAMY,gBACNZ,MAAMa,UAAUC,SAAS,0BAGzBd,MAAMa,UAAUE,GAAG9B,YAAY+B,OAAQ,gBACnChB,MAAMa,UAAUI,QAAQ,OAAS,QAAS,KAC/CC,YAAW,WACPlB,MAAMmB,YACP,MACLR,KAAKf,OAGPK,KAAKD,MAAMa,UAAUE,GAAG9B,YAAYmC,MAAO,WACvCnB,KAAKD,MAAMa,UAAUQ,OAAO,8EACvBrB,MAAMsB,YAAYC,KAAK,0BAA0BR,GAAG,SAAS,WAC9Df,MAAMwB,OACNN,YAAW,WACPlB,MAAMmB,YACP,SAGTR,KAAKf,OAKPK,KAAKD,MAAMa,UAAUE,GAAG9B,YAAYwC,KAAMxB,KAAKyB,WAAWf,KAAKV,OAE/DA,KAAKD,MAAMa,UAAUE,GAAG,SAAU,OAAQd,KAAK0B,eAAehB,KAAKV,OACnEA,KAAKD,MAAM4B,YACN5B,MAAMa,UAAUI,QAAQ,OAAS,MAAO,KACtCrB,KAAKI,OACdW,KAAKf,QASfP,wBAAwBU,UAAUW,QAAU,SAASmB,eACzB,IAAbA,WACPA,SAAW,QAGXC,OAAS,CAACrC,aAAaG,KAAKH,aAAaC,YAAYE,KAAKF,YAAYF,SAASI,KAAKJ,SAAUuC,aAAcC,KAAKC,UAAUJ,kBACxH3C,SAASgD,aAAa,oBAAqB,2BAA4BtC,KAAKL,UAAWuC,SAQlGzC,wBAAwBU,UAAUoC,6BAA+B,gBACxDnC,MAAMwB,OAGXpC,EAAEgD,IAAI,iCAAiC,WACnCC,EAAEC,uBAAuBC,4BAE7BC,SAASC,SAASC,UAQtBrD,wBAAwBU,UAAU4C,4BAA8B,SAASC,WAGhE5C,MAAM6C,QAAQjD,KAAKc,QAAQkC,QAUpCvD,wBAAwBU,UAAU4B,eAAiB,SAASmB,GAExDA,EAAEC,qBAGEC,SAAWpD,KAAKI,MAAMa,UAAUU,KAAK,QAAQ0B,YAEjD9D,KAAK+D,KAAK,CAAC,CACPC,WAAY,qDACZ7D,KAAM,CAACC,UAAWK,KAAKL,UAAWE,aAAaG,KAAKH,aAAaD,SAASI,KAAKJ,SAAUuC,aAAcC,KAAKC,UAAUe,WACtHI,KAAMxD,KAAKuC,6BAA6BxB,KAAKf,KAAMoD,UACnDK,KAAMzD,KAAK+C,4BAA4BhC,KAAKf,KAAMoD,cAW1D3D,wBAAwBU,UAAU2B,WAAa,SAASoB,GACpDA,EAAEC,iBACSnD,KACNI,MAAMa,UAAUU,KAAK,QAAQ+B,UAGiB,CAUnDzD,KAAM,SAASP,aAEJ,IAAID,wBAAwBC,OAEvCiE,KAAM"}