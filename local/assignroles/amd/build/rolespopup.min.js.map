{"version":3,"file":"rolespopup.min.js","sources":["../src/rolespopup.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_courses/newcourse\n * @class      NewCourse\n * @package    local_courses\n * @copyright  2017 Shivani\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['local_assignroles/jquery.dataTables', 'jquery', 'core/str', 'core/modal_factory', 'core/modal_events',\n        'core/fragment', 'core/ajax', 'core/yui', 'jqueryui'],\n        function(DataTable, $, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n \n    /**\n     * Constructor\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @param {int} contextid\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var NewPopup = function(args) {\n        this.contextid = args.contextid;\n        var self = this;\n        self.init(args.selector);\n    };\n \n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    NewPopup.prototype.modal = null;\n \n    /**\n     * @var {int} contextid\n     * @private\n     */\n    NewPopup.prototype.contextid = -1;\n \n    /**\n     * Initialise the class.\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @private\n     * @return {Promise}\n     */\n    NewPopup.prototype.init = function(selector) {\n        //var triggers = $(selector);\n        var self = this;\n        // Fetch the title string.\n        $(selector).click(function(){\n            self.costcenterid = $(this).data('costcenterid');\n            self.costcentername = $(this).data('costcentername');\n            self.hierarchyid = $(this).data('hierarchyid');\n\n            Str.get_string('costcenterassignedrole', 'local_costcenter', self).then(function(title) {\n            \n                ModalFactory.create({\n                    type: ModalFactory.types.CANCEL,\n                    title: title,\n                    body: self.getBody()\n                }).done(function(modal) {\n                    // Keep a reference to the modal.\n                    self.modal = modal;\n          \n\n                    // Forms are big, we want a big modal.\n                    self.modal.setLarge();\n         \n                    // We want to reset the form every time it is opened.\n                    self.modal.getRoot().on(ModalEvents.hidden, function() {\n                        // self.modal.setBody('');\n                        self.modal.hide();\n                        self.modal.destroy();\n                    }.bind(this));\n\n                    // We want to reset the form every time it is opened.\n                    self.modal.getRoot().on(ModalEvents.cancel, function() {\n                        // self.modal.setBody('');\n                        self.modal.hide();\n                        self.modal.destroy();\n                    }.bind(this));\n                    self.modal.show();\n\n                    self.modal.getRoot().on(ModalEvents.bodyRendered, function() {\n                         self.dataTableshow(self.costcenterid);\n                    }.bind(this));                                    \n                                  \n                });    \n\n            });\n        });\n                    \n    };\n    NewPopup.prototype.dataTableshow = function(costcenterid){\n\t\tStr.get_strings([{\n            key: 'nodata_available',\n            component: 'local_assignroles',\n        },\n        {\n            key: 'search',\n            component: 'local_assignroles',\n        }\n\t\t]).then(function(s) {\n            $('#popup_user').DataTable({\n                'bPaginate': true,\n                'bFilter': true,\n                'bLengthChange': true,\n                'lengthMenu': [\n                    [5, 10, 25, 50, 100, -1],\n                    [5, 10, 25, 50, 100, 'All']\n                ],\n                'language': {\n                    'emptyTable': s[0],\n                    'infoEmpty': s[0],\n                    'zeroRecords': s[0],\n                    'paginate': {\n                        'previous': '<',\n                        'next': '>'\n                    }\n                },\n\t\t\t\t\"oLanguage\": {\n\t\t\t\t\t\"sSearch\": s[1]\n\t\t\t\t},\n\n                'bProcessing': true,\n            });\n        }.bind(this));\n        // $.fn.dataTable.ext.errMode = 'none';\n    };\n \n    /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    NewPopup.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        \n        // Get the content of the modal.\n        if(typeof this.costcenterid != 'undefined'){\n            var params = {costcenterid:this.costcenterid,hierarchyid:this.hierarchyid, jsonformdata: JSON.stringify(formdata)};\n        }else{\n            var params = {};\n        }\n        // console.log(params);\n        // alert(params);\n        return Fragment.loadFragment('local_assignroles', 'costcenterroleusers_display', this.contextid, params);\n    };\n    var unassignuser = function(args){\n        return Str.get_strings([{\n            key: 'confirmation',\n            component: 'local_assignroles',\n        },\n        {\n            key: 'unassignconfirm',\n            component: 'local_assignroles',\n            param :args\n        },\n        {\n            key: 'unassign',\n            component: 'local_assignroles'\n        }]).then(function(s) {\n            ModalFactory.create({\n                title: s[0],\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: s[1]\n            }).done(function(modal) {\n                this.modal = modal;\n                modal.setSaveButtonText(s[2]);\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n                    args.confirm = true;\n                    console.log(args);\n                    var params = {};\n                    params.contextid = args.contextid;\n                    params.roleid = args.roleid;\n                    params.userid = args.userid;\n                    var promise = Ajax.call([{\n                        methodname: 'local_assignroles_unassign_role',\n                        args: params\n                    }]);\n                    promise[0].done(function(resp) {\n                        // this.modal.hide();\n                        // this.modal.destroy();\n                        window.location.href = window.location.href;\n                    }).fail(function(ex) {\n                        // do something with the exception\n                         console.log(ex);\n                    });\n                }.bind(this));\n                modal.show();\n            }.bind(this));\n        }.bind(this));\n    }\n \n \n    return /** @alias module:local_evaluation/newevaluation */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n         * @param {int} contextid The contextid for the course.\n         * @return {Promise}\n         */\n        init: function(args) {\n            this.Datatable();\n            return new NewPopup(args);\n        },\n        Datatable: function() {\n            \n        },\n        unassignConfirm: function(args) {\n            return unassignuser(args);\n        },\n    };\n});"],"names":["define","DataTable","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","NewPopup","args","contextid","this","init","selector","prototype","modal","self","click","costcenterid","data","costcentername","hierarchyid","get_string","then","title","create","type","types","CANCEL","body","getBody","done","setLarge","getRoot","on","hidden","hide","destroy","bind","cancel","show","bodyRendered","dataTableshow","get_strings","key","component","s","formdata","params","jsonformdata","JSON","stringify","loadFragment","Datatable","unassignConfirm","param","SAVE_CANCEL","setSaveButtonText","save","e","preventDefault","confirm","console","log","roleid","userid","call","methodname","resp","window","location","href","fail","ex","unassignuser"],"mappings":"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"}