{"version":3,"file":"courseAjaxform.min.js","sources":["../src/courseAjaxform.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_courses/courseAjaxform\n * @class      courseAjaxform\n * @package    local_courses\n * @copyright  2018 Sreenivas\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later \n */\ndefine(['local_courses/jquery.dataTables', 'jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui', 'core/templates'],\n        function(dataTable, $, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y, Templates) {\n\n    /**\n     * Constructor\n     *\n     * @param {object} args\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var courseAjaxform = function(args) {\n        this.contextid = args.contextid ? args.contextid : 1;\n        this.args = args;\n        this.init(args);\n    };\n\n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    courseAjaxform.prototype.modal = null;\n\n    /**\n     * @var {int} contextid\n     * @private\n     */\n    courseAjaxform.prototype.contextid = -1;\n\n    /**\n     * Initialise the class.\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @private\n     * @return {Promise}\n     */\n    courseAjaxform.prototype.init = function(args) {\n        // Fetch the title string.\n        var self = this;\n         if (args.courseid) {\n            if (args.callback==='custom_selfcompletion_form') {\n                var head =  {key: 'selfcompletionname',component: 'local_courses',param: args.coursename};\n            }else{\n                if (args.userid) {\n                    var head =  {key:'browseevidencesname', component:'local_courses',param: args.coursename};\n                }else{\n                    var head =  {key:'editcourse', component:'local_courses'};\n                }\n            }\n        }else{\n           var head = {key:'createnewcourse', component:'local_courses'};\n        }\n        customstrings = Str.get_strings([head, {\n                key: 'yes',\n                component: 'customfield'\n            },\n            {\n                key: 'no',\n                component: 'customfield'\n            },\n            {\n                key: 'saveandcontinue',\n                component: 'local_courses'\n            },\n            {\n                key: 'cancel',\n                component: 'moodle'\n            }]);\n        return customstrings.then(function(strings) {\n            // Create the modal.\n            return ModalFactory.create({\n                type: ModalFactory.types.DEFAULT,\n                title: strings[0],\n                body: this.getBody(),\n                footer: this.getFooter(strings),\n            });\n        }.bind(this)).then(function(modal) {\n            // Keep a reference to the modal.\n            this.modal = modal;\n            \n            // this.getFooter().then(function(s){\n            //     // this.modal.footer = s;\n            //     this.modal.setFooter(s);\n            //     // console.log(this.modal.footer);\n            // }.bind(this));\n            // this.modal.showFooter();\n            if (args.callback !='custom_selfcompletion_form') {\n                // Forms are big, we want a big modal.\n                this.modal.setLarge();\n\n                this.modal.getRoot().addClass('openLMStransition local_courses');\n\n                // We want to reset the form every time it is opened.\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\n                    this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 1000);\n                    this.modal.setBody('');\n                }.bind(this));\n            }\n\n            // // We want to hide the submit buttons every time it is opened.\n            // this.modal.getRoot().on(ModalEvents.shown, function() {\n            //     this.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n            // }.bind(this));\n\n            // We catch the modal save event, and use it to submit the form inside the modal.\n            // Triggering a form submission will give JS validation scripts a chance to check for errors.\n            // this.modal.getRoot().on(ModalEvents.save, this.submitForm.bind(this));\n         \n            if (args.callback =='custom_selfcompletion_form') {\n                this.modal.getFooter().find('[data-action=\"save\"]').on('click', function() {\n                    window.location.href = M.cfg.wwwroot + '/course/togglecompletion.php?confirm=1&course='+args.courseid+'&sesskey='+M.cfg.sesskey\n                });\n\n                this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n\n                    window.location.reload();\n                    \n                });\n                \n                this.modal.getRoot().find('[data-action=\"hide\"]').on('click', function() {\n                    window.location.reload();\n                   \n                });\n            }else{\n                this.modal.footer.find('[data-action=\"save\"]').on('click', this.submitForm.bind(this));\n                // We also catch the form submit event and use it to submit the form with ajax.\n                this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                    modal.setBody('');\n                    modal.hide();\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 1000);\n                    if (args.form_status !== 0 ) {\n                        window.location.reload();\n                    }\n                });\n                \n                this.modal.getRoot().find('[data-action=\"hide\"]').on('click', function() {\n                    modal.hide();\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 1000);\n                     //modal.destroy();\n                    if (args.form_status !== 0 ) {\n                        window.location.reload();\n                    }\n                    \n                });\n            }\n\n                if(self.args.callback == 'custom_course_form'){\n                    $(document).on('click', '.custom_course_form_redirect', function(){\n                        var instanceid = $(\"#courseid\").val();\n                        if(instanceid > 0){\n                            self.args.form_status = $(this).data('value');\n                            var data = self.getBody();\n                            data.then(function(html, js) {\n                                if (html === false) {\n                                  // window.location.reload();\n                                    self.handleFormSubmissionResponse(args);\n                                }\n                            });\n                            modal.setBody(data);\n                            // if(self.args.form_status==0){\n                            //     $('[data-action=\"skip\"]').css('display', 'none');\n                            //     $('[data-action=\"previous\"]').css('display', 'none');\n                            // }else{\n                            //     $('[data-action=\"skip\"]').css('display', 'block');\n                            //     $('[data-action=\"previous\"]').css('display', 'block');\n                            // }\n                        }\n                    });\n                }\n\n            this.modal.getRoot().on('submit', 'form', function(form) {\n                self.submitFormAjax(form, self.args);\n            });\n            this.modal.show();\n            this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n            return this.modal;\n        }.bind(this));\n    };\n\n    /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    courseAjaxform.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        // Get the content of the modal.\n        this.args.jsonformdata = JSON.stringify(formdata);\n        return Fragment.loadFragment(this.args.component, this.args.callback, this.contextid, this.args);\n    };\n    /**\n     * @method getFooter\n     * @private\n     * @return {Promise}\n     */\n    courseAjaxform.prototype.getFooter = function(customstrings) {\n        // return Str.get_strings([{\n        //         key: 'yes',\n        //         component: 'customfield'\n        //     },\n        //     {\n        //         key: 'no',\n        //         component: 'customfield'\n        //     },\n        //     {\n        //         key: 'saveandcontinue',\n        //         component: 'local_courses'\n        //     },\n        //     {\n        //         key: 'cancel'\n        //     }]).then(function(s) {\n                var footer = '';\n                if (this.args.callback==='custom_selfcompletion_form') {\n                    footer += '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">'+customstrings[1]+'</button>&nbsp;';\n                    // if(this.args.form_status == 0) {\n                    //     $style = 'style=\"display:none;\"';\n                    //     $footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"skip\" ' + $style + '>Skip</button>&nbsp;';\n                    // }\n                    footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">'+customstrings[2]+'</button>';\n                }\n                else if(this.args.viewtype!='userview'){\n                    footer+= '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">'+customstrings[3]+'</button>&nbsp;';\n                    // if(this.args.form_status == 0) {\n                    //     $style = 'style=\"display:none;\"';\n                    //     $footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"skip\" ' + $style + '>Skip</button>&nbsp;';\n                    // }\n                    footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">'+customstrings[4]+'</button>';\n                }\n            return footer;\n        // }.bind(this));\n    };\n     /**\n     * @method getFooter\n     * @private\n     * @return {Promise}\n     */\n    courseAjaxform.prototype.getcontentFooter = function() {\n        return Str.get_strings([{\n                key: 'cancel'\n            }]).then(function(s) {\n            $footer = '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">'+s[0]+'</button>';\n            return $footer;\n        }.bind(this));\n    };\n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {Promise}\n     */\n    courseAjaxform.prototype.handleFormSubmissionResponse = function(args) {\n        this.modal.hide();\n        // We could trigger an event instead.\n        // Yuk.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n\n        if (args.userid) {\n             this.modal.hide();\n        }else{\n            return Str.get_strings([{\n                key: 'courseoverview',\n                component: 'local_courses'\n            }]).then(function(s) {\n                \n                // This will be the context for our template. So {{name}} in the template will resolve to \"Tweety bird\".\n                var context = { courseid: args.courseid, configpath: M.cfg.wwwroot, enrolid: args.enrolid, contextid:args.contextid};\n\n                var modalPromise = ModalFactory.create({\n                    type: ModalFactory.types.DEFAULT,\n                    body: Templates.render('local_courses/courses', context),\n                    // footer: this.getcontentFooter(),\n                });\n                $.when(modalPromise).then(function(modal) {\n                    modal.setTitle(s[0]);\n\n                    // Forms are big, we want a big modal.\n                    modal.setLarge();\n\n                    modal.getRoot().addClass('openLMStransition');\n                    modal.show();\n                    modal.getRoot().animate({\"right\":\"0%\"}, 500);\n                    // modal.getRoot().on(ModalEvents.hidden, function() {\n                    //     modal.hide();\n                    // });\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        modal.destroy();\n                    }.bind(this));\n                    modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                        modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                        setTimeout(function(){\n                            window.location.reload();\n                        }, 600);\n                    });\n                    modal.getRoot().find('[data-action=\"hide\"]').on('click', function() {\n                        modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                        setTimeout(function(){\n                            window.location.reload();\n                        }, 200);\n                    });\n                    return modal;\n                }).fail(Notification.exception);\n                $('#coursesearch').dataTable().destroy();\n            }.bind(this));\n        }\n        // Classroom.Datatable();\n    };\n\n    /**\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    courseAjaxform.prototype.handleFormSubmissionFailure = function(data) {\n        // Oh noes! Epic fail :(\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n\n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    courseAjaxform.prototype.submitFormAjax = function(e, args) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n        var self = this;\n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n\n        if (args.userid) {\n             var methodname = args.plugintype + '_' + args.pluginname + '_submit_evidence_course_form';\n        }else{\n            var methodname = args.plugintype + '_' + args.pluginname + '_submit_create_course_form';\n        }\n        // Now we can continue...\n        var params = {};\n        params.contextid = this.contextid;\n        params.jsonformdata = JSON.stringify(formData);\n        params.form_status = args.form_status;\n        // params.id = args.id;\n\n        var promise = Ajax.call([{\n            methodname: methodname,\n            args: params\n        }]);\n        promise[0].done(function(resp){\n            self.args.courseid = resp.courseid;\n            self.args.enrolid = resp.enrolid;\n            if(resp.form_status !== -1 && resp.form_status !== false) {\n                self.args.form_status = resp.form_status;\n                self.handleFormSubmissionFailure();\n            } else {\n                self.handleFormSubmissionResponse(self.args);\n            }\n            // if(args.form_status > 0) {\n                // $('[data-action=\"skip\"]').css('display', 'inline-block');\n            // }\n        }).fail(function(){\n            self.handleFormSubmissionFailure(formData);\n        });\n\n    };\n\n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    courseAjaxform.prototype.submitForm = function(e) {\n        e.preventDefault();\n        this.modal.getRoot().find('form').submit();\n    };\n\n    return /** @alias module:core_group/courseAjaxform */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n         * @param {int} contextid The contextid for the course.\n         * @return {Promise}\n         */\n        init: function(args) {\n            return new courseAjaxform(args);\n        },\n        deleteConfirm: function(args){\n            return Str.get_strings([{\n                key: 'confirm'\n            },\n            {\n                key: 'deleteconfirm',\n                component: 'local_courses',\n                param : args\n            },\n            {\n                key: 'deleteallconfirm',\n                component: 'local_courses'\n            },\n            {\n                key: 'delete'\n            },\n            {\n                key: 'yes',\n                component: 'customfield'\n            },\n            {\n                key: 'no',\n                component: 'customfield'\n            }]).then(function(s) {\n                ModalFactory.create({\n                    title: s[0],\n                    type: ModalFactory.types.DEFAULT,\n                    body: s[1],\n                    footer: '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">'+s[4]+'</button>&nbsp;' +\n            '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">'+s[5]+'</button>'\n                }).done(function(modal) {\n                    this.modal = modal;\n                    \n                    modal.getRoot().find('[data-action=\"save\"]').on('click', function() {\n                        args.confirm = true;\n                        var promise = Ajax.call([{\n                            methodname: 'local_courses_' + args.action,\n                            args: args\n                        }]);\n                        promise[0].done(function() {\n                            window.location.href = window.location.href;\n                        }).fail(function(ex) {\n                            // do something with the exception\n                             console.log(ex);\n                        });\n                    }.bind(this));\n                    modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                        modal.setBody('');\n                        modal.hide();\n                    });\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n        },\n        courseautoenrol: function(args){\n             console.log(args);\n            var methodname = 'local_courses_enable_autoenroll';\n            var promise = Ajax.call([{\n                methodname: methodname,\n                args: args\n            }]);\n            promise[0].done(function(resp){\n                window.location.reload();\n            }).fail(function(){\n                console.log(\"fail\");\n            });\n\n        },\n        getCatlist: function() {\n            \n        },\n        load: function () {}\n    };\n});\n"],"names":["define","dataTable","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","Templates","courseAjaxform","args","contextid","init","prototype","modal","self","this","courseid","callback","head","key","component","param","coursename","userid","customstrings","get_strings","then","strings","create","type","types","DEFAULT","title","body","getBody","footer","getFooter","bind","setLarge","getRoot","addClass","on","hidden","animate","setTimeout","destroy","setBody","find","window","location","href","M","cfg","wwwroot","sesskey","reload","submitForm","hide","form_status","document","val","data","html","js","handleFormSubmissionResponse","form","submitFormAjax","show","formdata","jsonformdata","JSON","stringify","loadFragment","viewtype","getcontentFooter","s","$footer","use","core_formchangechecker","reset_form_dirty_state","context","configpath","enrolid","modalPromise","render","when","setTitle","fail","Notification","exception","handleFormSubmissionFailure","e","preventDefault","formData","serialize","methodname","plugintype","pluginname","params","call","done","resp","submit","deleteConfirm","confirm","action","ex","console","log","courseautoenrol","getCatlist","load"],"mappings":"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"}