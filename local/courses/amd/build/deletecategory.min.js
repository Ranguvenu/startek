/**
 * local courses
 *
 * @package    local_courses
 * @copyright  2019 eAbyas <eAbyas.in>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("local_courses/deletecategory",["jquery","core/str","core/modal_factory","core/modal_events","core/fragment","core/ajax","core/yui"],(function($,Str,ModalFactory,ModalEvents,Fragment,Ajax,Y){var DelCategory=function(contextid,categoryid){this.contextid=contextid,this.categoryid=categoryid;this.init()};return DelCategory.prototype.modal=null,DelCategory.prototype.contextid=-1,DelCategory.prototype.init=function(){var self=this;return Str.get_string("deletecategory","local_courses").then(function(title){return ModalFactory.create({type:ModalFactory.types.SAVE_CANCEL,title:title,body:self.getBody()})}.bind(self)).then(function(modal){return self.modal=modal,self.modal.show(),self.modal.setLarge(),self.modal.getRoot().on(ModalEvents.hidden,function(){self.modal.setBody("")}.bind(this)),self.modal.getRoot().on(ModalEvents.shown,function(){self.modal.getRoot().append("<style>[data-fieldtype=submit] { display: none ! important; }</style>")}.bind(this)),self.modal.getRoot().on(ModalEvents.save,self.submitForm.bind(self)),self.modal.getRoot().on("submit","form",self.submitFormAjax.bind(self)),this.modal}.bind(this))},DelCategory.prototype.getBody=function(formdata){if(void 0===formdata&&(formdata={}),void 0!==this.categoryid)var params={categoryid:this.categoryid,jsonformdata:JSON.stringify(formdata)};else params={};return Fragment.loadFragment("local_courses","deletecategory_form",this.contextid,params)},DelCategory.prototype.handleFormSubmissionResponse=function(){this.modal.hide(),Y.use("moodle-core-formchangechecker",(function(){M.core_formchangechecker.reset_form_dirty_state()})),document.location.reload()},DelCategory.prototype.handleFormSubmissionFailure=function(data){this.modal.setBody(this.getBody(data))},DelCategory.prototype.submitFormAjax=function(e){e.preventDefault();var formData=this.modal.getRoot().find("form").serialize();console.log(formData),Ajax.call([{methodname:"local_courses_submit_delete_category_form",args:{contextid:this.contextid,jsonformdata:JSON.stringify(formData),categoryid:this.categoryid},done:this.handleFormSubmissionResponse.bind(this,formData),fail:this.handleFormSubmissionFailure.bind(this,formData)}])},DelCategory.prototype.submitForm=function(e){e.preventDefault();this.modal.getRoot().find("form").submit()},{init:function(args){return new DelCategory(args.contextid,args.categoryid)},load:function(){},reasonfor_unabletodelete:function(args){return Str.get_string("reason","local_courses").then(function(s){ModalFactory.create({title:s,type:ModalFactory.types.DEFAULT,body:args.reason}).done(function(modal){this.modal=modal,modal.show()}.bind(this))}.bind(this))},suspendonlinetest:function(elem,visible,args){return Str.get_strings([{key:"suspendconfirm",component:"local_courses",param:args},{key:"inactiveconfirm",component:"local_courses",param:args},{key:"activeconfirm",component:"local_courses",param:args}]).then(function(s){"enable"==elem.status?s[1]=s[1]:"disable"==elem.status&&(s[1]=s[2]),ModalFactory.create({title:s[0],type:ModalFactory.types.DEFAULT,body:s[1],footer:'<button type="button" class="btn btn-primary" data-action="save">'+M.util.get_string("yes","moodle")+'</button>&nbsp;<button type="button" class="btn btn-secondary" data-action="cancel">'+M.util.get_string("no","moodle")+"</button>"}).done(function(modal){this.modal=modal,modal.getRoot().find('[data-action="save"]').on("click",function(){window.location.href=M.cfg.wwwroot+"/local/courses/index.php?categoryid="+elem.id+"&visible="+elem.visible+"&hide=1&sesskey="+M.cfg.sesskey}.bind(this)),modal.getFooter().find('[data-action="cancel"]').on("click",(function(){modal.setBody(""),modal.hide()})),modal.show()}.bind(this))}.bind(this))}}}));

//# sourceMappingURL=deletecategory.min.js.map