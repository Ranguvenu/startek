/**
 * Add a create new group modal to the page.
 *
 * @module     local_notification/newnotification
 * @class      NewNotification
 * @package    local_notification
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("local_notifications/notifications",["jquery","core/str","core/modal_factory","core/modal_events","core/fragment","core/ajax","core/yui"],(function($,Str,ModalFactory,ModalEvents,Fragment,Ajax,Y){var NewNotification=function(args,notificationid,instance,plugin){this.contextid=args.context,this.id=args.id,this.notificationid=notificationid,this.instance=instance,this.plugin=plugin;this.args=args,this.init(args)};return NewNotification.prototype.modal=null,NewNotification.prototype.contextid=-1,NewNotification.prototype.init=function(args){var self=this;if(args.id?self.notificationid=args.id:self.notificationid=0,self.notificationid)var head={key:"update_notification",component:"local_notifications"};else head={key:"create_notification",component:"local_notifications"};return Str.get_strings([head,{key:"save_continue",component:"local_users"},{key:"cancel",component:"moodle"},{key:"no",component:"moodle"}]).then(function(str){return ModalFactory.create({type:ModalFactory.types.DEFAULT,title:str[0],body:this.getBody(),footer:this.getFooter(str)})}.bind(this)).then(function(modal){return this.modal=modal,this.modal.setLarge(),this.modal.getRoot().addClass("openLMStransition local_notifications"),this.modal.getRoot().on(ModalEvents.hidden,function(){this.modal.getRoot().animate({right:"-85%"},500),modal.destroy()}.bind(this)),this.modal.getFooter().find('[data-action="save"]').on("click",this.submitForm.bind(this)),this.modal.getFooter().find('[data-action="cancel"]').on("click",(function(){modal.hide(),setTimeout((function(){modal.destroy()}),5e3)})),this.modal.getFooter().find('[data-action="skip"]').on("click",(function(){self.args.form_status=self.args.form_status+1;var data=self.getBody();data.then((function(html,js){!1===html&&window.location.reload()})),modal.setBody(data)})),"notification_form"==self.args.callback&&$(document).on("click",".custom_notification_form_redirect",(function(){if($("#notificationid").val()>0){self.args.form_status=$(this).data("value");var data=self.getBody();data.then((function(html,js){!1===html&&self.handleFormSubmissionResponse(args)})),modal.setBody(data)}})),this.modal.getRoot().on("submit","form",(function(form){self.submitFormAjax(form,self.args)})),this.modal.show(),this.modal.getRoot().animate({right:"0%"},500),this.modal}.bind(this))},NewNotification.prototype.getBody=function(formdata){return void 0===formdata&&(formdata={}),this.args.jsonformdata=JSON.stringify(formdata),Fragment.loadFragment("local_notifications","new_notification_form",this.contextid,this.args)},NewNotification.prototype.getFooter=function(str){return $footer='<button type="button" class="btn btn-primary" data-action="save">'+str[1]+"</button>&nbsp;",$footer+='<button type="button" class="btn btn-secondary" data-action="cancel">'+str[2]+"</button>",$footer},NewNotification.prototype.handleFormSubmissionResponse=function(){this.modal.hide(),Y.use("moodle-core-formchangechecker",(function(){M.core_formchangechecker.reset_form_dirty_state()}));var context={id:args.id},modalPromise=ModalFactory.create({type:ModalFactory.types.DEFAULT,body:Templates.render("local_classroom/classroomview",context)});$.when(modalPromise).then((function(modal){})).fail(Notification.exception)},NewNotification.prototype.handleFormSubmissionFailure=function(data){this.modal.setBody(this.getBody(data))},NewNotification.prototype.submitFormAjax=function(e,args){e.preventDefault();var self=this,formData=this.modal.getRoot().find("form").serialize(),params={};params.contextid=this.contextid,params.jsonformdata=JSON.stringify(formData),params.form_status=args.form_status,Ajax.call([{methodname:"local_notifications_submit_create_notification_form",args:params}])[0].done((function(resp){-1!==resp.form_status&&!1!==resp.form_status?(self.args.form_status=resp.form_status,self.args.id=resp.id,self.handleFormSubmissionFailure()):(self.modal.hide(),window.location.reload()),args.form_status>0&&$('[data-action="skip"]').css("display","inline-block")})).fail((function(ex){self.handleFormSubmissionFailure(formData)}))},NewNotification.prototype.submitForm=function(e){e.preventDefault();this.modal.getRoot().find("form").submit()},{init:function(args){return new NewNotification(args)},load:function(){}}}));

//# sourceMappingURL=notifications.min.js.map