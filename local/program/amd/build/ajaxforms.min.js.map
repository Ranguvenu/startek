{"version":3,"file":"ajaxforms.min.js","sources":["../src/ajaxforms.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     core_group/AjaxForms\n * @class      AjaxForms\n * @package    core_group\n * @copyright  2017 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n        'core/str',\n        'core/modal_factory',\n        'core/modal_events',\n        'core/fragment',\n        'core/ajax',\n        'core/yui',\n        'core/templates',\n        'local_program/select2',\n        'local_program/program','local_program/jquery.dataTables'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y, Templates, select2, program) {\n\n    /**\n     * Constructor\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @param {int} contextid\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    programlastchildpopup = function(args) {\n            $.ajax({\n                type: \"POST\",\n                url:   M.cfg.wwwroot + '/local/program/ajax.php',\n                data: { programid: args.id, action:'programlastchildpopup',\n                    sesskey: M.cfg.sesskey\n                },\n                success: function(returndata) {\n                    //Var returned_data is ONLY available inside this fn!\n                    ModalFactory.create({\n                        title: Str.get_string('program_info', 'local_program'),\n                        body: returndata\n                      }).done(function(modal) {\n                        // Do what you want with your new modal.\n                        modal.show();\n                         modal.setLarge();\n                         modal.getRoot().addClass('openLMStransition');\n                            modal.getRoot().animate({\"right\":\"0%\"}, 500);\n                            modal.getRoot().on(ModalEvents.hidden, function() {\n                            modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                                    setTimeout(function(){\n                                    modal.destroy();\n                                }, 1000);\n                            }.bind(this));\n                            $(\".close\").click(function(){\n                                window.location.href =  window.location.href;\n                            });\n                         //return modal;\n                      });\n                }\n            });\n    };\n    var AjaxForms = function(args) {\n        this.contextid = args.contextid;\n        this.args = args;\n        this.init(args);\n    };\n\n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    AjaxForms.prototype.modal = null;\n\n    /**\n     * @var {int} contextid\n     * @private\n     */\n    AjaxForms.prototype.contextid = -1;\n\n    /**\n     * Initialise the class.\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @private\n     * @return {Promise}\n     */\n    AjaxForms.prototype.init = function(args) {\n        // Fetch the title string.\n        var self = this;\n            switch (args.callback) {\n                case 'program_form':\n                    switch (args.id) {\n                        case 0:\n                            header_label = {key:'createprogram', component:'local_program'};\n                        break;\n                        default:\n                            header_label = {key:'updateprogram', component:'local_program'};\n                        break;\n                    }\n                break;\n                case 'course_form':\n                    switch (args.id) {\n                        case 0:\n                            header_label = {key:'addcourses', component:'local_program'};\n                        break;\n                        default:\n                            header_label = {key:'updatecourses', component:'local_program'};\n                        break;\n                    }\n                break;\n                case 'program_completion_form':\n                    header_label = {key:'program_completion_settings', component:'local_program'};\n                break;\n                case 'program_managelevel_form':\n                    header_label = {key:'addlevel', component:'local_program'};\n                break;\n                case 'level_completion_settings':\n                    switch (args.id) {\n                        case 0:\n\n                            header_label = {key:'addcompletioncriteria', component:'local_program'};\n\n                        break;\n\n                        default:\n\n                            header_label = {key:'updatecompletioncriteria', component:'local_program'};\n\n                        break;\n                    }\n                break;\n                case 'program_completion_settings':\n                    switch (args.id) {\n                        case 0:\n\n                            header_label = {key:'addprogramcompletioncriteria', component:'local_program'};\n\n                        break;\n\n                        default:\n\n                            header_label = {key:'updateprogramcompletioncriteria', component:'local_program'};\n\n                        break;\n                    }\n                break;\n            }\n        customstrings = Str.get_strings([header_label,{\n                        key: 'savecontinue',\n                        component: 'local_program'\n                    },\n                    {\n                        key: 'assign',\n                        component: 'local_program'\n                    },\n                    {\n                        key: 'save',\n                        component: 'local_program'\n                    },\n                    {\n                        key: 'previous',\n                        component: 'local_program'\n                    },\n                    {\n                        key: 'skip',\n                        component: 'local_program'\n                    },\n                    {\n                        key: 'cancel',\n                        component: 'local_program'\n                    }]);\n\n        return customstrings.then(function(strings) {\n            // Create the modal.\n            return ModalFactory.create({\n                type: ModalFactory.types.DEFAULT,\n                title: strings[0],\n                body: this.getBody(),\n                footer: this.getFooter(strings),\n            });\n        }.bind(this)).then(function(modal) {\n            // Keep a reference to the modal.\n            this.modal = modal;\n\n            // Forms are big, we want a big modal.\n            this.modal.setLarge();\n\n            this.modal.getRoot().addClass('openLMStransition local_program');\n\n            // We want to reset the form every time it is opened.\n            this.modal.getRoot().on(ModalEvents.hidden, function() {\n                this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                setTimeout(function(){\n                    modal.destroy();\n                }, 1000);\n            }.bind(this));\n            this.modal.getFooter().find('[data-action=\"save\"]').on('click', this.submitForm.bind(this));\n            this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                window.location.href =  window.location.href;\n            });\n            this.modal.getFooter().find('[data-action=\"skip\"]').on('click', function() {\n                self.args.form_status = self.args.form_status + 1;\n                 // OL-1042 Add Target Audience to programs//\n                 if (args.callback == 'program_form') {\n                // OL-1042 Add Target Audience to programs//\n                    // programlastchildpopup(args);\n                 }\n                var data = self.getBody();\n                data.then(function(html, js) {\n                    if (html === false) {\n                        self.handleFormSubmissionResponse(args);\n                        if (!$.fn.DataTable.isDataTable( '#viewprograms')){\n                          $('#viewprograms').dataTable({\n                              'language': {\n                                  'paginate': {\n                                  'previous': '<',\n                                  'next': '>'\n                              },\n                          },\n                          'bInfo': false,\n                          }).destroy();\n                        }\n                        program.Datatable();\n                    }\n                });\n                modal.setBody(data);\n            });\n\n                if(self.args.callback == 'program_form'){\n                    $(document).on('click', '.custom_program_form_redirect', function(){\n                        var instanceid = $(\"#programid\").val();\n                        if(instanceid > 0){\n                            self.args.form_status = $(this).data('value');\n                            var data = self.getBody();\n                            data.then(function(html, js) {\n                                if (html === false) {\n                                  // window.location.reload();\n                                    self.handleFormSubmissionResponse(args);\n                                }\n                            });\n                            modal.setBody(data);\n                            // if(self.args.form_status==0){\n                            //     $('[data-action=\"skip\"]').css('display', 'none');\n                            //     $('[data-action=\"previous\"]').css('display', 'none');\n                            // }else{\n                            //     $('[data-action=\"skip\"]').css('display', 'block');\n                            //     $('[data-action=\"previous\"]').css('display', 'block');\n                            // }\n                        }\n                    });\n                }\n\n            this.modal.getRoot().on('submit', 'form', function(form) {\n                self.submitFormAjax(form, self.args);\n            });\n            this.modal.show();\n            this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n            $(\".close\").click(function(){\n                window.location.href =  window.location.href;\n            });\n            return this.modal;\n        }.bind(this));\n    };\n\n    /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    AjaxForms.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        // Get the content of the modal.\n        this.args.jsonformdata = JSON.stringify(formdata);\n        return Fragment.loadFragment(this.args.component, this.args.callback, this.contextid, this.args);\n    };\n    /**\n     * @method getFooter\n     * @private\n     * @return {Promise}\n     */\n    AjaxForms.prototype.getFooter = function(customstrings) {\n        $footer = '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">'+customstrings[1]+'</button>&nbsp;';\n        if (this.args.form_status == 0) {\n            $style = 'style=\"display:none;\"';\n            $footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"skip\" ' + $style + '>'+customstrings[5]+'</button>&nbsp;';\n        }\n        $footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">'+customstrings[6]+'</button>';\n        return $footer;\n    };\n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {Promise}\n     */\n    AjaxForms.prototype.handleFormSubmissionResponse = function(args) {\n        this.modal.hide();\n        // We could trigger an event instead.\n        // Yuk.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        if (args.form_status == -2) {\n            window.location.reload();\n        }\n        programlastchildpopup(args);\n    };\n\n    /**\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    AjaxForms.prototype.handleFormSubmissionFailure = function(data) {\n        // Oh noes! Epic fail :(\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n\n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    AjaxForms.prototype.submitFormAjax = function(e, args) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n        var self = this;\n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n        var methodname = args.plugintype + '_' + args.pluginname + '_submit_instance';\n        // Now we can continue...\n        var params = {};\n        params.contextid = this.contextid;\n        params.jsonformdata = JSON.stringify(formData);\n        params.form_status = args.form_status;\n\n        var promise = Ajax.call([{\n            methodname: methodname,\n            args: params\n        }]);\n        promise[0].done(function(resp){\n            self.args.form_status = resp.form_status;\n            if (resp.form_status >= 0 && resp.form_status !== false) {\n                self.args.form_status = resp.form_status;\n                self.args.id = resp.id;\n                self.handleFormSubmissionFailure();\n            } else {\n                self.args.id = resp.id;\n                self.handleFormSubmissionResponse(self.args);\n            }\n            if (args.form_status > 0) {\n                $('[data-action=\"skip\"]').css('display', 'inline-block');\n            }\n        }).fail(function(ex){\n            self.handleFormSubmissionFailure(formData);\n        });\n    };\n\n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    AjaxForms.prototype.submitForm = function(e) {\n        e.preventDefault();\n        this.modal.getRoot().find('form').submit();\n    };\n\n    var classroomdataTableshow  = function(courseid) {\n        var params = {};\n        params.action = 'classroomlist';\n        params.courseid = courseid\n        $('#classroomlists').DataTable({\n            'processing': true,\n            'serverSide': true,\n            \"language\": {\n                \"paginate\": {\n                \"next\": \">\",\n                \"previous\": \"<\"\n                },\n                \"search\": \"\",\n                \"searchPlaceholder\": \"Search\",\n                \"processing\": '<img src='+M.cfg.wwwroot + '/local/ajax-loader.svg>'\n            },\n            'ajax': {\n            \"type\": \"POST\",\n            \"url\": M.cfg.wwwroot + '/local/program/ajax.php',\n            \"data\":params\n            },\n            \"responsive\": true,\n            \"pageLength\": 5,\n            \"bLengthChange\": false,\n            \"bInfo\" : false,\n        });\n    };\n\n    return /** @alias module:core_group/AjaxForms */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n         * @param {int} contextid The contextid for the course.\n         * @return {Promise}\n         */\n        init: function(args) {\n            return new AjaxForms(args);\n        },\n        load: function () {\n            $(document).on('click', '#reset_program_completions', function(){\n                var programid = $(this).data('programid')\n                levelid = $(this).data('levelid');\n                $.ajax({\n                type: \"POST\",\n                url:   M.cfg.wwwroot + '/local/program/ajax.php',\n                data: { programid: programid, levelid:levelid, action:'deletecompletions',\n                    sesskey: M.cfg.sesskey\n                },\n                success: function(returndata) {\n                    window.location.reload();\n                }\n            });\n            });\n               $(document).on('click', '.program_classroom_icon', function(){\n                    var data = $(this).data();\n                    var bodycontent = Fragment.loadFragment('local_program', 'course_classroom_info', 1, data);\n                    Str.get_string('listofclassrooms', 'local_program', self).then(function(title) {\n                        ModalFactory.create({\n                            type: ModalFactory.types.CANCEL,\n                            title: title,\n                            body: bodycontent\n                        }).done(function(modal) {\n                            // Keep a reference to the modal.\n                            self.modal = modal;\n\n\n                            // Forms are big, we want a big modal.\n                            self.modal.setLarge();\n\n                            // We want to reset the form every time it is opened.\n                            self.modal.getRoot().on(ModalEvents.hidden, function() {\n                                // self.modal.setBody('');\n                                self.modal.hide();\n                                self.modal.destroy();\n                            }.bind(this));\n\n                            // We want to reset the form every time it is opened.\n                            self.modal.getRoot().on(ModalEvents.cancel, function() {\n                                // self.modal.setBody('');\n                                self.modal.hide();\n                                self.modal.destroy();\n                            }.bind(this));\n                            self.modal.show();\n\n                            self.modal.getRoot().on(ModalEvents.bodyRendered, function() {\n                                 classroomdataTableshow(data.courseid);\n                            }.bind(this));\n\n                        });\n                    });\n                });\n                $(document).on('click', '.togglebutton', function(){\n                    if($(this).hasClass('show_more')){\n                        $(this).parent().find('.show_less').removeClass('hidden');\n                        $(this).parent().find('.show_more').addClass('hidden');\n                    }else{\n                        $(this).parent().find('.show_less').addClass('hidden');\n                        $(this).parent().find('.show_more').removeClass('hidden');\n                    }\n                });\n        }\n    };\n});"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","Templates","select2","program","programlastchildpopup","args","ajax","type","url","M","cfg","wwwroot","data","programid","id","action","sesskey","success","returndata","create","title","get_string","body","done","modal","show","setLarge","getRoot","addClass","animate","on","hidden","setTimeout","destroy","bind","this","click","window","location","href","AjaxForms","contextid","init","prototype","self","callback","header_label","key","component","customstrings","get_strings","then","strings","types","DEFAULT","getBody","footer","getFooter","find","submitForm","form_status","html","js","handleFormSubmissionResponse","fn","DataTable","isDataTable","dataTable","Datatable","setBody","document","val","form","submitFormAjax","formdata","jsonformdata","JSON","stringify","loadFragment","$footer","$style","hide","use","core_formchangechecker","reset_form_dirty_state","reload","handleFormSubmissionFailure","e","preventDefault","formData","serialize","methodname","plugintype","pluginname","params","call","resp","css","fail","ex","submit","load","levelid","bodycontent","CANCEL","cancel","bodyRendered","courseid","hasClass","parent","removeClass"],"mappings":"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"}