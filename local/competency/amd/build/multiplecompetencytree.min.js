/**
 * Handle selection changes on the competency tree.
 *
 * @module     local_competency/competencyselect
 * @package    local_competency
 * @copyright  2015 Damyon Wiese <damyon@moodle.com>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("local_competency/multiplecompetencytree",["core/ajax","core/notification","core/templates","local_competency/tree","local_competency/competency_outcomes","jquery"],(function(ajax,notification,templates,Ariatree,CompOutcomes,$){var competencies={},competencyFrameworkId=0,competencyFrameworkShortName="",treeSelector="",competencyFrameworksId=0,competencyFrameworksShortName="",currentNodeId="",addChildren=function(parent,all){var i=0,current=!1;for(parent.haschildren=!1,parent.children=[],i=0;i<all.length;i++)(current=all[i]).parentid==parent.id&&(parent.haschildren=!0,parent.children.push(current),addChildren(current,all))},loadCompetencies=function(searchtext){var deferred=$.Deferred();return templates.render("local_competency/loading",{}).done((function(loadinghtml,loadingjs){$.each(competencyFrameworksId,(function(index,frameworkid){treeSelector=treeSelectors[index],templates.replaceNodeContents($(treeSelector),loadinghtml,loadingjs),competencyFrameworkId=frameworkid,competencyFrameworkShortName=competencyFrameworksShortName[index],children=function(frameworkid,searchtext){$.Deferred();var children=[];return ajax.call([{methodname:"core_competency_search_competencies",args:{searchtext:searchtext,competencyframeworkid:frameworkid},done:function(result){var i=0;for(i=0;i<result.length;i++)competencies[result[i].id]=result[i];var competency=!1;for(i=0;i<result.length;i++)competency=result[i],0===parseInt(competency.parentid,10)&&(children.push(competency),addChildren(competency,result))}}]),children}(frameworkid,searchtext);var context={frameworkid:frameworkid,shortname:competencyFrameworkShortName,canmanage:0,competencies:children};displayCompetencytree(treeSelector,context)}))})),deferred.promise()},displayCompetencytree=function(selectorkey,context){var deferred=$.Deferred();templates.render("local_competency/competencies_tree_root",context).done((function(html,js){treeSelector=selectorkey,templates.replaceNodeContents($(treeSelector),$(html).html(),js);var tree=new Ariatree(treeSelector,!1);if(currentNodeId){var node=$(treeSelector).find("[data-id="+currentNodeId+"]");node.length&&(tree.selectItem(node),tree.updateFocus(node))}deferred.resolve(competencies)})).fail(deferred.reject)};return{init:function(id,shortname,search,selector,canmanage,currentselector){competencyFrameworksId=id,competencyFrameworksShortName=shortname,canmanage,treeSelectors=selector,loadCompetencies(search).fail(notification.exception)},on:function(eventname,handler){$(treeSelector).on(eventname,handler)},getChildren:function(id){var children=[];return $.each(competencies,(function(index,competency){competency.parentid==id&&children.push(competency)})),children},getCompetencyFrameworkId:function(){return competencyFrameworkId},getCompetency:function(id){return competencies[id]},getCompetencyLevel:function(id){return this.getCompetency(id).path.replace(/^\/|\/$/g,"").split("/").length},hasChildren:function(id){return this.getChildren(id).length>0},hasRule:function(id){var comp=this.getCompetency(id);return!!comp&&(comp.ruleoutcome!=CompOutcomes.OUTCOME_NONE&&comp.ruletype)},reloadCompetencies:function(){return loadCompetencies("").fail(notification.exception)},listCompetencies:function(){return competencies}}}));

//# sourceMappingURL=multiplecompetencytree.min.js.map