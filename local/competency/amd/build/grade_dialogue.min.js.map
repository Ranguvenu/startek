{"version":3,"file":"grade_dialogue.min.js","sources":["../src/grade_dialogue.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Grade dialogue.\n *\n * @package    local_competency\n * @copyright  2016 Frédéric Massart - FMCorz.net\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery',\n        'core/notification',\n        'core/templates',\n        'local_competency/dialogue',\n        'local_competency/event_base',\n        'core/str'],\n        function($, Notification, Templates, Dialogue, EventBase, Str) {\n\n    /**\n     * Grade dialogue class.\n     * @param {Array} ratingOptions\n     */\n    var Grade = function(ratingOptions) {\n        EventBase.prototype.constructor.apply(this, []);\n        this._ratingOptions = ratingOptions;\n    };\n    Grade.prototype = Object.create(EventBase.prototype);\n\n    /** @type {Dialogue} The dialogue. */\n    Grade.prototype._popup = null;\n    /** @type {Array} Array of objects containing, 'value', 'name' and optionally 'selected'. */\n    Grade.prototype._ratingOptions = null;\n\n    /**\n     * After render hook.\n     *\n     * @method _afterRender\n     * @protected\n     */\n    Grade.prototype._afterRender = function() {\n        var btnRate = this._find('[data-action=\"rate\"]'),\n            lstRating = this._find('[name=\"rating\"]'),\n            txtComment = this._find('[name=\"comment\"]');\n\n        this._find('[data-action=\"cancel\"]').click(function(e) {\n            e.preventDefault();\n            this._trigger('cancelled');\n            this.close();\n        }.bind(this));\n\n        lstRating.change(function() {\n            var node = $(this);\n            if (!node.val()) {\n                btnRate.prop('disabled', true);\n            } else {\n                btnRate.prop('disabled', false);\n            }\n        }).change();\n\n        btnRate.click(function(e) {\n            e.preventDefault();\n            var val = lstRating.val();\n            if (!val) {\n                return;\n            }\n            this._trigger('rated', {\n                'rating': val,\n                'note': txtComment.val()\n            });\n            this.close();\n        }.bind(this));\n    };\n\n    /**\n     * Close the dialogue.\n     *\n     * @method close\n     */\n    Grade.prototype.close = function() {\n        this._popup.close();\n        this._popup = null;\n    };\n\n    /**\n     * Opens the picker.\n     *\n     * @param {Number} competencyId The competency ID of the competency to work on.\n     * @method display\n     * @return {Promise}\n     */\n    Grade.prototype.display = function() {\n        return this._render().then(function(html) {\n            return Str.get_string('rate', 'local_competency').then(function(title) {\n                this._popup = new Dialogue(\n                    title,\n                    html,\n                    this._afterRender.bind(this)\n                );\n            }.bind(this));\n        }.bind(this)).fail(Notification.exception);\n    };\n\n    /**\n     * Find a node in the dialogue.\n     *\n     * @param {String} selector\n     * @method _find\n     * @returns {node} The node\n     * @protected\n     */\n    Grade.prototype._find = function(selector) {\n        return $(this._popup.getContent()).find(selector);\n    };\n\n    /**\n     * Render the dialogue.\n     *\n     * @method _render\n     * @protected\n     * @return {Promise}\n     */\n    Grade.prototype._render = function() {\n        var context = {\n            cangrade: this._canGrade,\n            ratings: this._ratingOptions\n        };\n        return Templates.render('local_competency/competency_grader', context);\n    };\n\n    return /** @alias module:local_competency/grade_dialogue */ Grade;\n\n});\n"],"names":["define","$","Notification","Templates","Dialogue","EventBase","Str","Grade","ratingOptions","prototype","constructor","apply","this","_ratingOptions","Object","create","_popup","_afterRender","btnRate","_find","lstRating","txtComment","click","e","preventDefault","_trigger","close","bind","change","val","prop","display","_render","then","html","get_string","title","fail","exception","selector","getContent","find","context","cangrade","_canGrade","ratings","render"],"mappings":";;;;;;;AAuBAA,yCAAO,CAAC,SACA,oBACA,iBACA,4BACA,8BACA,aACA,SAASC,EAAGC,aAAcC,UAAWC,SAAUC,UAAWC,SAM1DC,MAAQ,SAASC,eACjBH,UAAUI,UAAUC,YAAYC,MAAMC,KAAM,SACvCC,eAAiBL,sBAE1BD,MAAME,UAAYK,OAAOC,OAAOV,UAAUI,YAG1BO,OAAS,KAEzBT,MAAME,UAAUI,eAAiB,KAQjCN,MAAME,UAAUQ,aAAe,eACvBC,QAAUN,KAAKO,MAAM,wBACrBC,UAAYR,KAAKO,MAAM,mBACvBE,WAAaT,KAAKO,MAAM,yBAEvBA,MAAM,0BAA0BG,MAAM,SAASC,GAChDA,EAAEC,sBACGC,SAAS,kBACTC,SACPC,KAAKf,OAEPQ,UAAUQ,QAAO,WACF3B,EAAEW,MACHiB,MAGNX,QAAQY,KAAK,YAAY,GAFzBZ,QAAQY,KAAK,YAAY,MAI9BF,SAEHV,QAAQI,MAAM,SAASC,GACnBA,EAAEC,qBACEK,IAAMT,UAAUS,MACfA,WAGAJ,SAAS,QAAS,QACTI,SACFR,WAAWQ,aAElBH,UACPC,KAAKf,QAQXL,MAAME,UAAUiB,MAAQ,gBACfV,OAAOU,aACPV,OAAS,MAUlBT,MAAME,UAAUsB,QAAU,kBACfnB,KAAKoB,UAAUC,KAAK,SAASC,aACzB5B,IAAI6B,WAAW,OAAQ,oBAAoBF,KAAK,SAASG,YACvDpB,OAAS,IAAIZ,SACdgC,MACAF,KACAtB,KAAKK,aAAaU,KAAKf,QAE7Be,KAAKf,QACTe,KAAKf,OAAOyB,KAAKnC,aAAaoC,YAWpC/B,MAAME,UAAUU,MAAQ,SAASoB,iBACtBtC,EAAEW,KAAKI,OAAOwB,cAAcC,KAAKF,WAU5ChC,MAAME,UAAUuB,QAAU,eAClBU,QAAU,CACVC,SAAU/B,KAAKgC,UACfC,QAASjC,KAAKC,uBAEXV,UAAU2C,OAAO,qCAAsCJ,UAGNnC"}