{"version":3,"file":"tag.min.js","sources":["../src/tag.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AJAX helper for the tag management page.\n *\n * @module     core/tag\n * @package    core_tag\n * @copyright  2019 eabyas\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.0\n */\ndefine(['jquery', 'core/ajax', 'core/templates', 'core/notification', 'core/str', 'core/modal_factory', 'core/modal_events'],\n        function($, ajax, templates, notification, str, ModalFactory, ModalEvents) {\n    return /** @alias module:core/tag */ {\n\n        /**\n         * Initialises tag index page.\n         *\n         * @method initTagindexPage\n         */\n        initTagindexPage: function() {\n            // Click handler for changing tag type.\n            $('body').delegate('.tagarea[data-ta] a[data-quickload=1]', 'click', function(e) {\n                e.preventDefault();\n                var target = $(this),\n                    query = target[0].search.replace(/^\\?/, ''),\n                    tagarea = target.closest('.tagarea[data-ta]'),\n                    args = query.split('&').reduce(function(s, c) {\n                      var t = c.split('=');\n                      s[t[0]] = decodeURIComponent(t[1]);\n                      return s;\n                    }, {});\n\n                var promises = ajax.call([{\n                    methodname: 'core_tag_get_tagindex',\n                    args: {tagindex: args}\n                }], true);\n\n                $.when.apply($, promises)\n                    .done(function(data) {\n                        templates.render('core_tag/index', data).done(function(html) {\n                            tagarea.replaceWith(html);\n                        });\n                    });\n            });\n        },\n\n        /**\n         * Initialises tag management page.\n         *\n         * @method initManagePage\n         */\n        initManagePage: function() {\n\n            // Set cell 'time modified' to 'now' when any of the element is updated in this row.\n            $('body').on('updated', '[data-inplaceeditable]', function(e) {\n                str.get_string('selecttag', 'core_tag', e.ajaxreturn.value)\n                    .then(function(s) {\n                        return $('label[for=\"tagselect' + e.ajaxreturn.itemid + '\"]').html(s);\n                    })\n                    .fail(notification.exception);\n                str.get_string('now').done(function(s) {\n                    $(e.target).closest('tr').find('td.col-timemodified').html(s);\n                });\n                if (e.ajaxreturn.itemtype === 'tagflag') {\n                    var row = $(e.target).closest('tr');\n                    if (e.ajaxreturn.value === '0') {\n                        row.removeClass('flagged-tag');\n                    } else {\n                        row.addClass('flagged-tag');\n                    }\n                }\n            });\n\n            // Confirmation for single tag delete link.\n            $('.tag-management-table').delegate('a.tagdelete', 'click', function(e) {\n                e.preventDefault();\n                var href = $(this).attr('href');\n                str.get_strings([\n                        {key: 'delete'},\n                        {key: 'confirmdeletetag', component: 'tag'},\n                        {key: 'yes'},\n                        {key: 'no'},\n                    ]).done(function(s) {\n                        notification.confirm(s[0], s[1], s[2], s[3], function() {\n                            window.location.href = href;\n                        });\n                    }\n                );\n            });\n\n            // Confirmation for bulk tag delete button.\n            $(\"#tag-management-delete\").click(function(e) {\n                var form = $(this).closest('form').get(0),\n                    cnt = $(form).find(\"input[type=checkbox]:checked\").length;\n                if (!cnt) {\n                    return;\n                }\n                var tempElement = $(\"<input type='hidden'/>\").attr('name', this.name);\n                e.preventDefault();\n                str.get_strings([\n                        {key: 'delete'},\n                        {key: 'confirmdeletetags', component: 'tag'},\n                        {key: 'yes'},\n                        {key: 'no'},\n                    ]).done(function(s) {\n                        notification.confirm(s[0], s[1], s[2], s[3], function() {\n                            tempElement.appendTo(form);\n                            form.submit();\n                        });\n                    }\n                );\n            });\n\n            // Confirmation for bulk tag combine button.\n            $(\"#tag-management-combine\").click(function(e) {\n                e.preventDefault();\n                var form = $(this).closest('form').get(0),\n                    tags = $(form).find(\"input[type=checkbox]:checked\");\n                if (tags.length <= 1) {\n                    str.get_strings([\n                        {key: 'combineselected', component: 'tag'},\n                        {key: 'selectmultipletags', component: 'tag'},\n                        {key: 'ok'},\n                    ]).done(function(s) {\n                            notification.alert(s[0], s[1], s[2]);\n                        }\n                    );\n                    return;\n                }\n                var tempElement = $(\"<input type='hidden'/>\").attr('name', this.name);\n                var saveButtonText = '';\n                var tagOptions = [];\n                tags.each(function() {\n                    var tagid = $(this).val(),\n                        tagname = $('.inplaceeditable[data-itemtype=tagname][data-itemid=' + tagid + ']').attr('data-value');\n                    tagOptions.push({\n                        id: tagid,\n                        name: tagname\n                    });\n                });\n\n                str.get_strings([\n                    {key: 'combineselected', component: 'tag'},\n                    {key: 'continue'}\n                ]).then(function(langStrings) {\n                    var modalTitle = langStrings[0];\n                    saveButtonText = langStrings[1];\n                    var templateContext = {\n                        tags: tagOptions\n                    };\n                    return ModalFactory.create({\n                        title: modalTitle,\n                        body: templates.render('local_tags/combine_tags', templateContext),\n                        type: ModalFactory.types.SAVE_CANCEL\n                    });\n                }).then(function(modal) {\n                    modal.setSaveButtonText(saveButtonText);\n\n                    // Handle save event.\n                    modal.getRoot().on(ModalEvents.save, function(e) {\n                        e.preventDefault();\n\n                        // Append this temp element in the form in the tags list, not the form in the modal. Confusing, right?!?\n                        tempElement.appendTo(form);\n                        // Get the selected tag from the modal.\n                        var maintag = $('input[name=maintag]:checked', '#combinetags_form').val();\n                        // Append this in the tags list form.\n                        $(\"<input type='hidden'/>\").attr('name', 'maintag').attr('value', maintag).appendTo(form);\n                        // Submit the tags list form.\n                        form.submit();\n                    });\n\n                    // Handle hidden event.\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        // Destroy when hidden.\n                        modal.destroy();\n                    });\n\n                    modal.show();\n                    // Tick the first option.\n                    $('#combinetags_form input[type=radio]').first().focus().prop('checked', true);\n\n                    return;\n\n                }).catch(notification.exception);\n            });\n\n            // When user changes tag name to some name that already exists suggest to combine the tags.\n            $('body').on('updatefailed', '[data-inplaceeditable][data-itemtype=tagname]', function(e) {\n                var exception = e.exception; // The exception object returned by the callback.\n                var newvalue = e.newvalue; // The value that user tried to udpated the element to.\n                var tagid = $(e.target).attr('data-itemid');\n                if (exception.errorcode === 'namesalreadybeeingused') {\n                    e.preventDefault(); // This will prevent default error dialogue.\n                    str.get_strings([\n                        {key: 'nameuseddocombine', component: 'tag'},\n                        {key: 'yes'},\n                        {key: 'cancel'},\n                    ]).done(function(s) {\n                        notification.confirm(e.message, s[0], s[1], s[2], function() {\n                            window.location.href = window.location.href + \"&newname=\" + encodeURIComponent(newvalue) +\n                                \"&tagid=\" + encodeURIComponent(tagid) +\n                                '&action=renamecombine&sesskey=' + M.cfg.sesskey;\n                        });\n                    });\n                }\n            });\n\n            // Form for adding standard tags.\n            $('body').on('click', 'a[data-action=addstandardtag]', function(e) {\n                e.preventDefault();\n\n                var saveButtonText = '';\n                str.get_strings([\n                    {key: 'addotags', component: 'tag'},\n                    {key: 'continue'}\n                ]).then(function(langStrings) {\n                    var modalTitle = langStrings[0];\n                    saveButtonText = langStrings[1];\n                    var templateContext = {\n                        actionurl: window.location.href,\n                        sesskey: M.cfg.sesskey\n                    };\n                    return ModalFactory.create({\n                        title: modalTitle,\n                        body: templates.render('local_tags/add_tags', templateContext),\n                        type: ModalFactory.types.SAVE_CANCEL\n                    });\n                }).then(function(modal) {\n                    modal.setSaveButtonText(saveButtonText);\n\n                    // Handle save event.\n                    modal.getRoot().on(ModalEvents.save, function(e) {\n                        var tagsInput = $(e.currentTarget).find('#id_tagslist');\n                        var name = tagsInput.val().trim();\n\n                        // Set the text field's value to the trimmed value.\n                        tagsInput.val(name);\n\n                        // Add submit event listener to the form.\n                        var tagsForm = $('#addtags_form');\n                        tagsForm.on('submit', function(e) {\n                            // Validate the form.\n                            var form = $('#addtags_form');\n                            if (form[0].checkValidity() === false) {\n                                e.preventDefault();\n                                e.stopPropagation();\n                            }\n                            form.addClass('was-validated');\n\n                            // BS2 compatibility.\n                            $('[data-region=\"tagslistinput\"]').addClass('error');\n                            var errorMessage = $('#id_tagslist_error_message');\n                            errorMessage.removeAttr('hidden');\n                            errorMessage.addClass('help-block');\n                        });\n\n                        // Try to submit the form.\n                        tagsForm.submit();\n\n                        return false;\n                    });\n\n                    // Handle hidden event.\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        // Destroy when hidden.\n                        modal.destroy();\n                    });\n\n                    modal.show();\n\n                    return;\n\n                }).catch(notification.exception);\n            });\n        },\n\n        /**\n         * Initialises tag collection management page.\n         *\n         * @method initManageCollectionsPage\n         */\n        initManageCollectionsPage: function() {\n            $('body').on('updated', '[data-inplaceeditable]', function(e) {\n                var ajaxreturn = e.ajaxreturn,\n                    areaid, collid, isenabled;\n                if (ajaxreturn.component === 'core_tag' && ajaxreturn.itemtype === 'tagareaenable') {\n                    areaid = $(this).attr('data-itemid');\n                    $(\".tag-collections-table ul[data-collectionid] li[data-areaid=\" + areaid + \"]\").hide();\n                    isenabled = ajaxreturn.value;\n                    if (isenabled === '1') {\n                        $(this).closest('tr').removeClass('dimmed_text');\n                        collid = $(this).closest('tr').find('[data-itemtype=\"tagareacollection\"]').attr(\"data-value\");\n                        $(\".tag-collections-table ul[data-collectionid=\" + collid + \"] li[data-areaid=\" + areaid + \"]\").show();\n                    } else {\n                        $(this).closest('tr').addClass('dimmed_text');\n                    }\n                }\n                if (ajaxreturn.component === 'core_tag' && ajaxreturn.itemtype === 'tagareacollection') {\n                    areaid = $(this).attr('data-itemid');\n                    $(\".tag-collections-table ul[data-collectionid] li[data-areaid=\" + areaid + \"]\").hide();\n                    collid = $(this).attr('data-value');\n                    isenabled = $(this).closest('tr').find('[data-itemtype=\"tagareaenable\"]').attr(\"data-value\");\n                    if (isenabled === \"1\") {\n                        $(\".tag-collections-table ul[data-collectionid=\" + collid + \"] li[data-areaid=\" + areaid + \"]\").show();\n                    }\n                }\n            });\n\n            $('body').on('click', '.addtagcoll > a', function(e) {\n                e.preventDefault();\n                var keys = [\n                    {\n                        key: 'addtagcoll',\n                        component: 'tag'\n                    },\n                    {\n                        key: 'create'\n                    }\n                ];\n\n                var href = $(this).attr('data-url');\n                var saveButtonText = '';\n                str.get_strings(keys).then(function(langStrings) {\n                    var modalTitle = langStrings[0];\n                    saveButtonText = langStrings[1];\n                    var templateContext = {\n                        actionurl: href,\n                        sesskey: M.cfg.sesskey\n                    };\n                    return ModalFactory.create({\n                        title: modalTitle,\n                        body: templates.render('core_tag/add_tag_collection', templateContext),\n                        type: ModalFactory.types.SAVE_CANCEL\n                    });\n                }).then(function(modal) {\n                    modal.setSaveButtonText(saveButtonText);\n\n                    // Handle save event.\n                    modal.getRoot().on(ModalEvents.save, function(e) {\n                        var collectionInput = $(e.currentTarget).find('#addtagcoll_name');\n                        var name = collectionInput.val().trim();\n                        // Set the text field's value to the trimmed value.\n                        collectionInput.val(name);\n\n                        // Add submit event listener to the form.\n                        var form = $('#addtagcoll_form');\n                        form.on('submit', function(e) {\n                            // Validate the form.\n                            if (form[0].checkValidity() === false) {\n                                e.preventDefault();\n                                e.stopPropagation();\n                            }\n                            form.addClass('was-validated');\n\n                            // BS2 compatibility.\n                            $('[data-region=\"addtagcoll_nameinput\"]').addClass('error');\n                            var errorMessage = $('#id_addtagcoll_name_error_message');\n                            errorMessage.removeAttr('hidden');\n                            errorMessage.addClass('help-block');\n                        });\n\n                        // Try to submit the form.\n                        form.submit();\n\n                        return false;\n                    });\n\n                    // Handle hidden event.\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        // Destroy when hidden.\n                        modal.destroy();\n                    });\n\n                    modal.show();\n\n                    return;\n\n                }).catch(notification.exception);\n            });\n\n            $('body').on('click', '.tag-collections-table .action_delete', function(e) {\n                e.preventDefault();\n                var href = $(this).attr('data-url') + '&sesskey=' + M.cfg.sesskey;\n                str.get_strings([\n                        {key: 'delete'},\n                        {key: 'suredeletecoll', component: 'tag', param: $(this).attr('data-collname')},\n                        {key: 'yes'},\n                        {key: 'no'},\n                    ]).done(function(s) {\n                        notification.confirm(s[0], s[1], s[2], s[3], function() {\n                            window.location.href = href;\n                        });\n                    }\n                );\n            });\n        }\n    };\n});\n"],"names":["define","$","ajax","templates","notification","str","ModalFactory","ModalEvents","initTagindexPage","delegate","e","preventDefault","target","this","query","search","replace","tagarea","closest","args","split","reduce","s","c","t","decodeURIComponent","promises","call","methodname","tagindex","when","apply","done","data","render","html","replaceWith","initManagePage","on","get_string","ajaxreturn","value","then","itemid","fail","exception","find","itemtype","row","removeClass","addClass","href","attr","get_strings","key","component","confirm","window","location","click","form","get","length","tempElement","name","appendTo","submit","tags","alert","saveButtonText","tagOptions","each","tagid","val","tagname","push","id","langStrings","modalTitle","templateContext","create","title","body","type","types","SAVE_CANCEL","modal","setSaveButtonText","getRoot","save","maintag","hidden","destroy","show","first","focus","prop","catch","newvalue","errorcode","message","encodeURIComponent","M","cfg","sesskey","actionurl","tagsInput","currentTarget","trim","tagsForm","checkValidity","stopPropagation","errorMessage","removeAttr","initManageCollectionsPage","areaid","collid","hide","collectionInput","param"],"mappings":"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"}