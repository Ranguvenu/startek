{"version":3,"file":"courseallocation.min.js","sources":["../src/courseallocation.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     core_group/AjaxForms\n * @class      AjaxForms\n * @package    core_group\n * @copyright  2017 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'core/str',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/ajax',\n    'core/templates',\n    'jquery',\n], function(Str, ModalFactory, ModalEvents, Ajax, Templates, $) {\n    var courseallocation;\n    return {\n        init: function() {\n            $('.allocate_button').prop( \"disabled\", true );\n            $('.allocation_course_type_btn').prop( \"disabled\", true );\n        },\n        teamsearch: function(params) {\n            return Str.get_strings([{\n                key: 'selectausertoproceed',\n                component: 'local_myteam',\n            }]).then(function(s) {\n                var searchtype = params.searchtype;\n                var search = params.searchvalue;\n                if(typeof(search) == 'undefined'){\n                    return false;\n                }\n                var user = $(\"input[name='allocateuser']:checked\").val();\n                if(searchtype === 'myteam'){\n                    var target = '.departmentmyteam';\n                    var selectedcontent = $('#nominate_myteamlist').val();\n\n                    var params = {};\n                    params.action = 'searchdata';\n                    params.learningtype = searchtype;\n                    params.search = search;\n                    params.user = '';\n\n                    var promise = Ajax.call([{\n                        methodname: 'local_myteam_teamallocation_view',\n                        args: params\n                    }]);\n                    promise[0].done(function(resp) {\n                        var data = Templates.render('local_myteam/searchallocateusers', {response: resp});\n                        data.then(function(response){\n                             $(\".departmentmyteam\").html(response);\n                        });\n                    }).fail(function(ex) {\n                        // do something with the exception\n                        console.log(ex);\n                    });\n                }else{\n                    var target = '.departmentcourses';\n                    var selecteduser = $('#nominate_myteamlist').val();\n                    var selectedcontent = $('#nominate_courseslist').val();\n                    var learningtype = $('#learning_type').val();\n                    var learningtype_search = $('input[name=\"search_learningtypes\"]').val();\n                    if(searchtype != learningtype){\n                        searchtype = learningtype;\n                    }\n                    if(user == undefined || user == null){\n                        var data = '<div class=\"alert alert-danger\">'+s[0]+'</div>'\n                        $(target).html(data);\n                    }else{\n                        var params = {};\n                        params.action = 'searchdata';\n                        params.learningtype = searchtype;\n                        params.search = search;\n                        params.user = selecteduser;\n                        params.allocatecourse = false;\n\n                        var promise = Ajax.call([{\n                            methodname: 'local_myteam_courseallocation_view',\n                            args: params\n                        }]);\n                        promise[0].done(function(resp) {\n                            var data = Templates.render('local_myteam/courseallocatemoduledata', {response: resp});\n                            data.then(function(response){\n                                 $(\".departmentcourses\").html(response);\n                            });\n                        }).fail(function(ex) {\n                            // do something with the exception\n                            console.log(ex);\n                        });\n                    }\n                }\n            }.bind(this));\n        },\n        select_type: function(params) {\n            var user = params.user;\n            var learningtype = params.learningtype;\n            var pluginname = params.pluginname;\n\n            $('input[name=\"search_learningtypes\"]').val('');\n            $('#learning_type').val(params.learningtype);\n            \n            if(user != null && typeof(user) != undefined){\n                $('#nominate_myteamlist').val(user);\n            }\n\n            var selected_user = $('input[name=\"allocateuser\"]:checked').val();\n\n            if(user == undefined && selected_user == null){\n\n                ModalFactory.create({\n                    title: Str.get_string('warning'),\n                    type: ModalFactory.types.DEFAULT,\n                    body: Str.get_string('team_select_user', 'local_myteam')\n                }).done(function(modal) {\n                    // Do what you want with your new modal.\n                    modal.show();\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        modal.destroy();\n                    });\n                    modal.getRoot().on(ModalEvents.cancel, function() {\n                        modal.destroy();\n                    });\n                     //return modal;\n                });\n                return false;\n            }else{\n                user = selected_user;\n            }\n\n            switch(learningtype){\n                case 1:\n                    type = pluginname;\n                break;\n                case 2:\n                    type = pluginname;\n                break;\n                case 3:\n                    type = pluginname;\n                break;\n                case 4:\n                    type = pluginname;\n                break;\n                default:\n                    type = pluginname;\n                break;\n            }\n            $('.allocation_course_type').html(type);\n            var params = {};\n            params.action = 'departmentmodules';\n            params.learningtype = learningtype;\n            params.user = user;\n            params.search = false;\n            params.allocatecourse = false;\n\n            var promise = Ajax.call([{\n                methodname: 'local_myteam_courseallocation_view',\n                args: params\n            }]);\n            promise[0].done(function(resp) {\n                var data = Templates.render('local_myteam/courseallocatemoduledata', {response: resp});\n                data.then(function(response){\n                     $(\".departmentcourses\").html(response);\n                });\n            }).fail(function(ex) {\n                // do something with the exception\n                console.log(ex);\n            });\n        },\n        select_list: function(params) {\n            var user = params.user;\n            var courseid = params.courses;\n            var learningtype = params.learningtype;\n            var coursecheckedstatus = params.element.checked;\n\n            var current_courses = $('#nominate_courseslist').val();\n            var selected_courses = $('input[name=\"allocatecourse\"]:checked').val();\n            $('input[name=\"search_learningtypes\"]').val('');\n            \n            var allocate = false;\n\n            switch(learningtype){\n                case 1:\n                    if(courseid > 1){\n                        if(coursecheckedstatus == true){\n                            allocate = true;\n                        }\n                    }\n                break;\n                case 2:\n                    if(courseid){\n                        if(coursecheckedstatus == true){\n                            allocate = true;\n                        }\n                    }\n                break;\n                case 3:\n                    if(courseid > 1){\n                        if(coursecheckedstatus == true){\n                            allocate = true;\n                        }\n                    }\n                break;\n                case 4:\n                    if(courseid > 1){\n                        if(coursecheckedstatus == true){\n                            allocate = true;\n                        }\n                    }\n                break;\n                default:\n                    allocate = false;\n                break;\n            }\n            \n            if(allocate == true){\n                $('.allocate_button').prop( \"disabled\", false);\n                $('.allocation_course_type_btn').prop( \"disabled\", false);\n            }else{\n                $('.allocate_button').prop( \"disabled\", true);\n                $('.allocation_course_type_btn').prop( \"disabled\", true);\n            }\n\n            switch(learningtype){\n                case 1:\n                    \n                break;\n                case 2:\n                    \n                break;\n                case 3:\n                    \n                break;\n                case 4:\n                    \n                break;\n                default:\n                    \n                break;\n            }\n        },\n        allocator: function() {\n            var allocateuser = $('#nominate_myteamlist').val();\n            var learningtype = $('#learning_type').val();\n            var allocatecourse = [];\n            $('input[name=\"search_learningtypes\"]').val('');\n             var selected_courses = $('input[name=\"allocatecourse[]\"]:checked').each(function () {\n                var courseid_selected = $(this).val();\n                allocatecourse.push(courseid_selected);\n             });\n            if(!allocateuser.length){\n                ModalFactory.create({\n                    title: Str.get_string('warning'),\n                    type: ModalFactory.types.DEFAULT,\n                    body: Str.get_string('team_select_user', 'local_myteam')\n                }).done(function(modal) {\n                    // Do what you want with your new modal.\n                    modal.show();\n\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        modal.destroy();\n                    });\n                    modal.getRoot().on(ModalEvents.cancel, function() {\n                        // setTimeout(function(){\n                            modal.destroy();\n                        // }, 1000);\n                    });\n                });\n                return false;\n            }\n            if(!allocatecourse.length){\n\n\n                ModalFactory.create({\n                    title: Str.get_string('warning'),\n                    type: ModalFactory.types.DEFAULT,\n                    body: Str.get_string('team_select_course_s', 'local_myteam')\n                }).done(function(modal) {\n                    // Do what you want with your new modal.\n                    modal.show();\n\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        modal.destroy();\n                    });\n                    modal.getRoot().on(ModalEvents.cancel, function() {\n                        // setTimeout(function(){\n                            modal.destroy();\n                        // }, 1000);\n                    });\n                });\n                return false;\n            }\n\n            Str.get_strings([{\n                key: 'requestprocessing',\n                component: 'local_myteam',\n            },\n            {\n                key: 'information',\n                component: 'local_myteam',\n            },{\n                key: 'learningtypeallocated',\n                component: 'local_myteam',\n            }]).then(function(s) {\n                ModalFactory.create({\n                    title: Str.get_string('team_confirm_selected_allocation', 'local_myteam'),\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    body: Str.get_string('allocate_confirm_allocate', 'local_myteam')\n                }).done(function(modal) {\n                    this.modal = modal;\n                    // Do what you want with your new modal.\n                    modal.setSaveButtonText(Str.get_string('allocate_yes', 'local_myteam'));\n\n                     //For cancel button string changed//\n                    var value=Str.get_string('reject_no', 'local_myteam');\n                    var button = this.modal.getFooter().find('[data-action=\"cancel\"]');\n                    this.modal.asyncSet(value, button.text.bind(button));\n               \n\n                    modal.getRoot().on(ModalEvents.save, function(e) {\n                        this.modal.setBody('<span class=\"loading-icon icon-no-margin\"><img src='+M.cfg.wwwroot + '/local/ajax-loader.svg></span>');\n                        this.modal.hideFooter();\n                        this.modal.setTitle(s[0]);\n                        $('[data-action=\"hide\"]').css('display','none');\n                        \n                        e.preventDefault();\n        \n                        var params = {};\n                        params.action = 'courseallocate';\n                        params.learningtype = learningtype;\n                        params.user = allocateuser;\n                        params.search = false;\n                        params.allocatecourse = JSON.stringify(allocatecourse);\n\n\n                        var promise = Ajax.call([{\n                            methodname: 'local_myteam_modulecourse_allocation',\n                            args: params\n                        }]);\n                        promise[0].done(function(resp) {\n                                var bobytext='';\n                             $.each(resp.records, function(index, element) {\n                                if(element.enrolledornot==true && element.return_status !=''){\n                                     bobytext=bobytext+element.return_status;\n                                     //modal.setBody(element.return_status);\n                                     //modal.setTitle('Information');\n                                     //$('[data-action=\"hide\"]').css('display','block');\n                                  \n                                }\n                                else if(element.enrolledornot==true && element.return_status ==''){\n                                    var textbody='<div class=\"alert alert-info\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\">×</button>'+s[2]+'</div>';\n                                    if(bobytext!=textbody){\n                                        bobytext=bobytext+textbody;\n                                    }\n                                    \n                                    // $('#allocation_notifications').html('<div class=\"alert alert-info\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\">×</button>Selected learning types has been allocated.</div>');\n                                }\n                             });\n                            modal.setBody(bobytext);\n                             modal.setTitle(s[1]);\n                             $('[data-action=\"hide\"]').css('display','block');\n                            \n                            //modal.hide();\n                            //modal.destroy();\n                            //window.location.href = window.location.href;\n                             $(\".close\").click(function(){\n                                   location.reload();\n                            });\n\n                        }).fail(function(ex) {\n                            // do something with the exception\n                            console.log(ex);\n                        });\n                        }.bind(this));\n                        modal.show();\n                    }.bind(this));\n            }.bind(this));\n        },\n        load: function(){\n\n        }\n    };\n});"],"names":["define","Str","ModalFactory","ModalEvents","Ajax","Templates","$","init","prop","teamsearch","params","get_strings","key","component","then","s","searchtype","search","searchvalue","user","val","target","learningtype","call","methodname","args","done","resp","render","response","html","fail","ex","console","log","selecteduser","undefined","data","allocatecourse","bind","this","select_type","pluginname","selected_user","create","title","get_string","type","types","DEFAULT","body","modal","show","getRoot","on","hidden","destroy","cancel","select_list","courseid","courses","coursecheckedstatus","element","checked","allocate","allocator","allocateuser","each","courseid_selected","push","length","SAVE_CANCEL","setSaveButtonText","value","button","getFooter","find","asyncSet","text","save","e","setBody","M","cfg","wwwroot","hideFooter","setTitle","css","preventDefault","JSON","stringify","bobytext","records","index","enrolledornot","return_status","textbody","click","location","reload","load"],"mappings":"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"}