{"version":3,"file":"newuser.min.js","sources":["../src/newuser.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_users/newuser\n * @class      NewUser\n * @package    local_users\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui','local_courses/jquery.dataTables'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n \n    /**\n     * Constructor\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @param {int} contextid\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var NewUser = function(args) {\n\n        this.contextid = args.context;\n        this.id = args.id;\n        var self = this;\n        this.args = args;\n        self.init(args);\n    };\n \n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    NewUser.prototype.modal = null;\n \n    /**\n     * @var {int} contextid\n     * @private\n     */\n    NewUser.prototype.contextid = -1;\n \n    /**\n     * Initialise the class.\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @private\n     * @return {Promise}\n     */\n    NewUser.prototype.init = function(args) {\n        //var triggers = $(selector);\n        var self = this;\n        // Fetch the title string.\n            if (self.id) {\n                var strings  = Str.get_strings([\n                                {\n                                    key: 'edituser',\n                                    component: 'local_users'\n                                },\n                                {\n                                    key: 'save_continue',\n                                    component: 'local_users'\n                                },\n                                {\n                                    key: 'skip',\n                                    component: 'local_users'\n                                },\n                                {\n                                    key: 'previous',\n                                    component: 'local_users'\n                                },\n                                {\n                                    key: 'cancel',\n                                    component: 'local_users'\n                                }]);\n            }else{\n               var strings  = Str.get_strings([\n                            {\n                                key: 'adnewuser',\n                                component: 'local_users'\n                            },\n                            {\n                                key: 'save_continue',\n                                component: 'local_users'\n                            },\n                            {\n                                key: 'skip',\n                                component: 'local_users'\n                            },\n                            {\n                                key: 'previous',\n                                component: 'local_users'\n                            },\n                            {\n                                key: 'cancel',\n                                component: 'local_users'\n                            }]);\n            }\n\n            return strings.then(function(strings) {\n                // Create the modal.\n                return ModalFactory.create({\n                    type: ModalFactory.types.DEFAULT,\n                    title: strings[0],\n                    body: this.getBody(),\n                    footer: this.getFooter(strings),\n                });\n            }.bind(this)).then(function(modal) {\n                // Keep a reference to the modal.\n                this.modal = modal;\n                // self.modal.show();\n                // Forms are big, we want a big modal.\n                this.modal.setLarge(); \n                \n                this.modal.getRoot().addClass('openLMStransition local_users');\n\n                // this.modal.getRoot().on(ModalEvents.hidden, function() {\n                //     this.modal.setBody('');\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\n                    this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 500);\n                }.bind(this));\n\n                this.modal.getFooter().find('[data-action=\"save\"]').on('click', this.submitForm.bind(this));\n                // We also catch the form submit event and use it to submit the form with ajax.\n\n                // this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                //     modal.setBody('');\n                //     modal.hide();\n                this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                    modal.hide();\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 500);\n                    window.location.reload();\n                    // modal.destroy();\n                });\n\n                this.modal.getFooter().find('[data-action=\"skip\"]').on('click', function() {\n                    self.args.form_status = self.args.form_status + 1;\n                    var data = self.getBody();\n                    data.then(function(html, js) {\n                        if(html === false) {\n                            window.location.reload();\n                        }\n                    });\n                    modal.setBody(data);\n                    if(self.args.form_status==2){\n                        $('[data-action=\"skip\"]').css('display', 'none');\n                    }\n                });\n                this.modal.getFooter().find('[data-action=\"previous\"]').on('click', function() {\n                    self.args.form_status = self.args.form_status - 1;\n                    var data = self.getBody();\n                    data.then(function(html, js) {\n                        if(html === false) {\n                            window.location.reload();\n                        }\n                    });\n                    modal.setBody(data);\n                    if(self.args.form_status==0){\n                        $('[data-action=\"skip\"]').css('display', 'none');\n                        $('[data-action=\"previous\"]').css('display', 'none');\n                    }else{\n                        $('[data-action=\"skip\"]').css('display', 'block');\n                        $('[data-action=\"previous\"]').css('display', 'block');\n                    }\n                });\n                $(document).on('changedvalue', '#id_open_costcenterid_select', function(){\n                    // alert('hello');\n                    modal.getRoot().find('form').append(\"<input name='skipvalidation' value='1'/>\");\n                    var data = modal.getRoot().find('form').serialize();\n                    modal.setBody(self.getBody(data));\n                });\n                // added for custom navigating from the top lists.\n                if(self.args.callback == 'user_form'){\n                    $(document).on('click', '.custom_user_form_redirect', function(){\n                        var instanceid = $(\"#userid\").val();\n                        if(instanceid > 0){\n                            self.args.form_status = $(this).data('value');\n                            var data = self.getBody();\n                            data.then(function(html, js) {\n                                if (html === false) {\n                                  // window.location.reload();\n                                    self.handleFormSubmissionResponse(args);\n                                }\n                            });\n                            modal.setBody(data);\n                            if(self.args.form_status==0){\n                                $('[data-action=\"skip\"]').css('display', 'none');\n                                $('[data-action=\"previous\"]').css('display', 'none');\n                            }else if(self.args.form_status==2){\n                                $('[data-action=\"skip\"]').css('display', 'none');\n                                $('[data-action=\"previous\"]').css('display', 'block');\n                            }else {\n                                $('[data-action=\"skip\"]').css('display', 'block');\n                                $('[data-action=\"previous\"]').css('display', 'block');\n                            }\n                        }\n                    });\n                }\n\n                this.modal.getRoot().on('submit', 'form', function(form) {\n                    self.submitFormAjax(form, self.args);\n                });\n                this.modal.show();\n                this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n\n                return this.modal;\n            }.bind(this));       \n        \n        \n        // });\n        \n    };\n \n    /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    NewUser.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        // console.log(this);\n        // alert(formdata);\n        // Get the content of the modal.\n        // this.args.userid = this.userid\n        this.args.jsonformdata = JSON.stringify(formdata);\n        return Fragment.loadFragment('local_users', 'new_create_user', this.contextid, this.args);\n    };\n    /**\n     * @method getFooter\n     * @private\n     * @return {Promise}\n     */\n    NewUser.prototype.getFooter = function(strings) {\n        $footer = '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">'+ strings[1] +'</button>&nbsp;';\n        $style = 'style=\"display:none;\"';\n        $footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"previous\" ' + $style + ' >'+ strings[3] +'</button>&nbsp;';\n        $footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"skip\" ' + $style + ' >'+ strings[2] +'</button>&nbsp;';\n        $footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">'+ strings[4] +'</button>';\n        return $footer;\n    };\n \n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {Promise}\n     */\n    NewUser.prototype.handleFormSubmissionResponse = function() {\n        this.modal.hide();\n        // We could trigger an event instead.\n        // Yuk.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        // document.location.reload();\n        // This will be the context for our template. So {{name}} in the template will resolve to \"Tweety bird\".\n        var context = { id: args.id};\n        // // This will call the function to load and render our template.\n        // templates.render('local_classroom/classroomview', context);\n\n        // // It returns a promise that needs to be resoved.\n        //     .then(function(html, js) {\n                var modalPromise = ModalFactory.create({\n                    type: ModalFactory.types.DEFAULT,\n                    body: Templates.render('local_classroom/classroomview', context),\n                });\n                $.when(modalPromise).then(function(modal) {\n                    // modal.setTitle('Hi');\n                    // // modal.setBody('Hi');\n                    // modal.show();\n                    // return modal;\n                }).fail(Notification.exception);\n\n\n            //     // Here eventually I have my compiled template, and any javascript that it generated.\n            //     // The templates object has append, prepend and replace functions.\n            //     templates.appendNodeContents('.block_looneytunes .content', source, javascript);\n            // }).fail(function(ex) {\n            //     // Deal with this exception (I recommend core/notify exception function for this).\n            // });\n    };\n \n    /**\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    NewUser.prototype.handleFormSubmissionFailure = function(data) {\n        // Oh noes! Epic fail :(\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n \n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    NewUser.prototype.submitFormAjax = function(e ,args) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n        var self = this;\n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n        // var methodname = args.plugintype + '_' + args.pluginname + '_submit_create_user_form';\n        var methodname = 'local_users_submit_create_user_form';\n        var params = {};\n        params.contextid = this.contextid;\n        params.jsonformdata = JSON.stringify(formData);\n        params.form_status = args.form_status;\n\n        var promise = Ajax.call([{\n            methodname: methodname,\n            args: params\n        }]);\n\n         promise[0].done(function(resp){\n            // alert(resp.form_status);\n            if(resp.form_status !== -1 && resp.form_status !== false) {\n                self.args.form_status = resp.form_status;\n                self.args.id = resp.id;\n                self.handleFormSubmissionFailure();\n            } else {\n                // self.handleFormSubmissionResponse(self.args);\n                // alert('here');\n                self.modal.hide();\n                window.location.reload();\n            }\n            if(args.form_status > 0) {\n                $('[data-action=\"skip\"]').css('display', 'inline-block');\n                $('[data-action=\"previous\"]').css('display', 'inline-block');\n            }\n\n            if(args.form_status == 2) {\n                $('[data-action=\"skip\"]').css('display', 'none');\n            }\n\n        }).fail(function(ex){\n            self.handleFormSubmissionFailure(formData);\n        })\n        // alert(this.contextid);\n        // Now we can continue...\n        // Ajax.call([{\n        //     methodname: 'local_users_submit_create_user_form',\n        //     args: {contextid: this.contextid, jsonformdata: JSON.stringify(formData)},\n        //     done: this.handleFormSubmissionResponse.bind(this, formData),\n        //     fail: this.handleFormSubmissionFailure.bind(this, formData)\n        // }]);\n    };\n \n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    NewUser.prototype.submitForm = function(e) {\n        e.preventDefault();\n        var self = this;\n        self.modal.getRoot().find('form').submit();\n    };\n \n    return /** @alias module:local_users/newuser */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n         * @param {int} contextid The contextid for the course.\n         * @return {Promise}\n         */\n        init: function(args) {\n            return new NewUser(args);\n        },\n        load: function(){\n            // $(document).on('change', '#id_open_costcenterid', function() {\n            //   var costcentervalue = $(this).find(\"option:selected\").val();\n            //    if (costcentervalue !== null) {\n            //         var params = {};\n            //         params.costcenterid = costcentervalue;\n            //         params.contextid = 1;\n            //         var promise = Ajax.call([{\n            //             methodname: 'local_users_get_departments_list',\n            //             args: params\n            //         }]);\n            //         promise[0].done(function(resp) {\n            //             var resp = JSON.parse(resp);\n            //             var template = '';\n            //             $.each(resp, function(index,value) {\n            //                 template += '<option value = ' + index + ' >' +value + '</option>';\n            //             });\n            //             $(\"#id_open_departmentid\").html(template);\n            //         });\n            //     }\n            //     $('#id_open_departmentid').trigger('change');\n            //     $('#id_open_subdepartment').trigger('change');\n            // });\n            // $(document).on('change', '#id_open_departmentid', function() {\n            //   var departmentvalue = $(this).find(\"option:selected\").val();\n            //    if (departmentvalue !== null) {\n            //         var params = {};\n            //         params.departmentid = departmentvalue;\n            //         params.contextid = 1;\n            //         var promise = Ajax.call([{\n            //             methodname: 'local_users_get_subdepartments_list',\n            //             args: params\n            //         }]);\n            //         promise[0].done(function(resp) {\n            //             var resp = JSON.parse(resp);\n            //             var template = '';\n            //             $.each(resp, function(index,value) {\n            //                 template += '<option value = ' + index + ' >' +value + '</option>';\n            //             });\n            //             $(\"#id_open_subdepartment\").html(template);\n            //         });\n            //     }\n            // });\n            // $(document).on('change', '#id_open_costcenterid', function() {\n            //     var costcentervalue = $(this).find(\"option:selected\").val();\n            //     if (costcentervalue != 0) {\n            //         var params = {};\n            //         params.costcenterid = costcentervalue;\n            //         params.contextid = 1;\n            //         var promise = Ajax.call([{\n            //             methodname: 'local_users_get_supervisors_list',\n            //             args: params\n            //         }]);\n            //         promise[0].done(function(resp) {\n            //             var resp = JSON.parse(resp);\n            //             var template = '';\n            //             $.each(resp, function(index,value) {\n            //                 template += '<option value = ' + index + ' >' +value + '</option>';\n            //             });\n            //             $(\"#open_supervisorid\").html(template);\n            //         });\n            //     }\n            //     $('#open_supervisorid').trigger('change');\n            // });\n\n            // $(document).on('change', '#id_open_costcenterid', function() {\n            //     var costcentervalue = $(this).find(\"option:selected\").val();\n            //     if (costcentervalue != 0) {\n            //         var params = {};\n            //         params.costcenterid = costcentervalue;\n            //         params.contextid = 1;\n            //         var promise = Ajax.call([{\n            //             methodname: 'local_users_get_domains_list',\n            //             args: params\n            //         }]);\n            //         promise[0].done(function(resp) {\n            //             var resp = JSON.parse(resp);\n            //             var template = '';\n            //             $.each(resp, function(index,value) {\n            //                 template += '<option value = ' + index + ' >' +value + '</option>';\n            //             });\n            //             console.log(template);\n            //             $(\"#id_open_domainid\").html(template);\n            //         });\n            //     }\n            //     $('#id_open_domainid').trigger('change');\n            // });\n\n            // $(document).on('change', '#id_open_domainid', function() {\n            //     // var costcentervalue = $('#id_open_costcenterid').val();\n            //     // if(costcentervalue > 0) {\n            //     //     costcentervalue = costcentervalue;\n            //     // } else {\n            //     //     costcentervalue = $('input[name=open_costcenterid]').val();\n            //     // }\n            //     var costcentervalue = $(this).data('costcenterid')\n            //     var domainvalue = $(this).find(\"option:selected\").val();\n            //     if (costcentervalue != 0 && domainvalue != 0) {\n            //         var params = {};\n            //         params.costcenterid = costcentervalue;\n            //         params.domain = domainvalue;\n            //         params.contextid = 1;\n            //         var promise = Ajax.call([{\n            //             methodname: 'local_users_get_positions_list',\n            //             args: params\n            //         }]);\n            //         promise[0].done(function(resp) {\n            //             var resp = JSON.parse(resp);\n            //             var template = '';\n            //             $.each(resp, function(index,value) {\n            //                 template += '<option value = ' + index + ' >' +value + '</option>';\n            //             });\n            //             $(\"#id_open_positionid\").html(template);\n            //         });\n            //     }\n            //     $('#id_open_positionid').trigger('change');\n            // });\n        },\n        changeElement: function(event){\n            console.log('hello');\n            var depth = $(event.target).data('depth');\n            $.each($('[data-action=\"userprofile_element_selector\"]'), function(index, value){\n                if($(value).data('depth') > depth){\n                    $(value).html('');\n                    $(value).parent().find('.form-autocomplete-selection').html($(value).data('selectstring'));\n                }\n            });\n        },\n        deleteConfirm: function(args) {\n            return Str.get_strings([{\n                key: 'confirm'\n            },\n            {\n                key: 'deleteconfirm',\n                component: 'local_users',\n                param :args\n            },\n            {\n                key: 'deleteallconfirm',\n                component: 'local_users'\n            },\n            {\n                key: 'delete'\n            }]).then(function(s) {\n                ModalFactory.create({\n                    title: s[0],\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    body: s[1]\n                }).done(function(modal) {\n                    this.modal = modal;\n                    modal.setSaveButtonText(s[3]);\n                    modal.getRoot().on(ModalEvents.save, function(e) {\n                        e.preventDefault();\n                        args.confirm = true;\n                        var params = {};\n                        params.id = args.id;\n                        params.contextid = args.contextid;\n                    \n                        var promise = Ajax.call([{\n                            methodname: 'local_users_'+args.action,\n                            args: params\n                        }]);\n                        promise[0].done(function(resp) {\n                            window.location.href = window.location.href;\n                        }).fail(function(ex) {\n                            // do something with the exception\n                             console.log(ex);\n                        });\n                    }.bind(this));\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n        },\n        userSuspend: function(args) {\n            return Str.get_strings([{\n                key: 'confirm'\n            },\n            {\n                key: 'suspendconfirm'+args.status,\n                component: 'local_users',\n                param :args\n            },\n            {\n                key: 'suspendallconfirm',\n                component: 'local_users'\n            },\n            {\n                key: 'confirm'\n            }]).then(function(s) {\n                ModalFactory.create({\n                    title: s[0],\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    body: s[1]\n                }).done(function(modal) {\n                    this.modal = modal;\n                    modal.setSaveButtonText(s[3]);\n                    modal.getRoot().on(ModalEvents.save, function(e) {\n                        e.preventDefault();\n                        args.confirm = true;\n                        var params = {};\n                        params.id = args.id;\n                        params.contextid = args.contextid;\n                    \n                        var promise = Ajax.call([{\n                            methodname: 'local_users_suspend_user',\n                            args: params\n                        }]);\n                        promise[0].done(function(resp) {\n                            window.location.href = window.location.href;\n                        }).fail(function(ex) {\n                            // do something with the exception\n                             console.log(ex);\n                        });\n                    }.bind(this));\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n        },\n        skillslist: function(args) {\n            // modal to show the courses in a category\n            element = '.competencynames';\n            if(!$(element).hasClass('clicked')){\n                $(element).addClass('clicked');\n                var params = { categoryid: args.categoryid, costcenterid: args.costcenterid, positionid: args.positionid, userid: args.userid};\n                var returndata =  Fragment.loadFragment('local_skillrepository', 'competency_skills_display', args.contextid, params);\n\n                ModalFactory.create({\n                    title: Str.get_string('categorypopup', 'local_users', args.categoryname),\n                    body: returndata\n                }).done(function(modal) {\n                    // Do what you want with your new modal.\n                    modal.show();\n                    modal.setLarge();\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        modal.setBody('');\n                    }.bind(this));\n                    modal.getRoot().find('[data-action=\"hide\"]').on('click', function() {\n                        $(element).removeClass('clicked');\n                        modal.hide();\n                        setTimeout(function(){\n                             modal.destroy();\n                        }, 500);\n                    });\n                });\n            }\n        }\n    };\n});"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","NewUser","args","contextid","context","id","this","init","prototype","modal","self","strings","get_strings","key","component","then","create","type","types","DEFAULT","title","body","getBody","footer","getFooter","bind","setLarge","getRoot","addClass","on","hidden","animate","setTimeout","destroy","find","submitForm","hide","window","location","reload","form_status","data","html","js","setBody","css","document","append","serialize","callback","val","handleFormSubmissionResponse","form","submitFormAjax","show","formdata","jsonformdata","JSON","stringify","loadFragment","$footer","$style","use","M","core_formchangechecker","reset_form_dirty_state","modalPromise","Templates","render","when","fail","Notification","exception","handleFormSubmissionFailure","e","preventDefault","formData","params","call","methodname","done","resp","ex","submit","load","changeElement","event","console","log","depth","target","each","index","value","parent","deleteConfirm","param","s","SAVE_CANCEL","setSaveButtonText","save","confirm","action","href","userSuspend","status","skillslist","element","hasClass","categoryid","costcenterid","positionid","userid","returndata","get_string","categoryname","removeClass"],"mappings":"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"}