{"version":3,"file":"edituserpw.min.js","sources":["../src/edituserpw.js"],"sourcesContent":["/**\n * Add a create new team modal to the page.\n *\n * @module     local_users/EditUserPw\n * @class      EditUserPw\n * @package    local_users\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n \n    /**\n     * Constructor\n     *\n     * @param {object} args\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var EditUserPw = function(args) {\n        this.contextid = args.context;\n        this.id = args.id;\n        this.args = args;\n        var self = this;\n        self.init();\n    };\n \n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    EditUserPw.prototype.modal = null;\n \n    /**\n     * @var {int} contextid\n     * @private\n     */\n    EditUserPw.prototype.contextid = -1;\n \n    /**\n     * Initialise the class.\n     *\n     * @private\n     * @return {Promise}\n     */\n    EditUserPw.prototype.init = function() {\n        var self = this;\n        var editid = $(this).data('value');\n         if (self.id) {\n             self.id = editid;\n             var head = Str.get_string('edituser', 'local_users');\n        }\n        else{\n              var head = Str.get_string('adnewuser', 'local_users');\n           }\n\n        return head.then(function(title) {\n            // Create the modal.\n            return ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                title: title,\n                body: self.getBody()\n            });\n        }.bind(self)).then(function(modal) {\n            \n            // Keep a reference to the modal.\n            self.modal = modal;\n           \n            // self.modal.getRoot().addClass('openLMStransition local_users');\n            // Forms are big, we want a big modal.\n            // self.modal.setLarge();\n \n            // We want to reset the form every time it is opened.\n            self.modal.getRoot().on(ModalEvents.hidden, function() {\n                self.modal.setBody(self.getBody());\n                self.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                setTimeout(function(){\n                    modal.destroy();\n                }, 1000);\n                \n            }.bind(this));\n\n            \n            // We want to hide the submit buttons every time it is opened.\n            self.modal.getRoot().on(ModalEvents.shown, function() {\n                self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n            }.bind(this));\n \n\n            // We catch the modal save event, and use it to submit the form inside the modal.\n            // Triggering a form submission will give JS validation scripts a chance to check for errors.\n            self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n            // We also catch the form submit event and use it to submit the form with ajax.\n            self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n\n            this.modal.show();\n            this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n            return this.modal;\n        }.bind(this));\n        \n    };\n \n    /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    EditUserPw.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        // Get the content of the modal.\n        var params = {id:this.args.id, jsonformdata: JSON.stringify(formdata)};\n        return Fragment.loadFragment('local_users', 'edit_user_pw', this.args.context, params);\n        // return 'here';\n    };\n \n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {Promise}\n     */\n    EditUserPw.prototype.handleFormSubmissionResponse = function() {\n        this.modal.hide();\n        // We could trigger an event instead.\n        // Yuk.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        document.location.reload();\n    };\n \n    /**\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    EditUserPw.prototype.handleFormSubmissionFailure = function(data) {\n        // Oh noes! Epic fail :(\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n \n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    EditUserPw.prototype.submitFormAjax = function(e) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n \n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n        // Now we can continue...\n        Ajax.call([{\n            methodname: 'local_users_submit_edit_user_pw_form',\n            args: {contextid: this.contextid, jsonformdata: JSON.stringify(formData)},\n            done: this.handleFormSubmissionResponse.bind(this, formData),\n            fail: this.handleFormSubmissionFailure.bind(this, formData)\n        }]);\n    };\n \n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    EditUserPw.prototype.submitForm = function(e) {\n        e.preventDefault();\n        var self = this;\n        self.modal.getRoot().find('form').submit();\n    };\n    \n    return /** @alias module:local_users/EditUserPw */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {object} args\n         * @return {Promise}\n        */\n        init: function(args) {\n            return new EditUserPw(args);\n        },\n        load: function(){\n\n        }\n    };\n});"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","EditUserPw","args","contextid","context","id","this","init","prototype","modal","self","editid","data","head","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","getRoot","on","hidden","setBody","animate","setTimeout","destroy","shown","append","save","submitForm","submitFormAjax","show","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","hide","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","e","preventDefault","formData","find","serialize","call","methodname","done","fail","submit","load"],"mappings":";;;;;;;;AAQAA,gCAAO,CAAC,SAAU,WAAY,qBAAsB,oBAAqB,gBAAiB,YAAa,aAC/F,SAASC,EAAGC,IAAKC,aAAcC,YAAaC,SAAUC,KAAMC,OAS5DC,WAAa,SAASC,WACjBC,UAAYD,KAAKE,aACjBC,GAAKH,KAAKG,QACVH,KAAOA,KACDI,KACNC,eAOTN,WAAWO,UAAUC,MAAQ,KAM7BR,WAAWO,UAAUL,WAAa,EAQlCF,WAAWO,UAAUD,KAAO,eACpBG,KAAOJ,KACPK,OAASjB,EAAEY,MAAMM,KAAK,YACrBF,KAAKL,GAAI,CACTK,KAAKL,GAAKM,WACNE,KAAOlB,IAAImB,WAAW,WAAY,oBAGjCD,KAAOlB,IAAImB,WAAW,YAAa,sBAGtCD,KAAKE,KAAK,SAASC,cAEfpB,aAAaqB,OAAO,CACvBC,KAAMtB,aAAauB,MAAMC,YACzBJ,MAAOA,MACPK,KAAMX,KAAKY,aAEjBC,KAAKb,OAAOK,KAAK,SAASN,cAGxBC,KAAKD,MAAQA,MAObC,KAAKD,MAAMe,UAAUC,GAAG5B,YAAY6B,OAAQ,WACxChB,KAAKD,MAAMkB,QAAQjB,KAAKY,WACxBZ,KAAKD,MAAMe,UAAUI,QAAQ,OAAS,QAAS,KAC/CC,YAAW,WACPpB,MAAMqB,YACP,MAELP,KAAKjB,OAIPI,KAAKD,MAAMe,UAAUC,GAAG5B,YAAYkC,MAAO,WACvCrB,KAAKD,MAAMe,UAAUQ,OAAO,0EAC9BT,KAAKjB,OAKPI,KAAKD,MAAMe,UAAUC,GAAG5B,YAAYoC,KAAMvB,KAAKwB,WAAWX,KAAKb,OAE/DA,KAAKD,MAAMe,UAAUC,GAAG,SAAU,OAAQf,KAAKyB,eAAeZ,KAAKb,YAE9DD,MAAM2B,YACN3B,MAAMe,UAAUI,QAAQ,OAAS,MAAO,KACtCtB,KAAKG,OACdc,KAAKjB,QASXL,WAAWO,UAAUc,QAAU,SAASe,eACZ,IAAbA,WACPA,SAAW,QAGXC,OAAS,CAACjC,GAAGC,KAAKJ,KAAKG,GAAIkC,aAAcC,KAAKC,UAAUJ,kBACrDvC,SAAS4C,aAAa,cAAe,eAAgBpC,KAAKJ,KAAKE,QAASkC,SASnFrC,WAAWO,UAAUmC,6BAA+B,gBAC3ClC,MAAMmC,OAGX5C,EAAE6C,IAAI,iCAAiC,WACnCC,EAAEC,uBAAuBC,4BAE7BC,SAASC,SAASC,UAQtBlD,WAAWO,UAAU4C,4BAA8B,SAASxC,WAGnDH,MAAMkB,QAAQrB,KAAKgB,QAAQV,QAUpCX,WAAWO,UAAU2B,eAAiB,SAASkB,GAE3CA,EAAEC,qBAGEC,SAAWjD,KAAKG,MAAMe,UAAUgC,KAAK,QAAQC,YAEjD1D,KAAK2D,KAAK,CAAC,CACPC,WAAY,uCACZzD,KAAM,CAACC,UAAWG,KAAKH,UAAWoC,aAAcC,KAAKC,UAAUc,WAC/DK,KAAMtD,KAAKqC,6BAA6BpB,KAAKjB,KAAMiD,UACnDM,KAAMvD,KAAK8C,4BAA4B7B,KAAKjB,KAAMiD,cAW1DtD,WAAWO,UAAU0B,WAAa,SAASmB,GACvCA,EAAEC,iBACShD,KACNG,MAAMe,UAAUgC,KAAK,QAAQM,UAGa,CAS/CvD,KAAM,SAASL,aACJ,IAAID,WAAWC,OAE1B6D,KAAM"}