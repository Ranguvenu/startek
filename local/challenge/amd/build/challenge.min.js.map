{"version":3,"file":"challenge.min.js","sources":["../src/challenge.js"],"sourcesContent":["/**\n *\n * @module     local_challenge/challenge\n * @class      challenge\n * @package    local_challenge\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax', 'core/templates', 'core/fragment', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/notification'], \n        function ($, Ajax, Templates, Fragment, Str, ModalFactory, ModalEvents, Notification){\n    var challenge = function(args){\n    \tthis.args = args;\n    \tvar self = this;\n    \tvar head = Str.get_string(args.type, 'local_challenge');\n        var strings = Str.get_strings([\n            {\n                key: args.type,\n                component: 'local_challenge'\n            },\n            {\n                key: 'cancel',\n                component: 'moodle'\n            }\n            ]);\n        return strings.then(function(string) {\n    \t // head.then(function(title) {\n            // Create the modal.\n            return ModalFactory.create({\n            type: ModalFactory.types.DEFAULT,\n            title: string[0],\n            body: this.getBody(),\n            footer: this.getFooter(string),\n            });\n        }.bind(this)).then(function(modal) {\n            // Keep a reference to the modal.\n            this.modal = modal;\n\n            // Forms are big, we want a big modal.\n            this.modal.setLarge(); \n\n            this.modal.getRoot().on(ModalEvents.hidden, function() {\n                modal.destroy();\n            }.bind(this));\n\n            // We also catch the form submit event and use it to submit the form with ajax.\n            this.modal.getFooter().find('[data-action=\"save\"]').on('click', this.submitForm.bind(this));\n\n            this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                modal.hide();// added for hiding the modal popup #required!\n                modal.destroy();\n            }.bind(this));\n\n            this.modal.getRoot().on('submit', 'form', function(form) {\n                self.submitFormAjax(form, self.args);\n            });\n            this.modal.show();\n            // this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n\n            return this.modal;\n        }.bind(this));\n    }\n    challenge.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        this.args.jsonformdata = JSON.stringify(formdata);\n        return Fragment.loadFragment('local_challenge', 'challenge_module', this.args.contextid, this.args);\n    };\n    challenge.prototype.getFooter = function(string) {\n\n        $footer = '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">'+string[0]+'</button>&nbsp;';\n        $footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">'+string[1]+'</button>';\n        return $footer;\n    };\n    challenge.prototype.submitForm = function(e) {\n        e.preventDefault();\n        var self = this;\n        self.modal.getRoot().find('form').submit();\n    };\n    challenge.prototype.submitFormAjax = function(e ,args) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n        var self = this;\n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n        // var methodname = args.plugintype + '_' + args.pluginname + '_submit_create_user_form';\n        var methodname = 'local_challenge_post_challenge';\n        var params = {};\n        params.contextid = this.args.contextid;\n        params.jsonformdata = JSON.stringify(formData);\n\n        var promise = Ajax.call([{\n            methodname: methodname,\n            args: params,\n            done: this.handleFormSubmissionResponse.bind(this, formData),\n            fail: this.handleFormSubmissionFailure.bind(this, formData)\n        }]);\n    };\n    challenge.prototype.handleFormSubmissionResponse = function() {\n        this.modal.hide();\n        var strings = Str.get_strings([\n            {\n                key: \"success\",\n                component: 'local_challenge'\n            }\n        ]);\n        strings.then(function(string) {\n            Y.use('moodle-core-formchangechecker', function() {\n                M.core_formchangechecker.reset_form_dirty_state();\n            });\n            Notification.addNotification({\n                message: string[0],\n                type: \"success\"\n            });\n            setTimeout(function(){\n                window.location.reload();\n            }, 1000);\n        });\n    };\n    challenge.prototype.handleFormSubmissionFailure = function(data) {\n        this.modal.setBody(this.getBody(data));\n    };\n    var alter_status = function(args){\n        var strings = Str.get_strings([{\n                key: 'confirm'\n            },\n            {\n                key: 'challenge_confirm_'+args.action,\n                component: 'local_challenge',\n                param :args   \n            },\n            {\n                key: args.action,\n                component: 'local_challenge'\n            },\n            {\n                key: \"success\",\n                component: 'local_challenge'\n            }\n            ]);\n        strings.then(function(string) {\n            // Create the modal.\n            ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                title: string[0],\n                body: string[1]\n            }).then(function(modal) {\n                // Keep a reference to the modal.\n                this.modal = modal;\n                \n                this.modal.show();\n                this.modal.setSaveButtonText(string[2]);\n\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\n                    modal.destroy();\n                }.bind(this));\n                this.modal.getRoot().on(ModalEvents.save, function(e) {\n                    var methodname = 'local_challenge_alter_challenge_status';\n                    var params = {};\n                    params.contextid = args.contextid;\n                    params.challengeid = args.challengeid;\n                    params.newstatus = args.newstatus;\n\n                    var promise = Ajax.call([{\n                        methodname: methodname,\n                        args: params,\n                    }]);\n                    promise[0].done(function(resp){\n                        Notification.addNotification({\n                            message: string[3],\n                            type: \"success\"\n                        });\n                        setTimeout(function(){\n                            window.location.reload();\n                        }, 1000);\n                    });\n                    promise[0].fail(function(resp){\n                        Notification.addNotification({\n                            message: 'Cannot process',\n                            type: \"error\"\n                        });\n                        setTimeout(function(){\n                            window.location.reload();\n                        }, 1000);\n                    });        \n                });\n            \n\n            }.bind(this));\n        }.bind(this));\n\n        \n    };\n    return {\n    \tinit : function(){\n    \t\t$(document).on('click', '.challenge_trigger_element', function(){\n    \t\t\tvar args = $(this).data();\n    \t\t\treturn new challenge(args);\n    \t\t});\n            $(document).on('click', '.challenge_status_trigger', function(){\n                var args = $(this).data();\n                return new alter_status(args);\n            });\n    \t}\n    };\n});"],"names":["define","$","Ajax","Templates","Fragment","Str","ModalFactory","ModalEvents","Notification","challenge","args","self","this","get_string","type","get_strings","key","component","then","string","create","types","DEFAULT","title","body","getBody","footer","getFooter","bind","modal","setLarge","getRoot","on","hidden","destroy","find","submitForm","hide","form","submitFormAjax","show","prototype","formdata","jsonformdata","JSON","stringify","loadFragment","contextid","$footer","e","preventDefault","submit","formData","serialize","params","call","methodname","done","handleFormSubmissionResponse","fail","handleFormSubmissionFailure","Y","use","M","core_formchangechecker","reset_form_dirty_state","addNotification","message","setTimeout","window","location","reload","data","setBody","alter_status","action","param","SAVE_CANCEL","setSaveButtonText","save","challengeid","newstatus","promise","resp","init","document"],"mappings":"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"}