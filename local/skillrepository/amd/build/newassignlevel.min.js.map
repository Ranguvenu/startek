{"version":3,"file":"newassignlevel.min.js","sources":["../src/newassignlevel.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_location/location\n * @class      NewInstitute\n * @package    local_location\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['local_skillrepository/jquery.dataTables', 'jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\n        function(dataTable, $, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n\n    /**\n     * Constructor\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @param {int} contextid\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var NewAssignlevel = function(args) {\n        this.contextid = args.contextid;\n        this.costcenterid = args.costcenterid;\n        this.competencyid = args.competencyid;\n        this.skillid = args.repositoryid;\n        // this.positionid = args.positionid;\n        // this.levelid = args.levelid;\n        var self = this;\n        self.init(args.selector);\n    };\n\n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    NewAssignlevel.prototype.modal = null;\n\n    /**\n     * @var {int} contextid\n     * @private\n     */\n    NewAssignlevel.prototype.contextid = -1;\n\n    /**\n     * Initialise the class.\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @private\n     * @return {Promise}\n     */\n    NewAssignlevel.prototype.init = function(args) {\n        // console.log(args);\n        //var triggers = $(selector);\n        var self = this;\n            return Str.get_string('assignlevel', 'local_skillrepository',self).then(function(title) {\n                // Create the modal.\n                return ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: title,\n                    body: self.getBody()\n                });\n            }.bind(self)).then(function(modal) {\n\n                // Keep a reference to the modal.\n                self.modal = modal;\n                // self.modal.show();\n                // Forms are big, we want a big modal.\n                self.modal.setLarge();\n                // this.modal.getRoot().addClass('openLMStransition');\n\n                // We want to reset the form every time it is opened.\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\n                    this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 1000);\n                }.bind(this));\n\n                // We want to hide the submit buttons every time it is opened.\n                self.modal.getRoot().on(ModalEvents.shown, function() {\n                    self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n                    this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                        modal.hide();\n                        setTimeout(function(){\n                            modal.destroy();\n                        }, 1000);\n                        // modal.destroy();\n                    });\n                }.bind(this));\n\n\n                // We catch the modal save event, and use it to submit the form inside the modal.\n                // Triggering a form submission will give JS validation scripts a chance to check for errors.\n                self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n                // We also catch the form submit event and use it to submit the form with ajax.\n                self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n                self.modal.show();\n                this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n                return this.modal;\n            }.bind(this));\n\n\n        // });\n\n    };\n\n    /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    NewAssignlevel.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        // alert(formdata);\n        // Get the content of the modal.\n        var params = {costcenterid:this.costcenterid, competencyid:this.competencyid, skillid:this.skillid/*, positionid:this.positionid, levelid:this.levelid*/, jsonformdata: JSON.stringify(formdata)};\n        return Fragment.loadFragment('local_skillrepository', 'new_assignlevel', this.contextid, params);\n    };\n\n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {Promise}\n     */\n    NewAssignlevel.prototype.handleFormSubmissionResponse = function() {\n        this.modal.hide();\n        // We could trigger an event instead.\n        // Yuk.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        document.location.reload();\n    };\n\n    /**\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    NewAssignlevel.prototype.handleFormSubmissionFailure = function(data) {\n        // Oh noes! Epic fail :(\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n\n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    NewAssignlevel.prototype.submitFormAjax = function(e) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n\n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n        // alert(this.contextid);\n        // Now we can continue...\n        Ajax.call([{\n            methodname: 'local_skillrepository_submit_assignlevel_form',\n            args: {contextid: this.contextid, costcenterid:this.costcenterid, skillid:this.skillid, competencyid:this.competencyid,/* positionid:this.positionid, levelid:this.levelid,*/ jsonformdata: JSON.stringify(formData)},\n            done: this.handleFormSubmissionResponse.bind(this, formData),\n            fail: this.handleFormSubmissionFailure.bind(this, formData)\n        }]);\n    };\n\n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    NewAssignlevel.prototype.submitForm = function(e) {\n        e.preventDefault();\n        var self = this;\n        self.modal.getRoot().find('form').submit();\n    };\n\n    var dataTableshow = function(tableid){\n        // alert(tableid);\n        $(tableid).dataTable({\n            'bPaginate': true,\n            \"ordering\": false,\n            'bFilter': true,\n            \"pageLength\": 5,\n            'bLengthChange': false,\n            'language': {\n                'emptyTable': 'No Records Found',\n                'paginate': {\n                    'previous': '<',\n                    'next': '>'\n                }\n            },\n\n            'bProcessing': false,\n        });\n    }\n\n    return /** @alias module:local_location/newlocation */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n         * @param {int} contextid The contextid for the course.\n         * @return {Promise}\n         */\n        init: function(args) {\n\n            // alert(args.contextid);\n            return new NewAssignlevel(args);\n        },\n        load: function(){\n            $(document).on('click', '.levelnameclass.assignlevel', function(){\n                var element = $(this);\n                if(element.hasClass('skillassigned')){\n                    var existEnabled = true;\n                }else{\n                    var existEnabled = false;\n                }\n                // var siblings = $(this).parent().siblings();\n                // siblings.attr('class', 'levelname nolevel');\n                // siblings.children().removeClass('skillassigned').addClass('nolevel');\n                var data = element.data();\n                var contextid = data.contextid;\n                var costcenterid = data.costcenterid;\n                var competencyid = data.competencyid;\n                var skillid = data.skillid;\n                var positionid = data.positionid;\n                var levelid = data.levelid;\n                var skilllevel = data.skilllevel;\n                var newclass = data.scheme;\n                \n                var promise = Ajax.call([{\n                    methodname: 'skill_level_confirmation',\n                    args: {\n                        contextid:contextid,\n                        costcenterid: costcenterid,\n                        competencyid: competencyid,\n                        skillid: skillid,\n                        positionid: positionid,\n                        levelid:levelid,\n                        skilllevel:skilllevel,\n                    },\n                }]);\n                // console.log(promise);\n                promise[0].done(function(resp) {\n                    if(existEnabled){\n                        element.removeClass('skillassigned');    \n                        element.parent().removeClass(newclass).addClass('nolevel');\n                    }else{\n                        element.addClass('skillassigned');\n                        element.parent().removeClass('nolevel').addClass(newclass);\n                    }\n                   // location.reload();\n                }).fail(function() {\n                    // do something with the exception\n                    alert('Error occured while processing request');\n                     // window.location.reload();\n                });\n            });\n            // $(document).on('click', '.removelevelSkill', function(){\n            //     var element = $(this);\n            //     var data = element.data();\n            //     var costcenterid = data.costcenterid;\n            //     var skillid = data.skillid;\n            //     var levelid = data.levelid;\n            //     var promise = Ajax.call([{\n            //         methodname: 'local_skillrepository_purge_skill_level',\n            //         args: {\n            //             costcenterid: costcenterid,\n            //             skillid: skillid,\n            //             levelid:levelid\n            //         },\n            //     }]);\n            //     promise[0].done(function(resp) {\n            //        window.location.reload(); \n            //     });\n            // });\n            $(document).on('click', '.removelevelSkill', function(){\n                var element = $(this);\n                var data = element.data();\n                var costcenterid = data.costcenterid;\n                var skillid = data.skillid;\n                var levelid = data.levelid;\n                var competencyid = data.competencyid;\n                return Str.get_strings([{\n                        key: 'confirm'\n                    },\n                    {\n                        key: 'purgeLevelConfirm',\n                        component: 'local_skillrepository',\n                        param :data\n                    }\n                    ]).then(function(s) {\n                        ModalFactory.create({\n                            title: s[0],\n                            type: ModalFactory.types.SAVE_CANCEL,\n                            body: s[1]\n                        }).done(function(modal) {\n                            this.modal = modal;\n                            // modal.setSaveButtonText(s[0]);\n \n\n                        modal.setSaveButtonText(Str.get_string('yes_delete', 'local_skillrepository'));\n\n\n                        //For cancel button string changed//\n                        var value=Str.get_string('cancel', 'local_skillrepository');\n                        var button = this.modal.getFooter().find('[data-action=\"cancel\"]');\n                        this.modal.asyncSet(value, button.text.bind(button));\n\n                           modal.getRoot().on(ModalEvents.save, function(e) {\n                                e.preventDefault();\n                                var promise = Ajax.call([{\n                                    methodname: 'local_skillrepository_purge_skill_level',\n                                    args: {\n                                        costcenterid: costcenterid,\n                                        skillid: skillid,\n                                        levelid:levelid,\n                                        competencyid:competencyid\n                                    },\n                                }]);\n                                promise[0].done(function(resp) {\n                                   window.location.reload(); \n                                });\n                            }.bind(this));\n                            modal.show();\n                        }.bind(this));\n                }.bind(this));\n            });\n            $(document).on('click', '.removeCompetencyLevel', function(){\n                var element = $(this);\n                var data = element.data();\n                var costcenterid = data.costcenterid;\n                var competencyid = data.competencyid;\n                var levelid = data.levelid;\n                return Str.get_strings([{\n                        key: 'confirm'\n                    },\n                    {\n                        key: 'purgeCompetencyLevelConfirm',\n                        component: 'local_skillrepository',\n                        param :data\n                    }\n                    ]).then(function(s) {\n                        ModalFactory.create({\n                            title: s[0],\n                            type: ModalFactory.types.SAVE_CANCEL,\n                            body: s[1]\n                        }).done(function(modal) {\n                            this.modal = modal;\n                            modal.setSaveButtonText(s[0]);\n                            modal.getRoot().on(ModalEvents.save, function(e) {\n                                e.preventDefault();\n                                var promise = Ajax.call([{\n                                    methodname: 'local_skillrepository_purge_competency_level',\n                                    args: {\n                                        costcenterid: costcenterid,\n                                        competencyid: competencyid,\n                                        levelid:levelid\n                                    },\n                                }]);\n                                promise[0].done(function(resp) {\n                                   window.location.reload(); \n                                });\n                            }.bind(this));\n                            modal.show();\n                        }.bind(this));\n                }.bind(this));\n            });\n\n            $(document).on('click', '.removeLevelSkill', function(){\n                var element = $(this);\n                var data = element.data();\n                var costcenterid = parseInt(data.costcenterid);\n                var competencyid = parseInt(data.competencyid);\n                var levelid = parseInt(data.levelid);\n                var skillid = parseInt(data.skillid);\n                return Str.get_strings([{\n                        key: 'confirm'\n                    },\n                    {\n                        key: 'purgeLevelSkillConfirm',\n                        component: 'local_skillrepository',\n                        param :data\n                    }\n                    ]).then(function(s) {\n                        ModalFactory.create({\n                            title: s[0],\n                            type: ModalFactory.types.SAVE_CANCEL,\n                            body: s[1]\n                        }).done(function(modal) {\n                            this.modal = modal;\n                            // modal.setSaveButtonText(s[0]);\n \n\n                        modal.setSaveButtonText(Str.get_string('yes_delete', 'local_skillrepository'));\n\n\n                        //For cancel button string changed//\n                        var value=Str.get_string('cancel', 'local_skillrepository');\n                        var button = this.modal.getFooter().find('[data-action=\"cancel\"]');\n                        this.modal.asyncSet(value, button.text.bind(button));\n\n                           modal.getRoot().on(ModalEvents.save, function(e) {\n                                e.preventDefault();\n                                var promise = Ajax.call([{\n                                    methodname: 'local_skillrepository_purge_level_skill',\n                                    args: {\n                                        costcenterid: costcenterid,\n                                        competencyid: competencyid,\n                                        levelid: levelid,\n                                        skillid: skillid\n                                    },\n                                }]);\n                                promise[0].done(function(resp) {\n                                   window.location.reload(); \n                                });\n                            }.bind(this));\n                            modal.show();\n                        }.bind(this));\n                }.bind(this));\n            });\n            $(document).on('click', '.removeSkillCourse', function(){\n                var element = $(this);\n                data = element.data();\n                var courseid = data.courseid;\n                var skillid = data.skillid;\n                return Str.get_strings([{\n                        key: 'confirm'\n                    },\n                    {\n                        key: 'purgeSkillCourseConfirm',\n                        component: 'local_skillrepository',\n                        param :data\n                    }\n                    ]).then(function(s) {\n                        ModalFactory.create({\n                            title: s[0],\n                            type: ModalFactory.types.SAVE_CANCEL,\n                            body: s[1]\n                        }).done(function(modal) {\n                            this.modal = modal;\n                            modal.setSaveButtonText(s[0]);\n                            modal.getRoot().on(ModalEvents.save, function(e) {\n                                e.preventDefault();\n                                var promise = Ajax.call([{\n                                    methodname: 'local_skillrepository_purge_skill_course',\n                                    args: {\n                                        courseid: courseid,\n                                        skillid: skillid\n                                    },\n                                }]);\n                                promise[0].done(function(resp) {\n                                   window.location.reload(); \n                                });\n                            }.bind(this));\n                            modal.show(); \n                        }.bind(this));\n                }.bind(this));\n            });\n\n        },\n        getDomains: function() {\n                // alert('orgID');\n            $(document).on('change', '#id_costcenterid', function(){\n                customstrings = Str.get_strings(\n                [{\n                    key: 'selectdomain',\n                    component: 'local_skillrepository'\n                }]);\n                return customstrings.then(function(strings) {\n                var orgID = $(this).val();\n                // alert(orgID);\n                if(orgID){\n                    var promise = Ajax.call([{\n                        methodname: 'local_org_domains',\n                        args: {\n                            orgid: orgID,\n                        },\n                    }]);\n                    promise[0].done(function(resp) {\n                        var template =  '<option value=null>'+strings[0]+'</option>'; \n                        $.each(JSON.parse(resp), function( index, value) {\n                            template += '<option value = ' + index + ' >' +value + '</option>';\n                        });\n                        $('#id_domain').html(template);\n                    }).fail(function() {\n                        // do something with the exception\n                        alert('Error occured while processing request');\n                         window.location.reload();\n                    });\n                } else {\n                    var template =  '<option value=\\'\\'>'+strings[0]+'</option>'; \n                    $('#id_domain').html(template);\n                }\n            }.bind(this));\n           });\n        },\n        getLevels: function(args) {\n            $(document).on('change', '#id_leveltype', function(){\n                customstrings = Str.get_strings(\n                [{\n                    key: 'selectlevel',\n                    component: 'local_skillrepository'\n                }]);\n                return customstrings.then(function(strings) {\n                var costcenterid = $('#id_costcenterid').val();\n                if(costcenterid > 0) {\n                    costcenterid = costcenterid;\n                } else {\n                    costcenterid = $('input[name=costcenterid]').val();\n                }\n                var leveltype = $(this).val();\n                if(costcenterid != 0 && leveltype !=0){\n                    var promise = Ajax.call([{\n                        methodname: 'get_levels',\n                        args: {\n                            costcenterid: costcenterid,\n                            leveltype: leveltype,\n                        },\n                    }]);\n                    promise[0].done(function(resp) { \n                        var template =  '<option value=null>'+strings[0]+'</option>'; \n                        $.each(JSON.parse(resp), function( index, value) {\n                            template += '<option value = ' + index + ' >' +value + '</option>';\n                        });\n                        $('#id_levelid').html(template);\n                    }).fail(function() {\n                        // do something with the exception\n                        alert('Error occured while processing request');\n                         window.location.reload();\n                    });\n                } else {\n                    var template =  '<option value=\\'\\'>'+strings[0]+'</option>'; \n                    $('#id_levelid').html(template);\n                }\n               }.bind(this));\n            });\n        },\n        displaySkillLevels: function(args){\n            var params = { skillid: args.skillid, costcenterid: args.costcenterid};\n            var returndata =  Fragment.loadFragment('local_skillrepository', 'skill_level_display', 1, params);\n            ModalFactory.create({\n                title: Str.get_string('skilllevelsinfo', 'local_skillrepository', args.skillname),\n                body: returndata\n            }).done(function(modal) {\n                // Do what you want with your new modal.\n                modal.show();\n                modal.getRoot().on(ModalEvents.bodyRendered, function() {\n                    dataTableshow('#skilllevel_info');\n                }.bind(this));\n                modal.setLarge();\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                    modal.setBody('');\n                }.bind(this));\n                modal.getRoot().find('[data-action=\"hide\"]').on('click', function() {\n                    modal.hide();\n                    setTimeout(function(){\n                         modal.destroy();\n                    }, 500);\n                });\n            });\n        },\n        displaySkillCourses: function(args){\n            var params = { skillid: args.skillid, costcenterid: args.costcenterid};\n            var returndata =  Fragment.loadFragment('local_skillrepository', 'skill_courses_display', 1, params);\n            ModalFactory.create({\n                title: Str.get_string('skillcoursesinfo', 'local_skillrepository', args.skillname),\n                body: returndata\n            }).done(function(modal) {\n                // Do what you want with your new modal.\n                modal.show();\n                modal.getRoot().on(ModalEvents.bodyRendered, function() {\n                     dataTableshow('#skillcourse_info');\n                }.bind(this));\n                modal.setLarge();\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                    modal.setBody('');\n                }.bind(this));\n                modal.getRoot().find('[data-action=\"hide\"]').on('click', function() {\n                    modal.hide();\n                    setTimeout(function(){\n                         modal.destroy();\n                    }, 500);\n                });\n            });\n        },\n        getSkillLevels: function(args, event) {\n            // $(document).on('click', '.levelnameclass', function(args){\n                console.log(event);\n                var contextid = 1;\n                var costcenterid = args.costcenterid;\n                var competencyid = args.competencyid;\n                var skillid = args.skillid;\n                var positionid = args.positionid;\n                var levelid = args.levelid;\n                var skilllevel = args.skilllevel;\n                if(costcenterid != 0 && competencyid != 0 && skillid != 0 && positionid != 0 && levelid != 0 && skilllevel != 0){\n                    var promise = Ajax.call([{\n                        methodname: 'skill_level_confirmation',\n                        args: {\n                            contextid:contextid,\n                            costcenterid: costcenterid,\n                            competencyid: competencyid,\n                            skillid: skillid,\n                            positionid: positionid,\n                            levelid:levelid,\n                            skilllevel:skilllevel,\n                        },\n                    }]);\n                    // console.log(promise);\n                    promise[0].done(function(resp) {\n\n                       // location.reload();\n                    }).fail(function() {\n                        // do something with the exception\n                        alert('Error occured while processing request');\n                         window.location.reload();\n                    });\n                } else {\n                    var template =  '<option value=\\'\\'>--Select Level--</option>';\n                    $('#id_levelid').html(template);\n                }\n            // });\n        },\n\n    };\n});\n"],"names":["define","dataTable","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","NewAssignlevel","args","contextid","costcenterid","competencyid","skillid","repositoryid","this","init","selector","prototype","modal","self","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","setLarge","getRoot","on","hidden","animate","setTimeout","destroy","shown","append","getFooter","find","hide","save","submitForm","submitFormAjax","show","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","data","setBody","e","preventDefault","formData","serialize","call","methodname","done","fail","submit","dataTableshow","tableid","load","element","hasClass","existEnabled","positionid","levelid","skilllevel","newclass","scheme","resp","removeClass","parent","addClass","alert","get_strings","key","component","param","s","setSaveButtonText","value","button","asyncSet","text","window","parseInt","courseid","getDomains","customstrings","strings","orgID","val","orgid","template","each","parse","index","html","getLevels","leveltype","displaySkillLevels","returndata","skillname","bodyRendered","displaySkillCourses","getSkillLevels","event","console","log"],"mappings":"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"}