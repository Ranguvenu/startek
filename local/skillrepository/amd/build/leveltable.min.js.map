{"version":3,"file":"leveltable.min.js","sources":["../src/leveltable.js"],"sourcesContent":["define([\n    'local_skillrepository/jquery.dataTables',\n    'core/str',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/ajax',\n    'core/fragment',\n    'jquery',\n    'jqueryui',\n], function (dataTable, Str, ModalFactory, ModalEvents, Ajax, Fragment, $) {\n    var Newlevel = function(args){\n        this.args = args;\n        var self = this;\n        self.init(args);\n    };\n\n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    Newlevel.prototype.modal = null;\n\n    /**\n     * @var {int} contextid\n     * @private\n     */\n    Newlevel.prototype.contextid = -1;\n\n    Newlevel.prototype.init = function(args) {\n        var self = this;\n        if(args.levelid){\n            var head = Str.get_string('update_level', 'local_skillrepository');\n        }else{\n            var head = Str.get_string('create_level', 'local_skillrepository');\n        }\n        return head.then(function(title) {\n            // Create the modal.\n            return ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                title: title,\n                body: self.getBody()\n            });\n        }.bind(self)).then(function(modal) {\n            // Keep a reference to the modal.\n            self.modal = modal;\n            // Forms are big, we want a big modal.\n            self.modal.setLarge();\n            this.modal.getRoot().addClass('openLMStransition local_skillrepository');\n\n            // We want to reset the form every time it is opened.\n            this.modal.getRoot().on(ModalEvents.hidden, function() {\n                this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                setTimeout(function(){\n                    modal.destroy();\n                }, 1000);\n            }.bind(this));\n            self.modal.getRoot().on(ModalEvents.shown, function() {\n                self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n                this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                    modal.hide();\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 1000);\n                });\n            }.bind(this));\n            // We catch the modal save event, and use it to submit the form inside the modal.\n            // Triggering a form submission will give JS validation scripts a chance to check for errors.\n            self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n            // We also catch the form submit event and use it to submit the form with ajax.\n            self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n            self.modal.show();\n            this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n            return this.modal;\n        }.bind(this));\n    };\n\n     /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     * @type {formdata}\n     */\n    Newlevel.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        // Get the content of the modal.\n        var params = {levelid:this.args.levelid, jsonformdata: JSON.stringify(formdata)};\n        return Fragment.loadFragment('local_skillrepository', 'level_form', this.args.contextid, params);\n    };\n\n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {Promise}\n     */\n    Newlevel.prototype.handleFormSubmissionResponse = function() {\n        this.modal.hide();\n        // We could trigger an event instead.\n        // Yuk.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        document.location.reload();\n    };\n\n    /**\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     * @type {data}\n     */\n    Newlevel.prototype.handleFormSubmissionFailure = function(data) {\n        // Oh noes! Epic fail :(\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n\n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    Newlevel.prototype.submitFormAjax = function(e) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n        // Now we can continue...\n        Ajax.call([{\n            methodname: 'local_skillrepository_submit_level_form',\n            args: {contextid: this.args.contextid, jsonformdata: formData},\n            done: this.handleFormSubmissionResponse.bind(this, formData),\n            fail: this.handleFormSubmissionFailure.bind(this, formData)\n        }]);\n    };\n\n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    Newlevel.prototype.submitForm = function(e) {\n        e.preventDefault();\n        var self = this;\n        self.modal.getRoot().find('form').submit();\n    };\n    return{\n        init: function(args){\n            return new Newlevel(args);\n        },\n        leveltable: function(){\n            $(\"#all_levels_display_table\").dataTable({\n                \"processing\": true,\n                \"bServerSide\": true,\n                \"sAjaxSource\":M.cfg.wwwroot + \"/local/skillrepository/ajax.php?action=getlevelstable\",\n                \"aaSorting\": [],\n                \"pageLength\": 10,\n            });\n            $(\"#all_levels_display_table\").css('width', '100%');\n        },\n        deletelevel: function(args){\n\n            return Str.get_strings([{\n                key: 'confirm'\n            },\n            {\n                key: 'deletelevelconfirm',\n                component: 'local_skillrepository',\n                param :args\n            },\n            {\n                key: 'cancel',\n                component: 'local_skillrepository',\n            },\n            {\n                key: 'delete'\n            }]).then(function(s) {\n                ModalFactory.create({\n                    title: s[0],\n                    type: ModalFactory.types.DEFAULT,\n                    body: s[1],\n                    footer: '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">'+s[2]+'</button>&nbsp;' +\n                        '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">'+s[3]+'</button>'\n                }).done(function(modal) {\n                    this.modal = modal;\n                    modal.getRoot().find('[data-action=\"save\"]').on('click', function() {\n                        args.confirm = true;\n                        $.ajax({\n                            method: \"POST\",\n                            dataType: \"json\",\n                            url: M.cfg.wwwroot + \"/local/skillrepository/ajax.php?action=deletelevel&levelid=\"+args.levelid,\n                            success: function(){\n                                window.location.reload();\n                            },\n                        });\n                    }.bind(this));\n                    modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                        modal.setBody('');\n                        modal.hide();\n                    });\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n        },\n\n        nodeletelevel: function (args) {\n        return Str.get_strings([{\n          key: 'reason',\n          component: 'local_skillrepository'\n        },\n        {\n          key: 'deletelevelnotconfirm',\n          component: 'local_skillrepository',\n          param: args\n        }]).then(function (s) {\n          ModalFactory.create({\n            title: s[0],\n            type: ModalFactory.types.DEFAULT,\n            body: s[1],\n          }).done(function (modal) {\n            this.modal = modal;\n            modal.show();\n          }.bind(this));\n        }.bind(this));\n      },\n    };\n});\n"],"names":["define","dataTable","Str","ModalFactory","ModalEvents","Ajax","Fragment","$","Newlevel","args","this","init","prototype","modal","contextid","self","levelid","head","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","setLarge","getRoot","addClass","on","hidden","animate","setTimeout","destroy","shown","append","getFooter","find","hide","save","submitForm","submitFormAjax","show","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","Y","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","data","setBody","e","preventDefault","formData","serialize","call","methodname","done","fail","submit","leveltable","cfg","wwwroot","css","deletelevel","get_strings","key","component","param","s","DEFAULT","footer","confirm","ajax","method","dataType","url","success","window","nodeletelevel"],"mappings":"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"}