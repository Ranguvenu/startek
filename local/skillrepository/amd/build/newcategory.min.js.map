{"version":3,"file":"newcategory.min.js","sources":["../src/newcategory.js"],"sourcesContent":["define(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n        \n        var NewCategory = function(args){\n        \tthis.args = args;\n        \tvar self = this;\n        \tself.init(args);\n        };\n\n        /**\n\t     * @var {Modal} modal\n\t     * @private\n\t     */\n\t    NewCategory.prototype.modal = null;\n\t \n\t    /**\n\t     * @var {int} contextid\n\t     * @private\n\t     */\n\t    NewCategory.prototype.contextid = -1;\n\n\t    NewCategory.prototype.init = function(args) {\n\t        // console.log(args);\n\t        //var triggers = $(selector);\n\t        var self = this;\n\t        if(args.categoryid){\n\t        \tvar head = Str.get_string('update_skillcategory', 'local_skillrepository');\n\t        }else{\n\t        \tvar head = Str.get_string('create_skillcategory', 'local_skillrepository');\n\t        }\n            return head.then(function(title) {\n                // Create the modal.\n                return ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: title,\n                    body: self.getBody()\n                });\n            }.bind(self)).then(function(modal) {\n\t                \n                // Keep a reference to the modal.\n                self.modal = modal;\n                // Forms are big, we want a big modal.\n                self.modal.setLarge();\n                this.modal.getRoot().addClass('openLMStransition local_skillrepository');\n     \n                // We want to reset the form every time it is opened.\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\n        \t        this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 5000);\n                }.bind(this));\n                // self.modal.getRoot().on(ModalEvents.hidden, function() {\n                // \tmodal.hide();\n                //         setTimeout(function(){\n                //             modal.destroy();\n                //         }, 5000);\n\t               //  //     self.modal.setBody(self.getBody());\n\t               //  }.bind(this));\n\t                    self.modal.getRoot().on(ModalEvents.shown, function() {\n\t                    self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n\t                    this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n\t                        modal.hide();\n\t                        setTimeout(function(){\n\t                            modal.destroy();\n\t                        }, 5000);\n\t                        // modal.destroy();\n\t                    });\n\t                }.bind(this));\n\t    \n\t                // We catch the modal save event, and use it to submit the form inside the modal.\n\t                // Triggering a form submission will give JS validation scripts a chance to check for errors.\n\t                self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n\t                // We also catch the form submit event and use it to submit the form with ajax.\n\t                self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n\t                self.modal.show();\n\t                this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n\t                return this.modal;\n\t            }.bind(this));       \n\t        \n\t        \n\t        // });\n\t        \n\t    };\n\n\t     /**\n\t     * @method getBody\n\t     * @private\n\t     * @return {Promise}\n\t     */\n\t    NewCategory.prototype.getBody = function(formdata) {\n\t        if (typeof formdata === \"undefined\") {\n\t            formdata = {};\n\t        }\n\t        // Get the content of the modal.\n\t        var params = {categoryid:this.args.categoryid, jsonformdata: JSON.stringify(formdata)};\n\t        return Fragment.loadFragment('local_skillrepository', 'skill_category_form', this.args.contextid, params);\n\t    \n\t    };\n\n\t    /**\n\t     * @method handleFormSubmissionResponse\n\t     * @private\n\t     * @return {Promise}\n\t     */\n\t    NewCategory.prototype.handleFormSubmissionResponse = function() {\n\t        this.modal.hide();\n\t        // We could trigger an event instead.\n\t        // Yuk.\n\t        Y.use('moodle-core-formchangechecker', function() {\n\t            M.core_formchangechecker.reset_form_dirty_state();\n\t        });\n\t        document.location.reload();\n    \t};\n\n    \t/**\n\t     * @method handleFormSubmissionFailure\n\t     * @private\n\t     * @return {Promise}\n\t     */\n\t    NewCategory.prototype.handleFormSubmissionFailure = function(data) {\n\t        // Oh noes! Epic fail :(\n\t        // Ah wait - this is normal. We need to re-display the form with errors!\n\t        this.modal.setBody(this.getBody(data));\n\t    };\n    \t\n    \t/**\n\t     * Private method\n\t     *\n\t     * @method submitFormAjax\n\t     * @private\n\t     * @param {Event} e Form submission event.\n\t     */\n\t    NewCategory.prototype.submitFormAjax = function(e) {\n\t        // We don't want to do a real form submission.\n\t        e.preventDefault();\n\t \n\t        // Convert all the form elements values to a serialised string.\n\t        var formData = this.modal.getRoot().find('form').serialize();\n\t        \n\t        // Now we can continue...\n\t        Ajax.call([{\n\t            methodname: 'local_skillrepository_submit_skill_category_form',\n\t            args: {contextid: this.args.contextid, jsonformdata: formData},\n\t            done: this.handleFormSubmissionResponse.bind(this, formData),\n\t            fail: this.handleFormSubmissionFailure.bind(this, formData)\n\t        }]);\n\t    };\n\n\t    /**\n\t     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n\t     *\n\t     * @method submitForm\n\t     * @param {Event} e Form submission event.\n\t     * @private\n\t     */\n\t    NewCategory.prototype.submitForm = function(e) {\n\t        e.preventDefault();\n\t        var self = this;\n\t        self.modal.getRoot().find('form').submit();\n\t    };\n\n    \treturn /** @alias module:local_skillrepository/newcategory */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n         * @param {int} contextid The contextid for the course.\n         * @return {Promise}\n         */\n        init: function(args) {\n            return new NewCategory(args);\n        },\n        load: function(){\n        },\n        deletecategory: function(args) {\n            console.log(args);\n            return Str.get_strings([{\n                key: 'confirm'\n            },\n            {\n                key: 'deleteconfirm',\n                component: 'local_skillrepository',\n                param :args\n            },\n            {\n                key: 'delete',\n            }]).then(function(s) {\n                ModalFactory.create({\n                    title: s[0],\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    body: s[1]\n                }).done(function(modal) {\n                    this.modal = modal;\n                    //modal.setSaveButtonText(s[2]);\n\n\t                modal.setSaveButtonText(Str.get_string('yes_delete', 'local_skillrepository'));\n\n\n\t                //For cancel button string changed//\n\t                var value=Str.get_string('cancel', 'local_skillrepository');\n\t                var button = this.modal.getFooter().find('[data-action=\"cancel\"]');\n\t                this.modal.asyncSet(value, button.text.bind(button));\n\n                    modal.getRoot().on(ModalEvents.save, function(e) {\n                        e.preventDefault();\n                        args.confirm = true;\n                    \t$.ajax({\n                            method: \"POST\",\n                            dataType: \"json\",\n                            url: M.cfg.wwwroot + \"/local/skillrepository/ajax.php?action=\"+args.selector+\"&categoryid=\"+args.categoryid,\n                            success: function(data){\n                                window.location.reload();\n                            }\n                        });\n                    }.bind(this));\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n        },\n        getskillslist: function(args) {\n            // modal to show the courses in a category\n            element = '.competencynames';\n            if(args.type == 'incompetencies'){\n                var params = {categoryid: args.categoryid, type: args.type, costcenterid: args.costcenterid};\n                var returndata =  Fragment.loadFragment('local_skillrepository', 'competency_skills_display', args.contextid, params);\n\n                ModalFactory.create({\n                    title: Str.get_string('categorypopup', 'local_users', args.categoryname),\n                    body: returndata\n                }).done(function(modal) {\n                    // Do what you want with your new modal.\n                    modal.show();\n                    modal.setLarge();\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        modal.setBody('');\n                    }.bind(this));\n                    modal.getRoot().find('[data-action=\"hide\"]').on('click', function() {\n                        $(element).removeClass('clicked');\n                        modal.hide();\n                        setTimeout(function(){\n                             modal.destroy();\n                        }, 500);\n                    });\n                });\n            }\n        },\n        reasonfor_unabletodelete: function(args) {\n            return Str.get_string(\n                'reason',\n                'local_skillrepository'\n            ).then(function(s) {\n                ModalFactory.create({\n                    title: s,\n                    type: ModalFactory.types.DEFAULT,\n                    body: args.reason\n                }).done(function(modal) {\n                    this.modal = modal;\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n        },\n    };\n});\n"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","NewCategory","args","this","init","prototype","modal","contextid","self","categoryid","head","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","setLarge","getRoot","addClass","on","hidden","animate","setTimeout","destroy","shown","append","getFooter","find","hide","save","submitForm","submitFormAjax","show","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","data","setBody","e","preventDefault","formData","serialize","call","methodname","done","fail","submit","load","deletecategory","console","log","get_strings","key","component","param","s","setSaveButtonText","value","button","asyncSet","text","confirm","ajax","method","dataType","url","cfg","wwwroot","selector","success","window","getskillslist","element","costcenterid","returndata","categoryname","removeClass","reasonfor_unabletodelete","DEFAULT","reason"],"mappings":"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"}