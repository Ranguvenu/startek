{"version":3,"file":"assigncoursecomp.min.js","sources":["../src/assigncoursecomp.js"],"sourcesContent":["define(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n        \n        var AssignCourseComp = function(args){\n        \tconsole.log(args);\n        \tthis.args = args;\n        \tvar self = this;\n        \tself.init(args);\n        };\n\n        /**\n\t     * @var {Modal} modal\n\t     * @private\n\t     */\n\t    AssignCourseComp.prototype.modal = null;\n\t \n\t    /**\n\t     * @var {int} contextid\n\t     * @private\n\t     */\n\t    AssignCourseComp.prototype.contextid = -1;\n\n\t    AssignCourseComp.prototype.init = function(args) {\n\t        var self = this;\n        \tvar head = Str.get_string('assigncomp', 'local_skillrepository');\n            return head.then(function(title) {\n                // Create the modal.\n                return ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: title,\n                    body: self.getBody()\n                });\n            }.bind(self)).then(function(modal) {\n\t                \n                // Keep a reference to the modal.\n                self.modal = modal;\n                // Forms are big, we want a big modal.\n                self.modal.setLarge();\n                this.modal.getRoot().addClass('openLMStransition local_skillrepository');\n     \n                // We want to reset the form every time it is opened.\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\n        \t        this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 5000);\n                }.bind(this));\n\t                    self.modal.getRoot().on(ModalEvents.shown, function() {\n\t                    self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n\t                    this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n\t                        modal.hide();\n\t                        setTimeout(function(){\n\t                            modal.destroy();\n\t                        }, 5000);\n\t                    });\n\t                }.bind(this));\n\t    \n\t                // We catch the modal save event, and use it to submit the form inside the modal.\n\t                // Triggering a form submission will give JS validation scripts a chance to check for errors.\n\t                self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n\t                // We also catch the form submit event and use it to submit the form with ajax.\n\t                self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n\t                self.modal.show();\n\t                this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n\t                return this.modal;\n\t            }.bind(this));       \n\t        \n\t        \n\t        // });\n\t        \n\t    };\n\n\t     /**\n\t     * @method getBody\n\t     * @private\n\t     * @return {Promise}\n\t     */\n\t    AssignCourseComp.prototype.getBody = function(formdata) {\n\t        if (typeof formdata === \"undefined\") {\n\t            formdata = {};\n\t        }\n\t        // Get the content of the modal.\n\t        var params = {costcenterid:this.args.costcenterid, courseid:this.args.courseid, jsonformdata: JSON.stringify(formdata)};\n\t        return Fragment.loadFragment('local_skillrepository', 'competencycourse_form', this.args.contextid, params);\n\t    \n\t    };\n\n\t    /**\n\t     * @method handleFormSubmissionResponse\n\t     * @private\n\t     * @return {Promise}\n\t     */\n\t    AssignCourseComp.prototype.handleFormSubmissionResponse = function() {\n\t        this.modal.hide();\n\t        // We could trigger an event instead.\n\t        // Yuk.\n\t        Y.use('moodle-core-formchangechecker', function() {\n\t            M.core_formchangechecker.reset_form_dirty_state();\n\t        });\n\t        document.location.reload();\n    \t};\n\n    \t/**\n\t     * @method handleFormSubmissionFailure\n\t     * @private\n\t     * @return {Promise}\n\t     */\n\t    AssignCourseComp.prototype.handleFormSubmissionFailure = function(data) {\n\t        // Oh noes! Epic fail :(\n\t        // Ah wait - this is normal. We need to re-display the form with errors!\n\t        this.modal.setBody(this.getBody(data));\n\t    };\n    \t\n    \t/**\n\t     * Private method\n\t     *\n\t     * @method submitFormAjax\n\t     * @private\n\t     * @param {Event} e Form submission event.\n\t     */\n\t    AssignCourseComp.prototype.submitFormAjax = function(e) {\n\t        // We don't want to do a real form submission.\n\t        e.preventDefault();\n\t \n\t        // Convert all the form elements values to a serialised string.\n\t        var formData = this.modal.getRoot().find('form').serialize();\n\t        \n\t        // Now we can continue...\n\t        Ajax.call([{\n\t            methodname: 'local_skillrepository_submit_competencycourse_form',\n\t            args: {contextid: this.args.contextid, costcenterid:this.costcenterid, jsonformdata: formData},\n\t            done: this.handleFormSubmissionResponse.bind(this, formData),\n\t            fail: this.handleFormSubmissionFailure.bind(this, formData)\n\t        }]);\n\t    };\n\n\t    /**\n\t     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n\t     *\n\t     * @method submitForm\n\t     * @param {Event} e Form submission event.\n\t     * @private\n\t     */\n\t    AssignCourseComp.prototype.submitForm = function(e) {\n\t        e.preventDefault();\n\t        var self = this;\n\t        self.modal.getRoot().find('form').submit();\n\t    };\n\n    \treturn /** @alias module:local_skillrepository/newcategory */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n         * @param {int} contextid The contextid for the course.\n         * @return {Promise}\n         */\n        init: function(args) {\n            return new AssignCourseComp(args);\n        },\n        load: function(){\n        },\n    };\n});"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","AssignCourseComp","args","console","log","this","init","prototype","modal","contextid","self","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","setLarge","getRoot","addClass","on","hidden","animate","setTimeout","destroy","shown","append","getFooter","find","hide","save","submitForm","submitFormAjax","show","formdata","params","costcenterid","courseid","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","data","setBody","e","preventDefault","formData","serialize","call","methodname","done","fail","submit","load"],"mappings":"AAAAA,gDAAO,CAAC,SAAU,WAAY,qBAAsB,oBAAqB,gBAAiB,YAAa,aAC/F,SAASC,EAAGC,IAAKC,aAAcC,YAAaC,SAAUC,KAAMC,OAExDC,iBAAmB,SAASC,MAC/BC,QAAQC,IAAIF,WACPA,KAAOA,KACDG,KACNC,KAAKJ,cAOdD,iBAAiBM,UAAUC,MAAQ,KAMnCP,iBAAiBM,UAAUE,WAAa,EAExCR,iBAAiBM,UAAUD,KAAO,SAASJ,UACnCQ,KAAOL,YACAV,IAAIgB,WAAW,aAAc,yBACzBC,KAAK,SAASC,cAEfjB,aAAakB,OAAO,CACvBC,KAAMnB,aAAaoB,MAAMC,YACzBJ,MAAOA,MACPK,KAAMR,KAAKS,aAEjBC,KAAKV,OAAOE,KAAK,SAASJ,cAGxBE,KAAKF,MAAQA,MAEbE,KAAKF,MAAMa,gBACNb,MAAMc,UAAUC,SAAS,gDAGzBf,MAAMc,UAAUE,GAAG3B,YAAY4B,OAAQ,gBACtCjB,MAAMc,UAAUI,QAAQ,OAAS,QAAS,KAC5CC,YAAW,WACPnB,MAAMoB,YACP,MACLR,KAAKf,OACFK,KAAKF,MAAMc,UAAUE,GAAG3B,YAAYgC,MAAO,WAC3CnB,KAAKF,MAAMc,UAAUQ,OAAO,8EACvBtB,MAAMuB,YAAYC,KAAK,0BAA0BR,GAAG,SAAS,WAC9DhB,MAAMyB,OACNN,YAAW,WACPnB,MAAMoB,YACP,SAETR,KAAKf,OAIPK,KAAKF,MAAMc,UAAUE,GAAG3B,YAAYqC,KAAMxB,KAAKyB,WAAWf,KAAKV,OAE/DA,KAAKF,MAAMc,UAAUE,GAAG,SAAU,OAAQd,KAAK0B,eAAehB,KAAKV,OACnEA,KAAKF,MAAM6B,YACN7B,MAAMc,UAAUI,QAAQ,OAAS,MAAO,KACtCrB,KAAKG,OACdY,KAAKf,QAYfJ,iBAAiBM,UAAUY,QAAU,SAASmB,eAClB,IAAbA,WACPA,SAAW,QAGXC,OAAS,CAACC,aAAanC,KAAKH,KAAKsC,aAAcC,SAASpC,KAAKH,KAAKuC,SAAUC,aAAcC,KAAKC,UAAUN,kBACtGxC,SAAS+C,aAAa,wBAAyB,wBAAyBxC,KAAKH,KAAKO,UAAW8B,SASxGtC,iBAAiBM,UAAUuC,6BAA+B,gBACjDtC,MAAMyB,OAGXjC,EAAE+C,IAAI,iCAAiC,WACnCC,EAAEC,uBAAuBC,4BAE7BC,SAASC,SAASC,UAQtBpD,iBAAiBM,UAAU+C,4BAA8B,SAASC,WAGzD/C,MAAMgD,QAAQnD,KAAKc,QAAQoC,QAUpCtD,iBAAiBM,UAAU6B,eAAiB,SAASqB,GAEjDA,EAAEC,qBAGEC,SAAWtD,KAAKG,MAAMc,UAAUU,KAAK,QAAQ4B,YAGjD7D,KAAK8D,KAAK,CAAC,CACPC,WAAY,qDACZ5D,KAAM,CAACO,UAAWJ,KAAKH,KAAKO,UAAW+B,aAAanC,KAAKmC,aAAcE,aAAciB,UACrFI,KAAM1D,KAAKyC,6BAA6B1B,KAAKf,KAAMsD,UACnDK,KAAM3D,KAAKiD,4BAA4BlC,KAAKf,KAAMsD,cAW1D1D,iBAAiBM,UAAU4B,WAAa,SAASsB,GAC7CA,EAAEC,iBACSrD,KACNG,MAAMc,UAAUU,KAAK,QAAQiC,UAGwB,CAU3D3D,KAAM,SAASJ,aACJ,IAAID,iBAAiBC,OAEhCgE,KAAM"}