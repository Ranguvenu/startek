{"version":3,"file":"newassigncompetencylevel.min.js","sources":["../src/newassigncompetencylevel.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_location/location\n * @class      NewInstitute\n * @package    local_location\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n\n    /**\n     * Constructor\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @param {int} contextid\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var NewAssignCompetencylevel = function(args) {\n        this.contextid = args.contextid;\n        this.costcenterid = args.costcenterid;\n        // this.competencyid = args.competencyid;\n        this.competencyid = args.repositoryid;\n        // this.positionid = args.positionid;\n        // this.levelid = args.levelid;\n        var self = this;\n        self.init(args.selector);\n    };\n\n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    NewAssignCompetencylevel.prototype.modal = null;\n\n    /**\n     * @var {int} contextid\n     * @private\n     */\n    NewAssignCompetencylevel.prototype.contextid = -1;\n\n    /**\n     * Initialise the class.\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @private\n     * @return {Promise}\n     */\n    NewAssignCompetencylevel.prototype.init = function(args) {\n        // console.log(args);\n        //var triggers = $(selector);\n        var self = this;\n            return Str.get_string('assignlevel', 'local_skillrepository',self).then(function(title) {\n                // Create the modal.\n                return ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: title,\n                    body: self.getBody()\n                });\n            }.bind(self)).then(function(modal) {\n\n                // Keep a reference to the modal.\n                self.modal = modal;\n                // self.modal.show();\n                // Forms are big, we want a big modal.\n                self.modal.setLarge();\n                // this.modal.getRoot().addClass('openLMStransition');\n\n                // We want to reset the form every time it is opened.\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\n                    this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 1000);\n                }.bind(this));\n\n                // We want to hide the submit buttons every time it is opened.\n                self.modal.getRoot().on(ModalEvents.shown, function() {\n                    self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n                    this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                        modal.hide();\n                        setTimeout(function(){\n                            modal.destroy();\n                        }, 1000);\n                        // modal.destroy();\n                    });\n                }.bind(this));\n\n\n                // We catch the modal save event, and use it to submit the form inside the modal.\n                // Triggering a form submission will give JS validation scripts a chance to check for errors.\n                self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n                // We also catch the form submit event and use it to submit the form with ajax.\n                self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n                self.modal.show();\n                this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n                return this.modal;\n            }.bind(this));\n\n\n        // });\n\n    };\n\n    /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    NewAssignCompetencylevel.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        // alert(formdata);\n        // Get the content of the modal.\n        var params = {costcenterid:this.costcenterid, competencyid:this.competencyid/*, skillid:this.skillid, positionid:this.positionid, levelid:this.levelid*/, jsonformdata: JSON.stringify(formdata)};\n        return Fragment.loadFragment('local_skillrepository', 'new_assigncompetencylevel', this.contextid, params);\n    };\n\n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {Promise}\n     */\n    NewAssignCompetencylevel.prototype.handleFormSubmissionResponse = function() {\n        this.modal.hide();\n        // We could trigger an event instead.\n        // Yuk.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        document.location.reload();\n    };\n\n    /**\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    NewAssignCompetencylevel.prototype.handleFormSubmissionFailure = function(data) {\n        // Oh noes! Epic fail :(\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n\n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    NewAssignCompetencylevel.prototype.submitFormAjax = function(e) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n\n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n        // alert(this.contextid);\n        // Now we can continue...\n        Ajax.call([{\n            methodname: 'local_skillrepository_submit_assigncompetencylevel_form',\n            args: {contextid: this.contextid, costcenterid:this.costcenterid, competencyid:this.competencyid/*, skillid:this.skillid, positionid:this.positionid, levelid:this.levelid*/, jsonformdata: JSON.stringify(formData)},\n            done: this.handleFormSubmissionResponse.bind(this, formData),\n            fail: this.handleFormSubmissionFailure.bind(this, formData)\n        }]);\n    };\n\n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    NewAssignCompetencylevel.prototype.submitForm = function(e) {\n        e.preventDefault();\n        var self = this;\n        self.modal.getRoot().find('form').submit();\n    };\n\n    return /** @alias module:local_location/newlocation */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n         * @param {int} contextid The contextid for the course.\n         * @return {Promise}\n         */\n        init: function(args) {\n\n            // alert(args.contextid);\n            return new NewAssignCompetencylevel(args);\n        },\n        load: function(){\n\n        },\n        getDomains: function() {\n            $(document).on('change', '#id_costcenterid', function(){\n                var orgID = $(this).val();\n                if(orgID){\n                    var promise = Ajax.call([{\n                        methodname: 'local_org_domains',\n                        args: {\n                            orgid: orgID,\n                        },\n                    }]);\n                    promise[0].done(function(resp) {\n                          customstrings = Str.get_strings(\n                        [{\n                            key: 'selectdomain',\n                            component: 'skillrepository'\n                        }]);\n                        return customstrings.then(function(strings) {\n                            var template =  '<option value=null>'+strings[0]+'</option>'; \n                        });                                 \n                            $.each(JSON.parse(resp), function( index, value) {\n                                template += '<option value = ' + index + ' >' +value + '</option>';\n                            });\n                            $('#id_domain').html(template);\n                    }).fail(function() {\n                        // do something with the exception\n                        alert('Error occured while processing request');\n                         window.location.reload();\n                    });\n                } else {\n                    customstrings = Str.get_strings(\n                    [{\n                        key: 'selectdomain',\n                        component: 'skillrepository'\n                    }]);\n                    return customstrings.then(function(strings) {\n                        var template =  '<option value=\\'\\'>'+strings[0]+'</option>';\n                    }); \n                    $('#id_domain').html(template);\n                }\n           });\n        },\n    };\n});"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","NewAssignCompetencylevel","args","contextid","costcenterid","competencyid","repositoryid","this","init","selector","prototype","modal","self","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","setLarge","getRoot","on","hidden","animate","setTimeout","destroy","shown","append","getFooter","find","hide","save","submitForm","submitFormAjax","show","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","data","setBody","e","preventDefault","formData","serialize","call","methodname","done","fail","submit","load","getDomains","orgID","val","customstrings","get_strings","key","component","strings","orgid","resp","alert","window"],"mappings":"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"}