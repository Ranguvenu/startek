{"version":3,"file":"skillsInterested.min.js","sources":["../src/skillsInterested.js"],"sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_courses/skillsInterested\n * @class      skillsInterested\n * @package    local_courses\n * @copyright  eabyas\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n define(['local_courses/jquery.dataTables', 'jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui', 'core/templates'],\n function (dataTable, $, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y, Templates) {\n\n   /**\n   * Constructor\n   *\n   * @param {object} args\n   *\n   * Each call to init gets it's own instance of this class.\n   */\n   var skillsInterested = function (args) {\n        this.contextid = 1;\n        this.id = args.id;\n        this.args = args;\n        this.init(args);\n   };\n\n   /**\n   * @var {Modal} modal\n   * @private\n   */\n   skillsInterested.prototype.modal = null;\n\n   /**\n   * @var {int} contextid\n   * @private\n   */\n   skillsInterested.prototype.contextid = -1;\n\n   /**\n   * Initialise the class.\n   *\n   * @param {String} selector used to find triggers for the new group modal.\n   * @private\n   * @return {Promise}\n   */\n  skillsInterested.prototype.init = function (args) {\n    \n     var self = this;\n     return Str.get_string('skills_interested', 'local_skillrepository', self).then(function (title) {\n         // Create the modal.\n         return ModalFactory.create({\n           type: ModalFactory.types.SAVE_CANCEL,\n           title: title,\n           body: self.getBody()\n         });\n     }.bind(self)).then(function (modal) {\n\n       // Keep a reference to the modal.\n       self.modal = modal;\n      \n       // We want to reset the form every time it is opened.\n       this.modal.getRoot().on(ModalEvents.hidden, function () {\n         //this.modal.getRoot().animate({ \"right\": \"-85%\" }, 500);\n         setTimeout(function () {\n           modal.destroy();\n         }, 1000);\n       }.bind(this));\n\n       // We want to hide the submit buttons every time it is opened.\n       self.modal.getRoot().on(ModalEvents.shown, function () {\n         self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n         this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function () {\n           modal.hide();\n           setTimeout(function () {\n             modal.destroy();\n           }, 1000);\n           // modal.destroy();\n         });\n       }.bind(this));\n\n\n       // We catch the modal save event, and use it to submit the form inside the modal.\n       // Triggering a form submission will give JS validation scripts a chance to check for errors.\n       self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\n       // We also catch the form submit event and use it to submit the form with ajax.\n       self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\n       self.modal.show();\n       this.modal.getRoot().animate({ \"right\": \"10%\" }, 800);\n       return this.modal;\n     }.bind(this));\n   };\n\n   /**\n   * @method getBody\n   * @private\n   * @return {Promise}\n   */\n   skillsInterested.prototype.getBody = function (formdata) {\n     if (typeof formdata === \"undefined\") {\n       formdata = {};\n     }\n     //this.args.jsonformdata = JSON.stringify(formdata);\n     return Fragment.loadFragment('local_skillrepository', 'skills_interested',this.contextid, this.args);\n\n   };\n   /**\n   * @method handleFormSubmissionResponse\n   * @private\n   * @return {Promise}\n   */\n   skillsInterested.prototype.handleFormSubmissionResponse = function () {\n     this.modal.hide();\n     // We could trigger an event instead.\n     // Yuk.\n     Y.use('moodle-core-formchangechecker', function () {\n       M.core_formchangechecker.reset_form_dirty_state();\n     });\n     document.location.reload();\n   };\n\n   /**\n    * @method handleFormSubmissionFailure\n    * @private\n    * @return {Promise}\n    */\n   skillsInterested.prototype.handleFormSubmissionFailure = function (data) {\n     // Oh noes! Epic fail :(\n     // Ah wait - this is normal. We need to re-display the form with errors!\n     this.modal.setBody(this.getBody(data));\n   };\n\n   /**\n    * Private method\n    *\n    * @method submitFormAjax\n    * @private\n    * @param {Event} e Form submission event.\n    */\n   skillsInterested.prototype.submitFormAjax = function (e) {\n     // We don't want to do a real form submission.\n     e.preventDefault();\n     // Convert all the form elements values to a serialised string.\n     var formData = this.modal.getRoot().find('form').serialize();\n     var params = {};\n     params.contextid = this.contextid;\n     params.jsonformdata = JSON.stringify(formData);\n   \n     // Now we can continue...\n     Ajax.call([{\n       methodname: 'local_skillrepository_submit_skills_interested_form',\n       args: params,\n       done: this.handleFormSubmissionResponse.bind(this, formData),\n       fail: this.handleFormSubmissionFailure.bind(this, formData)\n     }]);\n\n   };\n\n   /**\n    * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n    *\n    * @method submitForm\n    * @param {Event} e Form submission event.\n    * @private\n    */\n   skillsInterested.prototype.submitForm = function (e) {\n     e.preventDefault();\n     var self = this;\n     self.modal.getRoot().find('form').submit();\n   };\n\n   return /** @alias module:local_skillrepository/skillsInterested */ {\n     // Public variables and functions.\n     /**\n      * @method statuspopup\n      * @param {string} args\n      * @return {Promise}\n      */\n     init: function (args) {\n        return new skillsInterested(args);\n     },\n\n     load: function () {\n     }\n   };\n\n });"],"names":["define","dataTable","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","Templates","skillsInterested","args","contextid","id","init","prototype","modal","self","this","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","getRoot","on","hidden","setTimeout","destroy","shown","append","getFooter","find","hide","save","submitForm","submitFormAjax","show","animate","formdata","loadFragment","handleFormSubmissionResponse","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","data","setBody","e","preventDefault","formData","serialize","params","jsonformdata","JSON","stringify","call","methodname","done","fail","submit","load"],"mappings":";;;;;;;;;AASCA,gDAAO,CAAC,kCAAmC,SAAU,WAAY,qBAAsB,oBAAqB,gBAAiB,YAAa,WAAY,mBACtJ,SAAUC,UAAWC,EAAGC,IAAKC,aAAcC,YAAaC,SAAUC,KAAMC,EAAGC,eASrEC,iBAAmB,SAAUC,WACvBC,UAAY,OACZC,GAAKF,KAAKE,QACVF,KAAOA,UACPG,KAAKH,cAOfD,iBAAiBK,UAAUC,MAAQ,KAMnCN,iBAAiBK,UAAUH,WAAa,EASzCF,iBAAiBK,UAAUD,KAAO,SAAUH,UAErCM,KAAOC,YACJf,IAAIgB,WAAW,oBAAqB,wBAAyBF,MAAMG,KAAK,SAAUC,cAE9EjB,aAAakB,OAAO,CACzBC,KAAMnB,aAAaoB,MAAMC,YACzBJ,MAAOA,MACPK,KAAMT,KAAKU,aAEfC,KAAKX,OAAOG,KAAK,SAAUJ,cAG3BC,KAAKD,MAAQA,WAGRA,MAAMa,UAAUC,GAAGzB,YAAY0B,OAAQ,WAE1CC,YAAW,WACThB,MAAMiB,YACL,MACHL,KAAKV,OAGPD,KAAKD,MAAMa,UAAUC,GAAGzB,YAAY6B,MAAO,WACzCjB,KAAKD,MAAMa,UAAUM,OAAO,8EACvBnB,MAAMoB,YAAYC,KAAK,0BAA0BP,GAAG,SAAS,WAChEd,MAAMsB,OACNN,YAAW,WACThB,MAAMiB,YACL,SAGLL,KAAKV,OAKPD,KAAKD,MAAMa,UAAUC,GAAGzB,YAAYkC,KAAMtB,KAAKuB,WAAWZ,KAAKX,OAE/DA,KAAKD,MAAMa,UAAUC,GAAG,SAAU,OAAQb,KAAKwB,eAAeb,KAAKX,OACnEA,KAAKD,MAAM0B,YACN1B,MAAMa,UAAUc,QAAQ,OAAW,OAAS,KAC1CzB,KAAKF,OACZY,KAAKV,QAQTR,iBAAiBK,UAAUY,QAAU,SAAUiB,sBACrB,IAAbA,WACTA,SAAW,IAGNtC,SAASuC,aAAa,wBAAyB,oBAAoB3B,KAAKN,UAAWM,KAAKP,OAQjGD,iBAAiBK,UAAU+B,6BAA+B,gBACnD9B,MAAMsB,OAGX9B,EAAEuC,IAAI,iCAAiC,WACrCC,EAAEC,uBAAuBC,4BAE3BC,SAASC,SAASC,UAQpB3C,iBAAiBK,UAAUuC,4BAA8B,SAAUC,WAG5DvC,MAAMwC,QAAQtC,KAAKS,QAAQ4B,QAUlC7C,iBAAiBK,UAAU0B,eAAiB,SAAUgB,GAEpDA,EAAEC,qBAEEC,SAAWzC,KAAKF,MAAMa,UAAUQ,KAAK,QAAQuB,YAC7CC,OAAS,GACbA,OAAOjD,UAAYM,KAAKN,UACxBiD,OAAOC,aAAeC,KAAKC,UAAUL,UAGrCpD,KAAK0D,KAAK,CAAC,CACTC,WAAY,sDACZvD,KAAMkD,OACNM,KAAMjD,KAAK4B,6BAA6BlB,KAAKV,KAAMyC,UACnDS,KAAMlD,KAAKoC,4BAA4B1B,KAAKV,KAAMyC,cAYtDjD,iBAAiBK,UAAUyB,WAAa,SAAUiB,GAChDA,EAAEC,iBACSxC,KACNF,MAAMa,UAAUQ,KAAK,QAAQgC,UAG+B,CAOjEvD,KAAM,SAAUH,aACN,IAAID,iBAAiBC,OAG/B2D,KAAM"}