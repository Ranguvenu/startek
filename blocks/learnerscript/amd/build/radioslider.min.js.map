{"version":3,"file":"radioslider.min.js","sources":["../src/radioslider.js"],"sourcesContent":["/**\n * radiosToSlider v0.3.2\n * jquery plugin to create a slider using a list of radio buttons\n * (c)2014 Rub√©n Torres - rubentdlh@gmail.com\n * Released under the MIT license\n */\ndefine(['jquery','block_learnerscript/report'], function($,report) {\n    var defaults = {\n                    size: 'medium',\n                    animation: true,\n                    fitContainer: true,\n                    isDisable: false,\n                    onSelect: null,\n                    reportdashboard: true\n                    };\n    return RadiosToSlider = {\n        init: function(element, options) {\n            this.KNOB_WIDTH = 10;\n            this.KNOB_MARGIN = 42;\n            this.LEVEL_MARGIN = this.KNOB_MARGIN + 10;\n            this.LABEL_WIDTH = 34;\n            this.LEVEL_WIDTH = 10;\n            this.bearer = element;\n            this.options = options;\n            this.currentLevel = 0; //this means no level selected\n            this.value = null;\n                var rtn = [],\n                    $this = element;\n\n                $this.each(function() {\n                    options = $.extend({}, this.defaults, options);\n                    RadiosToSlider.activate();\n\n                    rtn.push({\n                        bearer: this.bearer,\n                        setDisable: RadiosToSlider.setDisable.bind(RadiosToSlider),\n                        setEnable: RadiosToSlider.setEnable.bind(RadiosToSlider),\n                        getValue: RadiosToSlider.getValue.bind(RadiosToSlider)\n                    });\n                });\n        },\n        activate: function() {\n            // Get number options\n            this.numOptions = this.bearer.find('input[type=radio]').length;\n            this.reset(); // helps prevent duplication\n            this.fitContainer();\n            this.addBaseStyle();\n            this.addLevels();\n            this.addBar();\n            this.setSlider();\n            this.addInteraction();\n            this.setDisabled();\n\n            var slider = this;\n\n            $(window).on('resize orientationChanged', function() {\n                slider.reset();\n                slider.fitContainer();\n                slider.addBaseStyle();\n                slider.addLevels();\n                slider.setSlider();\n                slider.addInteraction();\n                slider.setDisabled();\n            });\n        },\n\n        reset: function() {\n            var $labels = this.bearer.find('label'),\n                $levels = this.bearer.find('.slider-level');\n\n            $labels.each(function() {\n                var $this = $(this);\n\n                $this.removeClass('slider-label');\n                $this.css('left', 0);\n            });\n\n            $levels.each(function() {\n                $(this).remove();\n            });\n\n            this.bearer.css('width', 'auto');\n        },\n\n        fitContainer: function() {\n            // If fitContainer, calculate KNOB_MARGIN based on container width\n            if (this.options.fitContainer) {\n                this.KNOB_MARGIN = (this.bearer.width() - this.KNOB_WIDTH) / (this.numOptions - 1) - this.KNOB_WIDTH;\n                this.LEVEL_MARGIN = this.KNOB_MARGIN + 10;\n            }\n        },\n\n        addBaseStyle: function() {\n            var label = 0,\n                slider = this,\n                width = (this.numOptions * this.LEVEL_WIDTH) + (this.numOptions - 1) * this.LEVEL_MARGIN;\n            this.bearer.find('input[type=radio]').hide();\n            this.bearer.addClass(\"radios-to-slider \" + this.options.size);\n            this.bearer.css('width', width + 'px');\n            this.bearer.find('label').each(function() {\n                var $this = $(this),\n                    leftPos = slider.KNOB_WIDTH / 2 - (slider.LABEL_WIDTH / 2) + label * slider.LEVEL_MARGIN + label * slider.LEVEL_WIDTH;\n                $this.addClass('slider-label');\n                $this.css('left', leftPos + 'px');\n                label++;\n            });\n        },\n\n        //Add level indicators to DOM\n        addLevels: function() {\n            var $bearer = this.bearer,\n                level = 0,\n                slider = this;\n\n            $bearer.find('input[type=radio]').each(function() {\n                var $this = $(this);\n\n                $bearer.append(\"<ins class='slider-level' data-radio='\" + $this.attr('id') + \"' data-value=\" + $this.val() + \"></ins>\");\n            });\n\n            $bearer.find('.slider-level').each(function() {\n                var $this = $(this),\n                    paddingLeft = $bearer.css('padding-left').replace('px', '') - 0,\n                    width = paddingLeft + (level * slider.LEVEL_MARGIN) + (level * slider.LEVEL_WIDTH);\n\n                $this.css('left', width + 'px');\n\n                level++;\n            });\n\n        },\n\n        //Add slider bar to DOM\n        addBar: function() {\n            this.bearer.append(\"<ins class='slider-bar'><span class='slider-knob'></span></ins>\");\n        },\n\n        //set width of slider bar and current level\n        setSlider: function() {\n            var $inputs = this.bearer.find('input[type=radio]'),\n                $levels = this.bearer.find('.slider-level'),\n                $labels = this.bearer.find('.slider-label'),\n                radio = 1,\n                slider = this,\n                label;\n\n            $inputs.each(function() {\n                var $this = $(this),\n                    $sliderbar = slider.bearer.find('.slider-bar'),\n                    radioId = $this.attr('id');\n\n                if ($this.prop('checked')) {\n                    var width = (radio * slider.KNOB_WIDTH) + (radio - 1) * slider.KNOB_MARGIN + 10 * (radio-1);\n\n                    $sliderbar.css('display', 'block');\n                    $sliderbar.width(width + 'px');\n\n                    slider.currentLevel = radio;\n                }\n\n                if (slider.options.animation) {\n                    $sliderbar.addClass('transition-enabled');\n                }\n\n                radio++;\n            });\n\n            //Set style for lower levels\n            label = 0;\n            $levels.each(function() {\n                label++;\n\n                var $this = $(this);\n\n                if (label < slider.currentLevel) {\n                    $this.show();\n                    $this.addClass('slider-lower-level');\n                } else if (label == slider.currentLevel) {\n                    $this.hide();\n                } else {\n                    $this.show();\n                    $this.removeClass('slider-lower-level');\n                }\n            });\n\n            //Add bold style for selected label\n            label = 0;\n            $labels.each(function() {\n                label++;\n\n                var $this = $(this);\n\n                if (label == slider.currentLevel) {\n                    $this.addClass('slider-label-active');\n                } else {\n                    $this.removeClass('slider-label-active');\n                }\n            });\n        },\n\n        addInteraction: function() {\n            var slider = this,\n                $bearer = slider.bearer,\n                $levels = $bearer.find('.slider-level:not(.disabled)'),\n                $inputs = $bearer.find('input[type=radio]:not(:disabled)');\n\n            $levels.on('click', function(e) {\n                e.stopImmediatePropagation();\n                var $this = $(this),\n                    val = $this.attr('data-value'),\n                    radioId = $this.attr('data-radio'),\n                    radioElement = $bearer.find('#' + radioId);\n                require(['block_learnerscript/smartfilter'], function(smartfilter) {\n                        smartfilter.DurationFilter(val, slider.options.reportdashboard);\n                    });\n                radioElement.prop('checked', true);\n\n                if (slider.options.onSelect) {\n                    slider.options.onSelect(radioElement, [\n                        $levels,\n                        $inputs\n                    ]);\n                }\n                slider.value = val;\n                $bearer.attr('data-value', val);\n\n                slider.setSlider();\n\n                $bearer.trigger('radiochange');\n            });\n\n            $inputs.on('change', function(e) {\n                e.stopImmediatePropagation();\n                var $this = $(this),\n                    val = $this.attr('value'),\n                    radioId = $this.attr('data-radio'),\n                    radioElement = $bearer.find('#' + radioId);\n                require(['block_learnerscript/smartfilter'], function(smartfilter) {\n                        smartfilter.DurationFilter(val, slider.options.reportdashboard);\n                    });\n\n                radioElement.prop('checked', true);\n\n                if (slider.options.onChange) {\n                    slider.options.onChange(radioElement, [\n                        $levels,\n                        $inputs\n                    ]);\n                }\n\n                slider.value = val;\n                $bearer.attr('data-value', val);\n\n                slider.setSlider();\n                $bearer.trigger('radiochange');\n            });\n\n        },\n\n        setDisabled: function(isDisable, cb) {\n            if (!this.options.isDisable) return;\n\n            this.setDisable();\n        },\n\n        setDisable: function(cb) {\n            this.options.isDisable = true;\n\n            var slider = this,\n                $bearer = slider.bearer,\n                $levels = this.bearer.find('.slider-level'),\n                $inputs = this.bearer.find('input[type=radio]');\n\n            $.merge($levels, $inputs).each(function() {\n                var $this = $(this);\n\n                $this.prop('disabled', true).addClass('disabled');\n                $this.off('click change');\n            });\n\n            if (typeof cb === \"function\") {\n                cb($levels, $inputs);\n            }\n\n            $bearer.trigger('radiodisabled');\n        },\n\n        setEnable: function(cb) {\n            this.options.isDisable = false;\n\n            var slider = this,\n                $bearer = slider.bearer,\n                $levels = this.bearer.find('.slider-level'),\n                $inputs = this.bearer.find('input[type=radio]');\n\n            $.merge($levels, $inputs).each(function() {\n                $(this).prop('disabled', false).removeClass('disabled');\n                slider.addInteraction();\n            });\n\n            if (typeof cb === \"function\") {\n                cb($levels, $inputs);\n            }\n\n            $bearer.trigger('radiodenabled');\n        },\n\n        getValue: function() {\n            return this.value;\n        }\n\n    };\n});"],"names":["define","$","report","RadiosToSlider","init","element","options","KNOB_WIDTH","KNOB_MARGIN","LEVEL_MARGIN","this","LABEL_WIDTH","LEVEL_WIDTH","bearer","currentLevel","value","rtn","each","extend","defaults","activate","push","setDisable","bind","setEnable","getValue","numOptions","find","length","reset","fitContainer","addBaseStyle","addLevels","addBar","setSlider","addInteraction","setDisabled","slider","window","on","$labels","$levels","$this","removeClass","css","remove","width","label","hide","addClass","size","leftPos","$bearer","level","append","attr","val","replace","$inputs","radio","$sliderbar","prop","animation","show","e","stopImmediatePropagation","radioId","radioElement","require","smartfilter","DurationFilter","reportdashboard","onSelect","trigger","onChange","isDisable","cb","merge","off"],"mappings":"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"}