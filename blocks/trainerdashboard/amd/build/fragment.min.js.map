{"version":3,"file":"fragment.min.js","sources":["../src/fragment.js"],"sourcesContent":["/*\n* This file is a part of e abyas Info Solutions.\n*\n* Copyright e abyas Info Solutions Pvt Ltd, India.\n*\n* This trainerdashboard is free software; you can redistribute it and/or modify\n* it under the terms of the GNU General Public License as published by\n* the Free Software Foundation; either version 3 of the License, or\n* (at your option) any later version.\n*\n* This trainerdashboard is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU General Public License for more details.\n*\n* You should have received a copy of the GNU General Public License\n* along with this trainerdashboard.  If not, see <http://www.gnu.org/licenses/>.\n*\n* @author 2019 e abyas  <info@eabyas.com>\n*/\n/**\n * Defines form and confirmation pops (types view and confirmation pops)\n *\n * @package    block_trainerdashboard\n * @copyright  2019 e abyas  <info@eabyas.com>\n */\ndefine(['jquery',\n        'core/str',\n        'core/modal_factory',\n        'core/modal_events',\n        'core/fragment',\n        'core/ajax',\n        'core/yui',\n        'core/templates',\n        'core/notification',\n        'core/custom_interaction_events',\n        'block_trainerdashboard/trainerdashboard'],\n        function($, Str, ModalFactory, ModalEvents, fragment, Ajax, Y, Templates, Notification, CustomEvents,trainerdashboard) {\n        var SELECTORS = {\n            ELEMENT: '[data-fg]',\n        };\n        var DATAATTRIBUTES = {\n            ELEFG: 'fg',\n            PLUGIN: 'plugin',\n            METHOD: 'method',\n            PARAMS: 'params',\n            TRIGGERTYPE: 'triggertype',\n            JSONFORMDATA: 'jsonformdata',\n            \n        };\n        var Fragment = function(fgelement) {\n            this.contextid = M.cfg.contextid;\n            this.fgelement = fgelement;\n            this.id = fgelement.data('id') || 0;\n            this.pluginname = fgelement.data(DATAATTRIBUTES.PLUGIN);\n            this.method = fgelement.data(DATAATTRIBUTES.METHOD);\n            this.level = fgelement.data(DATAATTRIBUTES.ELEFG);\n            this.args = {};\n            this.args.contextid = this.contextid;\n            this.args.id = this.id;\n            var params = {};\n            if (typeof fgelement.data(DATAATTRIBUTES.PARAMS) !== 'undefined') {\n                params = fgelement.data(DATAATTRIBUTES.PARAMS);\n            }\n            if (typeof fgelement.data(DATAATTRIBUTES.JSONFORMDATA) !== 'undefined') {\n                this.args.jsonformdata =  JSON.stringify(fgelement.data(DATAATTRIBUTES.JSONFORMDATA));\n            }\n       \n            this.args.params = JSON.stringify(params);\n            this.args.triggertype = fgelement.data(DATAATTRIBUTES.TRIGGERTYPE);\n            this.init();\n        };\n\n        Fragment.prototype.contextid = -1;\n\n        Fragment.prototype.id = 0;\n\n        Fragment.prototype.level = 'c';\n\n        Fragment.prototype.strings = {};\n\n        Fragment.prototype.args = {};\n        /**\n         * [init description]\n         * @method init\n         * @return {[type]} [description]\n         */\n        Fragment.prototype.init = function () {\n            var self = this;\n            var stringsPromise = this.getStrings();\n            var type = ModalFactory.types.SAVE_CANCEL;\n            if (self.level == 'r') {\n                type = ModalFactory.types.DEFAULT;\n            }\n            if (self.level == 'vmtotaltrainings' || self.level == 'vmcmpltdtrainings' || self.level == 'vmupcmngtrainings') {\n                var modalPromise = ModalFactory.create({\n                    type: ModalFactory.types.DEFAULT,\n                    footer: this.getFooter(),\n                });\n            }else{\n                var modalPromise = ModalFactory.create({\n                    type: type,\n                });\n            }\n\n \n            $.when(stringsPromise, modalPromise).then(function(strings, modal) {\n                // Keep a reference to the modal.\n                this.modal = modal;\n                this.modal.setTitle(strings[0]);\n\n                // We want to desrtroy the form every time it is opened.\n                if (self.level == 'r') {\n                    this.modal.setBody(this.getBody());\n                    this.modal.setLarge();\n                    // We want to desrtroy the form every time it is opened.\n                    this.modal.getRoot().on(ModalEvents.hidden, function() {\n                        this.modal.destroy();\n                    }.bind(this));\n                }else if (self.level == 'vmtotaltrainings' || self.level == 'vmcmpltdtrainings' || self.level == 'vmupcmngtrainings') {\n                    this.modal.setBody(this.getBody());\n                    this.modal.setLarge();\n                    // We want to desrtroy the form every time it is opened.\n                    this.modal.getRoot().on(ModalEvents.hidden, function() {\n                        this.modal.destroy();\n                    }.bind(this));\n                }\n                else {\n\n                    self.modal.getRoot().addClass('openLMStransition');\n                   \n                    this.modal.getRoot().on(ModalEvents.hidden, function() {\n                    //this.modal.destroy();\n                    this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                    setTimeout(function(){\n                    modal.destroy();\n                    }, 1000);\n                    }.bind(this));\n\n                    this.modal.setBody(this.getBody());\n                    // Forms are big, we want a big modal.\n                    this.modal.setLarge();\n                    if (this.level == 'c') {\n                        var submitlabel = strings[1];\n                    } else if (this.level == 'u') {\n                        var submitlabel = strings[1];\n                    }\n\n                    this.modal.setSaveButtonText(submitlabel);\n                    // We catch the modal save event, and use it to submit the form inside the modal.\n                    // Triggering a form submission will give JS validation scripts a chance to check for errors.\n                    this.modal.getRoot().on(ModalEvents.save, this.submitForm.bind(this));\n                    // We also catch the form submit event and use it to submit the form with ajax.\n                    this.modal.getRoot().on('submit', 'form', this.submitFormAjax.bind(this));\n                \n                }\n                this.modal.show();\n                this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n\n            }.bind(this));\n\n        };\n        /**\n         * [getStrings description]\n         * @method getStrings\n         * @param  {[type]}   StringData [description]\n         * @return {[type]}              [description]\n         */\n        Fragment.prototype.getStrings = function() {\n            var self = this;\n            var StringData = this.requiredStrings();\n            var RequiredStrings = [];\n            var i = 0;\n            $.each (StringData, function(key, value) {\n                RequiredStrings[i] = {key: key, component: self.pluginname, param: value};\n                i++;\n            });\n            var stringsPromise = Str.get_strings(RequiredStrings);\n            return stringsPromise;\n        };\n\n        /**\n         * @method getBody\n         * @private\n         * @return {Promise}\n         */\n        Fragment.prototype.getBody = function(formdata) {\n            if (typeof formdata === \"undefined\") {\n                formdata = {};\n            }\n\n            this.custommethod=this.method;\n            // Get the content of the modal.\n            this.args.jsonformdata = JSON.stringify(formdata);\n            return fragment.loadFragment(this.pluginname, this.custommethod, this.contextid, this.args);\n        };\n        /**\n        * @method getFooter\n        * @private\n        * @return {Promise}\n        */\n        Fragment.prototype.getFooter = function() {\n\n            $footer = '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\" style=\"display:none;\">Close</button>';\n        return $footer;\n        };\n\n        /**\n         * @method handleFormSubmissionResponse\n         * @private\n         * @return {Promise}\n         */\n        Fragment.prototype.handleFormSubmissionResponse = function() {\n            this.modal.hide();\n            this.modal.destroy();\n            // We could trigger an event instead.\n            // Yuk.\n            Y.use('moodle-core-formchangechecker', function() {\n                M.core_formchangechecker.reset_form_dirty_state();\n            });\n\n            var PluginModule = require(this.pluginname  + '/' + this.pluginname.split('_')[1]);\n\n            if (typeof PluginModule.childform === 'function') {\n                PluginModule.childform(this);\n            } else {\n                this.handleNotifications('success', {});\n            }\n        };\n\n        /**\n         * @method handleFormSubmissionFailure\n         * @private\n         * @return {Promise}\n         */\n        Fragment.prototype.handleFormSubmissionFailure = function(data) {\n            // Oh noes! Epic fail :(\n            // Ah wait - this is normal. We need to re-display the form with errors!\n            this.modal.setBody(this.getBody(data));\n        };\n\n        /**\n         * Private method\n         *\n         * @method submitFormAjax\n         * @private\n         * @param {Event} e Form submission event.\n         */\n        Fragment.prototype.submitFormAjax = function(e) {\n            // We don't want to do a real form submission.\n            e.preventDefault();\n\n            // Convert all the form elements values to a serialised string.\n            var formData = this.modal.getRoot().find('form').serialize();\n            this.args.jsonformdata = JSON.stringify(formData);\n            \n \n            this.custommethod=this.method;\n            \n            // Now we can continue...\n            var value=Ajax.call([{\n                methodname: 'blocks_trainerdashboard' + '_' + this.custommethod,\n                args: this.args,\n                done: this.handleFormSubmissionResponse.bind(this, formData),\n                fail: this.handleFormSubmissionFailure.bind(this, formData)\n            }]);\n            var body = $('[data-region=\"body\"]');\n            var TEMPLATES = {\n                LOADING: 'core/loading',\n                BACKDROP: 'core/modal_backdrop',\n            };\n            if (value[0].state() == 'pending') {\n                // We're still waiting for the body promise to resolve so\n                // let's show a loading icon.\n                var height = body.innerHeight();\n                if (height < 100) {\n                    height = 100;\n                }\n\n                body.animate({height: height + 'px'}, 150);\n\n                body.html('');\n                contentPromise = Templates.render(TEMPLATES.LOADING, {})\n                    .then(function(html) {\n                        var loadingIcon = $(html).hide();\n                        body.html(loadingIcon);\n                        loadingIcon.fadeIn(150);\n\n                        // We only want the loading icon to fade out\n                        // when the content for the body has finished\n                        // loading.\n                        return $.when(loadingIcon.promise(), value);\n                    })\n                    .then(function(loadingIcon) {\n                        // Once the content has finished loading and\n                        // the loading icon has been shown then we can\n                        // fade the icon away to reveal the content.\n                        return loadingIcon.promise();\n                    })\n                    .then(function() {\n                        return value;\n                    });\n            }\n        };\n\n        /**\n         * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n         *\n         * @method submitForm\n         * @param {Event} e Form submission event.\n         * @private\n         */\n        Fragment.prototype.submitForm = function(e) {\n            e.preventDefault();\n            this.modal.getRoot().find('form').submit();\n        };\n\n        /**\n         * [requiredStrings description]\n         * @method requiredStrings\n         * @return {[type]}        [description]\n         */\n        Fragment.prototype.requiredStrings = function() {\n            var StringData = {};\n            var PluginModule = require(this.pluginname  + '/' + this.pluginname.split('_')[1]);\n            if (typeof PluginModule.requiredStrings === 'function') {\n                StringData = PluginModule.requiredStrings(this);\n            }\n            this.strings = StringData;\n            return StringData;\n        };\n    return {\n        init: function() {\n            $(document).on('click', SELECTORS.ELEMENT, function(e) {\n                e.preventDefault();\n                var fgelement = $(this);\n                new Fragment(fgelement);\n            });\n        },\n    };\n});"],"names":["define","$","Str","ModalFactory","ModalEvents","fragment","Ajax","Y","Templates","Notification","CustomEvents","trainerdashboard","SELECTORS","DATAATTRIBUTES","Fragment","fgelement","contextid","M","cfg","id","data","pluginname","method","level","args","this","params","jsonformdata","JSON","stringify","triggertype","init","prototype","strings","self","stringsPromise","getStrings","type","types","SAVE_CANCEL","DEFAULT","modalPromise","create","footer","getFooter","when","then","modal","setTitle","setBody","getBody","setLarge","getRoot","on","hidden","destroy","bind","addClass","animate","setTimeout","submitlabel","setSaveButtonText","save","submitForm","submitFormAjax","show","StringData","requiredStrings","RequiredStrings","i","each","key","value","component","param","get_strings","formdata","custommethod","loadFragment","$footer","handleFormSubmissionResponse","hide","use","core_formchangechecker","reset_form_dirty_state","PluginModule","require","split","childform","handleNotifications","handleFormSubmissionFailure","e","preventDefault","formData","find","serialize","call","methodname","done","fail","body","state","height","innerHeight","html","contentPromise","render","loadingIcon","fadeIn","promise","submit","document"],"mappings":"AA0BAA,yCAAO,CAAC,SACA,WACA,qBACA,oBACA,gBACA,YACA,WACA,iBACA,oBACA,iCACA,4CACA,SAASC,EAAGC,IAAKC,aAAcC,YAAaC,SAAUC,KAAMC,EAAGC,UAAWC,aAAcC,aAAaC,sBACjGC,kBACS,YAETC,qBACO,KADPA,sBAEQ,SAFRA,sBAGQ,SAHRA,sBAIQ,SAJRA,2BAKa,cALbA,4BAMc,eAGdC,SAAW,SAASC,gBACfC,UAAYC,EAAEC,IAAIF,eAClBD,UAAYA,eACZI,GAAKJ,UAAUK,KAAK,OAAS,OAC7BC,WAAaN,UAAUK,KAAKP,4BAC5BS,OAASP,UAAUK,KAAKP,4BACxBU,MAAQR,UAAUK,KAAKP,2BACvBW,KAAO,QACPA,KAAKR,UAAYS,KAAKT,eACtBQ,KAAKL,GAAKM,KAAKN,OAChBO,OAAS,QACwC,IAA1CX,UAAUK,KAAKP,yBACtBa,OAASX,UAAUK,KAAKP,6BAE+B,IAAhDE,UAAUK,KAAKP,oCACjBW,KAAKG,aAAgBC,KAAKC,UAAUd,UAAUK,KAAKP,oCAGvDW,KAAKE,OAASE,KAAKC,UAAUH,aAC7BF,KAAKM,YAAcf,UAAUK,KAAKP,iCAClCkB,eAGTjB,SAASkB,UAAUhB,WAAa,EAEhCF,SAASkB,UAAUb,GAAK,EAExBL,SAASkB,UAAUT,MAAQ,IAE3BT,SAASkB,UAAUC,QAAU,GAE7BnB,SAASkB,UAAUR,KAAO,GAM1BV,SAASkB,UAAUD,KAAO,eAClBG,KAAOT,KACPU,eAAiBV,KAAKW,aACtBC,KAAOlC,aAAamC,MAAMC,eACZ,KAAdL,KAAKX,QACLc,KAAOlC,aAAamC,MAAME,SAEZ,oBAAdN,KAAKX,OAA6C,qBAAdW,KAAKX,OAA8C,qBAAdW,KAAKX,UAC1EkB,aAAetC,aAAauC,OAAO,CACnCL,KAAMlC,aAAamC,MAAME,QACzBG,OAAQlB,KAAKmB,mBAGbH,aAAetC,aAAauC,OAAO,CACnCL,KAAMA,OAKdpC,EAAE4C,KAAKV,eAAgBM,cAAcK,KAAK,SAASb,QAASc,eAEnDA,MAAQA,WACRA,MAAMC,SAASf,QAAQ,IAGV,KAAdC,KAAKX,WACAwB,MAAME,QAAQxB,KAAKyB,gBACnBH,MAAMI,gBAENJ,MAAMK,UAAUC,GAAGjD,YAAYkD,OAAQ,gBACnCP,MAAMQ,WACbC,KAAK/B,YACL,GAAkB,oBAAdS,KAAKX,OAA6C,qBAAdW,KAAKX,OAA8C,qBAAdW,KAAKX,WAC/EwB,MAAME,QAAQxB,KAAKyB,gBACnBH,MAAMI,gBAENJ,MAAMK,UAAUC,GAAGjD,YAAYkD,OAAQ,gBACnCP,MAAMQ,WACbC,KAAK/B,WAEN,IAEDS,KAAKa,MAAMK,UAAUK,SAAS,0BAEzBV,MAAMK,UAAUC,GAAGjD,YAAYkD,OAAQ,gBAEvCP,MAAMK,UAAUM,QAAQ,OAAS,QAAS,KAC/CC,YAAW,WACXZ,MAAMQ,YACH,MACDC,KAAK/B,YAEFsB,MAAME,QAAQxB,KAAKyB,gBAEnBH,MAAMI,WACO,KAAd1B,KAAKF,UACDqC,YAAc3B,QAAQ,QACvB,GAAkB,KAAdR,KAAKF,MACRqC,YAAc3B,QAAQ,QAGzBc,MAAMc,kBAAkBD,kBAGxBb,MAAMK,UAAUC,GAAGjD,YAAY0D,KAAMrC,KAAKsC,WAAWP,KAAK/B,YAE1DsB,MAAMK,UAAUC,GAAG,SAAU,OAAQ5B,KAAKuC,eAAeR,KAAK/B,YAGlEsB,MAAMkB,YACNlB,MAAMK,UAAUM,QAAQ,OAAS,MAAO,MAE/CF,KAAK/B,QASXX,SAASkB,UAAUI,WAAa,eACxBF,KAAOT,KACPyC,WAAazC,KAAK0C,kBAClBC,gBAAkB,GAClBC,EAAI,SACRpE,EAAEqE,KAAMJ,YAAY,SAASK,IAAKC,OAC9BJ,gBAAgBC,GAAK,CAACE,IAAKA,IAAKE,UAAWvC,KAAKb,WAAYqD,MAAOF,OACnEH,OAEiBnE,IAAIyE,YAAYP,kBASzCtD,SAASkB,UAAUkB,QAAU,SAAS0B,sBACV,IAAbA,WACPA,SAAW,SAGVC,aAAapD,KAAKH,YAElBE,KAAKG,aAAeC,KAAKC,UAAU+C,UACjCvE,SAASyE,aAAarD,KAAKJ,WAAYI,KAAKoD,aAAcpD,KAAKT,UAAWS,KAAKD,OAO1FV,SAASkB,UAAUY,UAAY,kBAE3BmC,QAAU,4GAAA,6GASdjE,SAASkB,UAAUgD,6BAA+B,gBACzCjC,MAAMkC,YACNlC,MAAMQ,UAGXhD,EAAE2E,IAAI,iCAAiC,WACnCjE,EAAEkE,uBAAuBC,gCAGzBC,aAAeC,QAAQ7D,KAAKJ,WAAc,IAAMI,KAAKJ,WAAWkE,MAAM,KAAK,IAEzC,mBAA3BF,aAAaG,UACpBH,aAAaG,UAAU/D,WAElBgE,oBAAoB,UAAW,KAS5C3E,SAASkB,UAAU0D,4BAA8B,SAAStE,WAGjD2B,MAAME,QAAQxB,KAAKyB,QAAQ9B,QAUpCN,SAASkB,UAAUgC,eAAiB,SAAS2B,GAEzCA,EAAEC,qBAGEC,SAAWpE,KAAKsB,MAAMK,UAAU0C,KAAK,QAAQC,iBAC5CvE,KAAKG,aAAeC,KAAKC,UAAUgE,eAGnChB,aAAapD,KAAKH,WAGnBkD,MAAMlE,KAAK0F,KAAK,CAAC,CACjBC,WAAY,2BAAkCxE,KAAKoD,aACnDrD,KAAMC,KAAKD,KACX0E,KAAMzE,KAAKuD,6BAA6BxB,KAAK/B,KAAMoE,UACnDM,KAAM1E,KAAKiE,4BAA4BlC,KAAK/B,KAAMoE,aAElDO,KAAOnG,EAAE,2BAKW,WAApBuE,MAAM,GAAG6B,QAAsB,KAG3BC,OAASF,KAAKG,cACdD,OAAS,MACTA,OAAS,KAGbF,KAAK1C,QAAQ,CAAC4C,OAAQA,OAAS,MAAO,KAEtCF,KAAKI,KAAK,IACVC,eAAiBjG,UAAUkG,OAdlB,eAc4C,IAChD5D,MAAK,SAAS0D,UACPG,YAAc1G,EAAEuG,MAAMvB,cAC1BmB,KAAKI,KAAKG,aACVA,YAAYC,OAAO,KAKZ3G,EAAE4C,KAAK8D,YAAYE,UAAWrC,UAExC1B,MAAK,SAAS6D,oBAIJA,YAAYE,aAEtB/D,MAAK,kBACK0B,WAYvB1D,SAASkB,UAAU+B,WAAa,SAAS4B,GACrCA,EAAEC,sBACG7C,MAAMK,UAAU0C,KAAK,QAAQgB,UAQtChG,SAASkB,UAAUmC,gBAAkB,eAC7BD,WAAa,GACbmB,aAAeC,QAAQ7D,KAAKJ,WAAc,IAAMI,KAAKJ,WAAWkE,MAAM,KAAK,UACnC,mBAAjCF,aAAalB,kBACpBD,WAAamB,aAAalB,gBAAgB1C,YAEzCQ,QAAUiC,WACRA,YAER,CACHnC,KAAM,WACF9B,EAAE8G,UAAU1D,GAAG,QAASzC,mBAAmB,SAAS+E,GAChDA,EAAEC,qBACE7E,UAAYd,EAAEwB,UACdX,SAASC"}